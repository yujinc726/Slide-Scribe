1
00:00:00,360 --> 00:00:00,580
진도는

2
00:00:00,580 --> 00:00:00,740
아무

3
00:00:00,740 --> 00:00:01,000
문제가

4
00:00:01,000 --> 00:00:01,300
없어요.

5
00:00:02,280 --> 00:00:02,740
아직

6
00:00:02,740 --> 00:00:03,360
싱글사이클

7
00:00:03,360 --> 00:00:03,720
CPU도

8
00:00:03,720 --> 00:00:03,900
덜

9
00:00:03,900 --> 00:00:04,220
나갔고,

10
00:00:04,280 --> 00:00:05,080
아리스매틱도

11
00:00:05,080 --> 00:00:05,700
못했다.

12
00:00:07,620 --> 00:00:07,780
진도

13
00:00:07,780 --> 00:00:08,260
맞추는데

14
00:00:08,260 --> 00:00:08,700
이슈가

15
00:00:08,700 --> 00:00:08,840
있을

16
00:00:08,840 --> 00:00:08,940
것

17
00:00:08,940 --> 00:00:09,180
같긴

18
00:00:09,180 --> 00:00:09,620
한데,

19
00:00:11,120 --> 00:00:11,700
저희는

20
00:00:11,700 --> 00:00:12,260
아무리

21
00:00:12,260 --> 00:00:12,740
늦어도

22
00:00:12,740 --> 00:00:13,680
자유람습

23
00:00:13,680 --> 00:00:14,100
중간

24
00:00:14,100 --> 00:00:14,600
전까지

25
00:00:14,600 --> 00:00:15,040
이미

26
00:00:15,040 --> 00:00:15,260
진도

27
00:00:15,260 --> 00:00:15,460
다

28
00:00:15,460 --> 00:00:15,980
끝납니다.

29
00:00:16,920 --> 00:00:17,920
그리고

30
00:00:17,920 --> 00:00:19,000
휘말보살때

31
00:00:19,000 --> 00:00:19,480
여러분들

32
00:00:19,480 --> 00:00:19,760
다

33
00:00:19,760 --> 00:00:20,800
시험치실텐데,

34
00:00:21,240 --> 00:00:21,420
이

35
00:00:21,420 --> 00:00:22,180
교과목은

36
00:00:22,180 --> 00:00:22,760
약간은

37
00:00:22,760 --> 00:00:23,240
일찍

38
00:00:23,240 --> 00:00:23,400
볼

39
00:00:23,400 --> 00:00:23,560
수도

40
00:00:23,580 --> 00:00:24,100
있다는

41
00:00:24,320 --> 00:00:24,460
것을

42
00:00:24,460 --> 00:00:24,860
미리

43
00:00:24,860 --> 00:00:25,840
알아주시기

44
00:00:25,840 --> 00:00:26,140
바랍니다.

45
00:00:27,060 --> 00:00:27,280
아직

46
00:00:27,280 --> 00:00:27,760
확정은

47
00:00:27,760 --> 00:00:28,680
아니지만,

48
00:00:29,100 --> 00:00:29,200
제가

49
00:00:29,200 --> 00:00:29,700
늦어도

50
00:00:29,700 --> 00:00:31,060
확정지어서

51
00:00:31,140 --> 00:00:32,120
말씀드릴테니까

52
00:00:32,120 --> 00:00:32,940
6월

53
00:00:32,940 --> 00:00:33,560
20일이

54
00:00:33,560 --> 00:00:33,880
아니라

55
00:00:33,880 --> 00:00:34,360
6월

56
00:00:34,360 --> 00:00:35,080
13일에

57
00:00:35,080 --> 00:00:35,260
실

58
00:00:35,260 --> 00:00:35,780
가능성이

59
00:00:36,580 --> 00:00:36,680
크다고

60
00:00:36,680 --> 00:00:37,060
꼭

61
00:00:37,060 --> 00:00:37,300
하나

62
00:00:37,300 --> 00:00:37,480
알아

63
00:00:37,480 --> 00:00:38,040
두시고,

64
00:00:38,900 --> 00:00:39,280
이렇게

65
00:00:39,280 --> 00:00:39,860
생겼을

66
00:00:39,860 --> 00:00:40,240
때

67
00:00:40,240 --> 00:00:41,380
시험시간

68
00:00:41,380 --> 00:00:41,820
겹치는

69
00:00:41,820 --> 00:00:42,260
이슈가

70
00:00:42,260 --> 00:00:42,400
있는

71
00:00:42,400 --> 00:00:42,940
학생들

72
00:00:42,940 --> 00:00:43,280
한둘

73
00:00:43,280 --> 00:00:43,460
있는

74
00:00:43,460 --> 00:00:43,640
걸로

75
00:00:43,640 --> 00:00:43,840
알고

76
00:00:43,840 --> 00:00:44,260
있어요.

77
00:00:44,640 --> 00:00:44,780
그래서

78
00:00:44,780 --> 00:00:45,000
그

79
00:00:45,000 --> 00:00:45,460
친구들은

80
00:00:45,460 --> 00:00:45,700
원래

81
00:00:45,700 --> 00:00:46,260
중간고사

82
00:00:46,260 --> 00:00:46,560
때도

83
00:00:46,560 --> 00:00:47,640
여러분들이

84
00:00:47,640 --> 00:00:48,180
11시에

85
00:00:48,180 --> 00:00:48,420
여기서

86
00:00:48,420 --> 00:00:48,680
시험

87
00:00:48,680 --> 00:00:48,960
보실

88
00:00:48,960 --> 00:00:49,060
때

89
00:00:49,060 --> 00:00:49,480
9시에

90
00:00:49,480 --> 00:00:49,660
미리

91
00:00:49,660 --> 00:00:50,000
시험을

92
00:00:50,000 --> 00:00:50,420
받습니다.

93
00:00:51,620 --> 00:00:51,840
따로

94
00:00:51,840 --> 00:00:52,280
배워서

95
00:00:52,280 --> 00:00:52,800
봤는데,

96
00:00:53,360 --> 00:00:53,440
그거

97
00:00:53,440 --> 00:00:53,760
옵션

98
00:00:53,760 --> 00:00:54,260
비슷하게

99
00:00:54,260 --> 00:00:55,260
제공해드릴거니까

100
00:00:55,260 --> 00:00:55,820
6월

101
00:00:55,820 --> 00:00:57,020
20일이

102
00:00:57,020 --> 00:00:57,260
아니라

103
00:00:57,260 --> 00:00:57,620
6월

104
00:00:57,620 --> 00:00:58,340
13일,

105
00:00:58,960 --> 00:00:59,200
만약

106
00:00:59,200 --> 00:00:59,780
시간

107
00:00:59,780 --> 00:01:00,280
겹치는

108
00:01:00,280 --> 00:01:01,120
이슈가

109
00:01:01,120 --> 00:01:01,360
있다.

110
00:01:01,920 --> 00:01:02,180
그러면

111
00:01:02,180 --> 00:01:02,780
제게

112
00:01:02,780 --> 00:01:03,060
미리

113
00:01:03,060 --> 00:01:03,400
메일로

114
00:01:03,400 --> 00:01:04,080
알려주시면

115
00:01:04,360 --> 00:01:04,500
저희가

116
00:01:04,500 --> 00:01:04,860
또

117
00:01:04,860 --> 00:01:05,340
일정

118
00:01:05,340 --> 00:01:06,340
맞춰가지고

119
00:01:06,340 --> 00:01:07,160
시험

120
00:01:07,500 --> 00:01:07,720
진행할

121
00:01:07,720 --> 00:01:07,800
수

122
00:01:07,800 --> 00:01:08,080
있도록

123
00:01:08,080 --> 00:01:08,460
하겠습니다.

124
00:01:09,220 --> 00:01:09,380
그래서

125
00:01:09,380 --> 00:01:09,660
그렇게

126
00:01:09,660 --> 00:01:10,140
두가지

127
00:01:10,140 --> 00:01:10,580
있는데

128
00:01:10,580 --> 00:01:11,760
확정되면

129
00:01:11,900 --> 00:01:12,020
다

130
00:01:12,020 --> 00:01:12,260
이제

131
00:01:12,260 --> 00:01:13,060
공지사항을

132
00:01:13,060 --> 00:01:13,860
올려드릴테니까

133
00:01:13,860 --> 00:01:14,280
미리

134
00:01:14,280 --> 00:01:14,660
알아

135
00:01:14,660 --> 00:01:15,180
두시기

136
00:01:15,180 --> 00:01:15,700
바랍니다.

137
00:01:16,880 --> 00:01:17,140
그래서

138
00:01:17,140 --> 00:01:17,460
지난

139
00:01:17,460 --> 00:01:18,020
시험부터

140
00:01:18,020 --> 00:01:18,360
우리

141
00:01:18,360 --> 00:01:18,540
이제

142
00:01:18,540 --> 00:01:18,860
cpu

143
00:01:18,860 --> 00:01:19,520
파이프라이닝

144
00:01:19,520 --> 00:01:20,240
들어갔습니다.

145
00:01:20,520 --> 00:01:20,620
그

146
00:01:20,620 --> 00:01:21,220
파이프라이닝

147
00:01:21,220 --> 00:01:21,720
컨셉은

148
00:01:21,720 --> 00:01:21,900
제가

149
00:01:21,900 --> 00:01:22,160
다시

150
00:01:22,160 --> 00:01:22,340
한번

151
00:01:22,340 --> 00:01:23,060
강조하지만

152
00:01:23,060 --> 00:01:24,080
하나의

153
00:01:24,080 --> 00:01:24,500
명령어

154
00:01:24,500 --> 00:01:24,840
실행을

155
00:01:24,840 --> 00:01:25,140
빠르게

156
00:01:25,180 --> 00:01:25,440
하는게

157
00:01:25,440 --> 00:01:25,860
아닙니다.

158
00:01:27,560 --> 00:01:28,260
우리

159
00:01:28,260 --> 00:01:29,080
프로그램은

160
00:01:29,080 --> 00:01:29,760
수없이

161
00:01:29,780 --> 00:01:30,280
많은

162
00:01:30,280 --> 00:01:31,000
명령어들로

163
00:01:31,000 --> 00:01:31,340
구성이

164
00:01:31,340 --> 00:01:31,560
되어

165
00:01:31,560 --> 00:01:31,980
있어요.

166
00:01:32,980 --> 00:01:33,200
여러분들이

167
00:01:33,200 --> 00:01:33,380
아주

168
00:01:33,380 --> 00:01:33,980
간단하게

169
00:01:33,980 --> 00:01:34,540
프로그램을

170
00:01:34,540 --> 00:01:35,500
짜봐도

171
00:01:35,600 --> 00:01:35,760
그리고

172
00:01:35,760 --> 00:01:36,120
assignment

173
00:01:36,120 --> 00:01:36,560
number

174
00:01:36,560 --> 00:01:36,780
1

175
00:01:36,780 --> 00:01:36,960
할

176
00:01:36,960 --> 00:01:37,160
때

177
00:01:37,940 --> 00:01:38,160
function

178
00:01:38,160 --> 00:01:38,680
하나를

179
00:01:38,680 --> 00:01:38,980
짜는

180
00:01:39,060 --> 00:01:39,160
때도

181
00:01:39,160 --> 00:01:39,520
사실

182
00:01:39,520 --> 00:01:40,140
몇십줄의

183
00:01:40,140 --> 00:01:40,460
코드가

184
00:01:40,460 --> 00:01:40,900
들어가게

185
00:01:40,900 --> 00:01:41,040
됩니다.

186
00:01:43,140 --> 00:01:43,280
그러면

187
00:01:43,280 --> 00:01:43,580
그

188
00:01:43,580 --> 00:01:44,440
몇십개의

189
00:01:44,440 --> 00:01:45,180
명령어들을

190
00:01:45,180 --> 00:01:45,760
어차피

191
00:01:45,760 --> 00:01:46,040
다

192
00:01:46,040 --> 00:01:47,000
실행시키는게

193
00:01:47,000 --> 00:01:47,340
우리는

194
00:01:47,340 --> 00:01:47,880
프로그램

195
00:01:47,880 --> 00:01:48,740
실행을

196
00:01:48,740 --> 00:01:49,140
한다.

197
00:01:49,400 --> 00:01:49,500
그

198
00:01:49,500 --> 00:01:50,080
측면이다

199
00:01:50,080 --> 00:01:50,300
보니까.

200
00:01:51,200 --> 00:01:51,320
그럼

201
00:01:51,320 --> 00:01:52,100
파이프라이닝의

202
00:01:52,100 --> 00:01:52,600
컨셉은

203
00:01:52,600 --> 00:01:52,860
여러

204
00:01:52,860 --> 00:01:53,400
명령어를

205
00:01:53,400 --> 00:01:53,940
동시에

206
00:01:53,940 --> 00:01:54,500
실행을

207
00:01:54,500 --> 00:01:54,880
해서

208
00:01:55,540 --> 00:01:55,680
결국

209
00:01:55,680 --> 00:01:56,580
우리

210
00:01:56,580 --> 00:01:57,380
cpu가

211
00:01:57,380 --> 00:01:58,000
여러분의

212
00:01:58,000 --> 00:01:58,620
프로그램에

213
00:01:58,620 --> 00:01:59,080
담겨있는

214
00:01:59,080 --> 00:02:00,000
명령어들을

215
00:02:00,000 --> 00:02:00,320
단

216
00:02:00,320 --> 00:02:00,960
시간당

217
00:02:00,960 --> 00:02:01,160
더

218
00:02:01,160 --> 00:02:01,640
많은

219
00:02:01,640 --> 00:02:02,320
명령어들을

220
00:02:02,940 --> 00:02:03,180
실행을

221
00:02:03,180 --> 00:02:03,400
하게

222
00:02:03,400 --> 00:02:03,820
하면

223
00:02:03,820 --> 00:02:04,320
end

224
00:02:04,320 --> 00:02:04,440
-to

225
00:02:04,440 --> 00:02:04,580
-end

226
00:02:04,580 --> 00:02:05,080
프로그램의

227
00:02:05,080 --> 00:02:05,360
execution

228
00:02:05,360 --> 00:02:05,740
time을

229
00:02:05,740 --> 00:02:05,960
줄일

230
00:02:05,960 --> 00:02:06,020
수

231
00:02:06,020 --> 00:02:06,200
있지

232
00:02:06,200 --> 00:02:06,760
않겠냐.

233
00:02:07,060 --> 00:02:07,280
그래서

234
00:02:07,380 --> 00:02:07,720
출발한

235
00:02:07,720 --> 00:02:08,040
것이

236
00:02:08,040 --> 00:02:09,060
파이프라이닝

237
00:02:09,060 --> 00:02:09,680
cpu다

238
00:02:09,680 --> 00:02:09,980
라고

239
00:02:09,980 --> 00:02:10,360
말씀을

240
00:02:10,360 --> 00:02:10,880
드렸고

241
00:02:11,660 --> 00:02:11,840
그리고

242
00:02:11,840 --> 00:02:12,960
파이프라이닝이

243
00:02:12,960 --> 00:02:13,380
통하는

244
00:02:13,380 --> 00:02:14,140
이유는

245
00:02:14,180 --> 00:02:15,140
우리가

246
00:02:15,140 --> 00:02:16,260
명령어를

247
00:02:16,420 --> 00:02:16,940
실행하는

248
00:02:16,940 --> 00:02:17,200
단계

249
00:02:17,220 --> 00:02:17,840
5단계로

250
00:02:17,840 --> 00:02:18,360
나눴을

251
00:02:18,360 --> 00:02:18,600
때

252
00:02:19,120 --> 00:02:19,240
그

253
00:02:19,240 --> 00:02:19,460
각

254
00:02:19,520 --> 00:02:20,100
5단계에

255
00:02:20,100 --> 00:02:20,340
쓰이는

256
00:02:20,340 --> 00:02:20,940
하드웨어가

257
00:02:20,940 --> 00:02:21,140
좀

258
00:02:21,200 --> 00:02:21,840
독립적이다

259
00:02:21,840 --> 00:02:22,100
라는

260
00:02:22,100 --> 00:02:22,700
특성에서

261
00:02:22,700 --> 00:02:23,000
가능해집니다.

262
00:02:24,220 --> 00:02:24,480
인스트럭션

263
00:02:24,480 --> 00:02:24,880
배치는

264
00:02:24,880 --> 00:02:25,320
인스트럭션

265
00:02:25,320 --> 00:02:25,960
메모리이고

266
00:02:25,960 --> 00:02:26,900
인스트럭션

267
00:02:26,900 --> 00:02:27,380
디코드는

268
00:02:27,380 --> 00:02:27,820
register

269
00:02:27,820 --> 00:02:28,320
file에서

270
00:02:28,320 --> 00:02:30,760
rsrtic

271
00:02:31,000 --> 00:02:31,100
register

272
00:02:31,100 --> 00:02:31,440
읽을

273
00:02:31,440 --> 00:02:31,840
거고

274
00:02:32,400 --> 00:02:32,580
ex는

275
00:02:32,580 --> 00:02:33,100
alu

276
00:02:33,100 --> 00:02:33,640
그리고

277
00:02:33,640 --> 00:02:34,180
memory

278
00:02:34,180 --> 00:02:34,620
access은

279
00:02:34,700 --> 00:02:34,840
data

280
00:02:34,840 --> 00:02:35,260
memory

281
00:02:35,260 --> 00:02:35,860
그리고

282
00:02:35,860 --> 00:02:37,000
writeback은

283
00:02:37,120 --> 00:02:37,760
register

284
00:02:37,760 --> 00:02:38,080
file

285
00:02:38,080 --> 00:02:38,500
destination

286
00:02:38,500 --> 00:02:39,140
register에

287
00:02:39,140 --> 00:02:39,460
쓰는

288
00:02:39,460 --> 00:02:39,820
거긴

289
00:02:39,820 --> 00:02:40,300
하지만

290
00:02:40,940 --> 00:02:41,120
그렇게

291
00:02:41,120 --> 00:02:41,520
됐을

292
00:02:41,520 --> 00:02:41,640
때

293
00:02:41,640 --> 00:02:41,940
이제

294
00:02:41,940 --> 00:02:42,400
register

295
00:02:42,400 --> 00:02:43,140
file에

296
00:02:43,140 --> 00:02:43,320
대한

297
00:02:43,320 --> 00:02:43,920
conflict가

298
00:02:43,920 --> 00:02:44,360
발생을

299
00:02:44,360 --> 00:02:44,720
하는데

300
00:02:45,260 --> 00:02:45,520
그거는

301
00:02:45,520 --> 00:02:46,280
writeback이

302
00:02:46,280 --> 00:02:46,800
destination

303
00:02:46,800 --> 00:02:47,380
register에

304
00:02:47,380 --> 00:02:47,560
쓰는

305
00:02:47,560 --> 00:02:47,860
거를

306
00:02:47,860 --> 00:02:48,240
첫번째

307
00:02:48,300 --> 00:02:48,480
half

308
00:02:48,640 --> 00:02:48,760
-clock

309
00:02:49,040 --> 00:02:49,220
cycle가

310
00:02:49,500 --> 00:02:49,600
완성을

311
00:02:49,600 --> 00:02:49,800
하고

312
00:02:51,280 --> 00:02:51,540
인스트럭션

313
00:02:51,540 --> 00:02:51,920
decode

314
00:02:51,920 --> 00:02:52,580
stage가

315
00:02:52,580 --> 00:02:53,820
rsrtic

316
00:02:53,820 --> 00:02:53,940
읽는

317
00:02:53,940 --> 00:02:54,180
것을

318
00:02:54,180 --> 00:02:54,600
두번째

319
00:02:54,600 --> 00:02:54,840
half

320
00:02:54,840 --> 00:02:55,040
-clock

321
00:02:55,140 --> 00:02:55,600
cycle에

322
00:02:55,800 --> 00:02:56,120
하도록

323
00:02:56,120 --> 00:02:57,070
만들면

324
00:02:57,140 --> 00:02:57,620
한

325
00:02:57,620 --> 00:02:57,860
clock

326
00:02:57,860 --> 00:02:58,200
cycle

327
00:02:58,200 --> 00:02:58,700
내에서

328
00:02:58,700 --> 00:02:59,780
id가

329
00:02:59,780 --> 00:03:00,140
쓰이고

330
00:03:00,140 --> 00:03:00,800
rsrtic

331
00:03:00,800 --> 00:03:01,140
읽는

332
00:03:01,140 --> 00:03:01,500
것만

333
00:03:01,500 --> 00:03:02,020
읽혀지는

334
00:03:02,020 --> 00:03:02,160
건

335
00:03:02,160 --> 00:03:02,860
마찬가지지만

336
00:03:03,580 --> 00:03:03,880
동시에

337
00:03:03,880 --> 00:03:04,360
읽고

338
00:03:04,360 --> 00:03:04,540
쓰는

339
00:03:04,540 --> 00:03:04,900
일은

340
00:03:04,900 --> 00:03:05,140
없다

341
00:03:05,140 --> 00:03:05,700
라는

342
00:03:05,740 --> 00:03:05,840
걸

343
00:03:05,840 --> 00:03:06,400
보장을

344
00:03:06,680 --> 00:03:07,160
해준다

345
00:03:07,300 --> 00:03:07,400
라고

346
00:03:07,400 --> 00:03:07,780
했고요.

347
00:03:08,480 --> 00:03:08,760
그거랑

348
00:03:08,760 --> 00:03:09,400
유사하게

349
00:03:09,400 --> 00:03:09,860
우리가

350
00:03:09,860 --> 00:03:10,260
브랜치

351
00:03:10,260 --> 00:03:10,640
명령어

352
00:03:10,640 --> 00:03:10,800
같은

353
00:03:10,800 --> 00:03:11,220
경우에는

354
00:03:11,220 --> 00:03:11,540
memory

355
00:03:11,540 --> 00:03:11,980
access

356
00:03:11,980 --> 00:03:13,000
단계에서

357
00:03:13,520 --> 00:03:13,700
그

358
00:03:13,700 --> 00:03:14,520
pc

359
00:03:14,520 --> 00:03:15,540
register에다가

360
00:03:15,540 --> 00:03:15,900
next

361
00:03:16,260 --> 00:03:16,360
pc를

362
00:03:16,360 --> 00:03:16,620
쓰게

363
00:03:16,620 --> 00:03:16,760
될

364
00:03:16,760 --> 00:03:17,060
거고

365
00:03:17,740 --> 00:03:17,960
그리고

366
00:03:17,960 --> 00:03:19,140
명령어들은

367
00:03:19,140 --> 00:03:19,480
항상

368
00:03:19,480 --> 00:03:19,700
맨

369
00:03:19,700 --> 00:03:19,960
처음에

370
00:03:19,960 --> 00:03:20,260
instruction

371
00:03:20,360 --> 00:03:20,760
batch를

372
00:03:20,760 --> 00:03:21,200
통해서

373
00:03:21,200 --> 00:03:21,640
pc에

374
00:03:21,640 --> 00:03:22,060
담겨있는

375
00:03:22,060 --> 00:03:22,340
메모리

376
00:03:22,340 --> 00:03:23,080
주소로부터

377
00:03:23,080 --> 00:03:23,620
4x2

378
00:03:23,800 --> 00:03:23,940
명령어를

379
00:03:23,940 --> 00:03:24,140
읽고

380
00:03:24,140 --> 00:03:24,420
오는

381
00:03:24,420 --> 00:03:24,960
과정

382
00:03:25,520 --> 00:03:25,660
pc

383
00:03:25,660 --> 00:03:26,340
register에

384
00:03:26,340 --> 00:03:26,680
대해서도

385
00:03:26,680 --> 00:03:26,960
read

386
00:03:26,960 --> 00:03:27,220
write

387
00:03:27,220 --> 00:03:27,800
conflict가

388
00:03:27,800 --> 00:03:28,300
일어나는데

389
00:03:28,960 --> 00:03:29,720
그것도

390
00:03:29,800 --> 00:03:29,980
memory

391
00:03:29,980 --> 00:03:30,360
access

392
00:03:30,360 --> 00:03:30,820
단계의

393
00:03:30,820 --> 00:03:31,320
초반부

394
00:03:31,320 --> 00:03:31,840
절반

395
00:03:31,840 --> 00:03:32,060
때

396
00:03:32,060 --> 00:03:32,540
pc가

397
00:03:32,540 --> 00:03:32,840
업데이트

398
00:03:32,900 --> 00:03:33,040
될

399
00:03:33,040 --> 00:03:33,140
수

400
00:03:33,260 --> 00:03:33,360
있도록

401
00:03:33,360 --> 00:03:33,680
하고

402
00:03:34,040 --> 00:03:34,140
그리고

403
00:03:34,140 --> 00:03:34,520
instruction

404
00:03:34,520 --> 00:03:34,820
batch

405
00:03:34,820 --> 00:03:35,200
stage

406
00:03:35,280 --> 00:03:35,780
내에서는

407
00:03:35,780 --> 00:03:36,280
두번째

408
00:03:36,280 --> 00:03:36,740
half

409
00:03:36,740 --> 00:03:36,760
-clock

410
00:03:36,780 --> 00:03:37,000
cycle

411
00:03:37,000 --> 00:03:37,320
때

412
00:03:37,440 --> 00:03:37,920
이제

413
00:03:37,960 --> 00:03:38,060
그

414
00:03:38,060 --> 00:03:38,300
pc

415
00:03:38,300 --> 00:03:38,840
register가

416
00:03:38,840 --> 00:03:39,180
읽고

417
00:03:39,180 --> 00:03:39,620
인스트럭션

418
00:03:39,660 --> 00:03:39,820
메모리

419
00:03:39,820 --> 00:03:40,360
액세스하는

420
00:03:40,560 --> 00:03:40,660
식으로

421
00:03:40,660 --> 00:03:40,920
또

422
00:03:40,920 --> 00:03:41,260
방지할

423
00:03:41,260 --> 00:03:41,360
수

424
00:03:41,360 --> 00:03:41,600
있다

425
00:03:41,940 --> 00:03:42,040
라고

426
00:03:42,040 --> 00:03:42,640
말씀드렸습니다.

427
00:03:43,160 --> 00:03:43,360
그런

428
00:03:43,360 --> 00:03:43,840
식으로

429
00:03:43,840 --> 00:03:45,000
하드웨어를

430
00:03:45,000 --> 00:03:45,500
언제

431
00:03:45,500 --> 00:03:45,880
어느

432
00:03:45,880 --> 00:03:46,440
타이밍에

433
00:03:46,440 --> 00:03:46,860
쓰는가

434
00:03:46,860 --> 00:03:47,460
조정을

435
00:03:47,460 --> 00:03:47,760
하게

436
00:03:47,760 --> 00:03:48,040
되면

437
00:03:48,040 --> 00:03:48,840
우리는

438
00:03:48,840 --> 00:03:49,400
5개의

439
00:03:49,400 --> 00:03:49,760
명령어

440
00:03:49,920 --> 00:03:50,220
신행단계

441
00:03:50,320 --> 00:03:50,720
모두에

442
00:03:50,720 --> 00:03:51,340
걸쳐서

443
00:03:51,580 --> 00:03:52,160
완전히

444
00:03:52,160 --> 00:03:52,540
다른

445
00:03:52,540 --> 00:03:53,080
pieces

446
00:03:53,160 --> 00:03:53,320
of

447
00:03:53,320 --> 00:03:53,600
hardware

448
00:03:53,600 --> 00:03:54,440
완전히

449
00:03:54,440 --> 00:03:54,640
다른

450
00:03:54,640 --> 00:03:55,100
부분의

451
00:03:55,160 --> 00:03:55,500
하드웨어를

452
00:03:55,500 --> 00:03:55,920
쓰도록

453
00:03:55,920 --> 00:03:56,100
할

454
00:03:56,100 --> 00:03:56,200
수

455
00:03:56,200 --> 00:03:56,380
있기

456
00:03:56,380 --> 00:03:56,840
때문에

457
00:03:57,380 --> 00:03:58,000
파이프라이닝이

458
00:03:58,240 --> 00:03:58,480
가능하다

459
00:03:58,480 --> 00:03:58,980
라고

460
00:03:58,980 --> 00:03:59,320
말씀을

461
00:03:59,320 --> 00:03:59,580
드렸어요.

462
00:04:00,800 --> 00:04:01,020
그래서

463
00:04:01,020 --> 00:04:01,800
파이프라이닝을

464
00:04:01,800 --> 00:04:02,000
하게

465
00:04:02,000 --> 00:04:02,380
되면

466
00:04:02,380 --> 00:04:02,940
결국

467
00:04:02,940 --> 00:04:03,200
이

468
00:04:03,200 --> 00:04:03,760
그림이

469
00:04:03,760 --> 00:04:03,980
사실

470
00:04:03,980 --> 00:04:04,240
모든

471
00:04:04,240 --> 00:04:04,400
걸

472
00:04:04,400 --> 00:04:04,940
말해주는

473
00:04:04,940 --> 00:04:05,220
건데

474
00:04:05,220 --> 00:04:05,800
지난

475
00:04:05,800 --> 00:04:06,080
시간

476
00:04:06,120 --> 00:04:06,600
마지막에

477
00:04:06,600 --> 00:04:06,860
얘기를

478
00:04:06,860 --> 00:04:07,140
했던

479
00:04:07,140 --> 00:04:07,600
거지만

480
00:04:07,600 --> 00:04:07,900
다시

481
00:04:07,900 --> 00:04:08,140
한번

482
00:04:08,140 --> 00:04:08,640
강조해서

483
00:04:08,680 --> 00:04:09,020
말씀을

484
00:04:09,020 --> 00:04:09,400
드리면

485
00:04:10,620 --> 00:04:11,420
single

486
00:04:11,420 --> 00:04:11,700
cycle

487
00:04:11,700 --> 00:04:12,040
cpu

488
00:04:12,040 --> 00:04:12,300
입니다.

489
00:04:13,140 --> 00:04:13,320
그래서

490
00:04:13,360 --> 00:04:13,860
if

491
00:04:13,860 --> 00:04:14,280
stage

492
00:04:14,600 --> 00:04:14,720
있고

493
00:04:14,720 --> 00:04:15,780
decode

494
00:04:15,780 --> 00:04:16,060
하고

495
00:04:16,060 --> 00:04:16,500
execute

496
00:04:16,500 --> 00:04:16,860
하고

497
00:04:16,860 --> 00:04:17,140
read

498
00:04:17,140 --> 00:04:17,400
write

499
00:04:17,440 --> 00:04:17,880
access

500
00:04:17,980 --> 00:04:18,180
하고

501
00:04:18,180 --> 00:04:18,500
write

502
00:04:18,820 --> 00:04:18,920
write를

503
00:04:18,920 --> 00:04:19,240
하게

504
00:04:19,240 --> 00:04:19,560
되면

505
00:04:20,420 --> 00:04:20,560
single

506
00:04:20,560 --> 00:04:20,880
cycle

507
00:04:20,880 --> 00:04:21,260
cpu

508
00:04:21,260 --> 00:04:21,480
같은

509
00:04:21,480 --> 00:04:22,000
경우에는

510
00:04:22,000 --> 00:04:22,800
우리가

511
00:04:22,800 --> 00:04:23,440
모든

512
00:04:23,440 --> 00:04:23,760
저

513
00:04:23,760 --> 00:04:24,420
5개의

514
00:04:24,420 --> 00:04:24,820
단계의

515
00:04:24,820 --> 00:04:25,480
stage들을

516
00:04:25,480 --> 00:04:25,880
쭉

517
00:04:25,880 --> 00:04:26,420
일렬로

518
00:04:26,420 --> 00:04:26,960
나열을

519
00:04:26,960 --> 00:04:27,200
해서

520
00:04:27,200 --> 00:04:27,640
실행을

521
00:04:27,640 --> 00:04:27,860
하게

522
00:04:27,860 --> 00:04:28,080
됩니다.

523
00:04:28,800 --> 00:04:29,060
그래서

524
00:04:29,060 --> 00:04:29,460
저

525
00:04:29,460 --> 00:04:30,700
800pc가

526
00:04:30,700 --> 00:04:31,220
이제

527
00:04:31,220 --> 00:04:31,680
명령어

528
00:04:31,680 --> 00:04:31,880
하나

529
00:04:31,880 --> 00:04:32,160
쭉

530
00:04:32,160 --> 00:04:32,660
실행하는데

531
00:04:32,660 --> 00:04:33,040
걸리는

532
00:04:33,200 --> 00:04:33,600
시간이다

533
00:04:33,600 --> 00:04:34,180
라고

534
00:04:34,180 --> 00:04:34,680
쳤을

535
00:04:34,760 --> 00:04:34,860
때

536
00:04:34,860 --> 00:04:35,620
single

537
00:04:35,620 --> 00:04:36,000
cycle

538
00:04:36,000 --> 00:04:36,600
cpu는

539
00:04:36,600 --> 00:04:37,180
얘가

540
00:04:37,180 --> 00:04:37,620
clock

541
00:04:37,620 --> 00:04:38,320
period이

542
00:04:38,320 --> 00:04:39,460
되어버리죠.

543
00:04:40,220 --> 00:04:40,320
그래서

544
00:04:40,320 --> 00:04:41,180
clock

545
00:04:41,180 --> 00:04:42,040
frequency는

546
00:04:42,040 --> 00:04:42,320
이제

547
00:04:42,320 --> 00:04:42,540
1

548
00:04:42,540 --> 00:04:42,940
나누기

549
00:04:42,940 --> 00:04:44,080
800pc가

550
00:04:44,080 --> 00:04:44,560
되는

551
00:04:44,560 --> 00:04:45,020
single

552
00:04:45,020 --> 00:04:45,320
cycle

553
00:04:45,320 --> 00:04:45,960
cpu가

554
00:04:45,960 --> 00:04:46,200
되게

555
00:04:46,200 --> 00:04:46,300
됩니다.

556
00:04:47,100 --> 00:04:47,200
근데

557
00:04:47,200 --> 00:04:47,380
이제

558
00:04:47,420 --> 00:04:47,780
명령어

559
00:04:47,780 --> 00:04:48,120
3개를

560
00:04:48,120 --> 00:04:48,560
연달아

561
00:04:48,560 --> 00:04:49,260
실행시킨다

562
00:04:49,260 --> 00:04:49,500
라고

563
00:04:49,500 --> 00:04:49,800
하면

564
00:04:50,640 --> 00:04:50,740
single

565
00:04:50,740 --> 00:04:51,060
cycle

566
00:04:51,060 --> 00:04:51,600
cpu는

567
00:04:51,600 --> 00:04:52,060
동시에

568
00:04:52,060 --> 00:04:52,400
우리가

569
00:04:52,940 --> 00:04:53,040
실행시키는

570
00:04:53,040 --> 00:04:53,460
명령어가

571
00:04:53,460 --> 00:04:53,560
하나니까

572
00:04:54,620 --> 00:04:55,040
800pc

573
00:04:55,040 --> 00:04:55,540
x

574
00:04:55,540 --> 00:04:55,820
2

575
00:04:55,840 --> 00:04:56,000
3

576
00:04:56,360 --> 00:04:56,460
그래서

577
00:04:56,460 --> 00:04:58,120
2400pc가

578
00:04:58,120 --> 00:04:58,580
걸리게

579
00:04:58,580 --> 00:04:59,160
됩니다.

580
00:05:00,120 --> 00:05:00,220
근데

581
00:05:00,220 --> 00:05:00,440
이제

582
00:05:00,440 --> 00:05:01,200
5단계로

583
00:05:01,200 --> 00:05:01,880
5

584
00:05:01,880 --> 00:05:02,100
stage

585
00:05:02,100 --> 00:05:02,920
파이프라이닝을

586
00:05:02,920 --> 00:05:03,300
수행을

587
00:05:03,300 --> 00:05:03,520
하게

588
00:05:03,520 --> 00:05:03,860
되면

589
00:05:03,860 --> 00:05:05,160
single

590
00:05:05,160 --> 00:05:05,580
cycle

591
00:05:05,580 --> 00:05:06,200
cpu에

592
00:05:06,200 --> 00:05:06,500
비해서

593
00:05:06,500 --> 00:05:07,040
명령어

594
00:05:07,040 --> 00:05:07,240
하나

595
00:05:07,240 --> 00:05:07,840
실행하는

596
00:05:07,840 --> 00:05:08,420
시간은

597
00:05:08,600 --> 00:05:09,100
늘어난다

598
00:05:09,100 --> 00:05:09,320
라고

599
00:05:09,400 --> 00:05:09,740
말씀을

600
00:05:09,740 --> 00:05:10,280
드렸어요.

601
00:05:10,600 --> 00:05:10,840
왜냐하면

602
00:05:10,840 --> 00:05:11,340
우리가

603
00:05:11,340 --> 00:05:11,700
이제

604
00:05:11,840 --> 00:05:12,060
각

605
00:05:12,220 --> 00:05:12,600
파이프라인

606
00:05:12,600 --> 00:05:13,320
스테이지가

607
00:05:13,320 --> 00:05:13,620
한

608
00:05:13,620 --> 00:05:13,880
clock

609
00:05:13,980 --> 00:05:14,760
cycle에

610
00:05:14,960 --> 00:05:15,260
각자

611
00:05:15,260 --> 00:05:15,960
일어난다

612
00:05:16,140 --> 00:05:16,300
라고

613
00:05:16,300 --> 00:05:16,780
취급을

614
00:05:16,800 --> 00:05:16,980
하기

615
00:05:16,980 --> 00:05:17,400
때문에

616
00:05:17,490 --> 00:05:18,440
그러면

617
00:05:18,440 --> 00:05:18,820
여기서

618
00:05:18,820 --> 00:05:19,160
보면

619
00:05:19,160 --> 00:05:19,500
현재

620
00:05:19,500 --> 00:05:20,020
clock

621
00:05:20,020 --> 00:05:20,760
period은

622
00:05:20,760 --> 00:05:21,520
200pc

623
00:05:21,520 --> 00:05:21,620
단위입니다.

624
00:05:23,060 --> 00:05:23,240
그래서

625
00:05:23,240 --> 00:05:23,560
single

626
00:05:23,560 --> 00:05:23,860
cycle

627
00:05:23,860 --> 00:05:24,320
cpu

628
00:05:24,320 --> 00:05:24,580
대비

629
00:05:24,580 --> 00:05:24,900
원래

630
00:05:24,900 --> 00:05:25,280
가장

631
00:05:25,280 --> 00:05:26,080
아이디어란

632
00:05:26,940 --> 00:05:27,460
clock

633
00:05:27,460 --> 00:05:27,880
period

634
00:05:27,880 --> 00:05:28,860
감소양은

635
00:05:29,300 --> 00:05:29,520
5

636
00:05:29,520 --> 00:05:29,780
stage

637
00:05:29,780 --> 00:05:30,700
파이프라인이니까

638
00:05:30,700 --> 00:05:31,580
1로

639
00:05:31,580 --> 00:05:32,180
줄어드는게

640
00:05:32,180 --> 00:05:32,420
가장

641
00:05:32,420 --> 00:05:33,160
이상적이긴

642
00:05:33,160 --> 00:05:33,300
해요.

643
00:05:34,680 --> 00:05:35,680
800pc를

644
00:05:35,680 --> 00:05:35,900
딱

645
00:05:36,000 --> 00:05:36,400
정확히

646
00:05:36,400 --> 00:05:37,240
5등분해서

647
00:05:37,240 --> 00:05:39,300
160pc의

648
00:05:39,580 --> 00:05:39,740
clock

649
00:05:39,740 --> 00:05:40,260
period을

650
00:05:40,260 --> 00:05:40,620
갖도록

651
00:05:40,620 --> 00:05:40,980
하는게

652
00:05:40,980 --> 00:05:41,560
최고긴

653
00:05:41,560 --> 00:05:41,960
하지만

654
00:05:42,580 --> 00:05:42,680
근데

655
00:05:42,680 --> 00:05:43,140
그것을

656
00:05:43,140 --> 00:05:43,460
안되는

657
00:05:43,460 --> 00:05:44,400
이유가

658
00:05:44,460 --> 00:05:44,700
같은

659
00:05:44,700 --> 00:05:45,100
register

660
00:05:45,100 --> 00:05:45,720
file에

661
00:05:45,720 --> 00:05:45,980
어떤

662
00:05:45,980 --> 00:05:46,280
애는

663
00:05:46,280 --> 00:05:46,600
쓰고

664
00:05:46,840 --> 00:05:46,940
어떤

665
00:05:46,940 --> 00:05:47,180
애는

666
00:05:47,180 --> 00:05:47,560
읽어야

667
00:05:47,560 --> 00:05:47,800
되고

668
00:05:47,800 --> 00:05:48,060
또

669
00:05:48,060 --> 00:05:48,340
pc

670
00:05:48,380 --> 00:05:48,980
register에

671
00:05:48,980 --> 00:05:49,180
어떤

672
00:05:49,180 --> 00:05:49,440
애는

673
00:05:49,580 --> 00:05:49,700
쓰고

674
00:05:49,700 --> 00:05:49,960
어떤

675
00:05:49,960 --> 00:05:50,160
애는

676
00:05:50,160 --> 00:05:50,540
읽어야

677
00:05:50,540 --> 00:05:50,800
되고

678
00:05:50,800 --> 00:05:51,060
이런

679
00:05:51,060 --> 00:05:51,220
데

680
00:05:51,220 --> 00:05:51,520
시간이

681
00:05:51,520 --> 00:05:51,960
걸리다

682
00:05:51,960 --> 00:05:52,360
보니까

683
00:05:52,360 --> 00:05:53,360
결국

684
00:05:53,360 --> 00:05:53,720
우리가

685
00:05:53,720 --> 00:05:54,220
만드는

686
00:05:54,220 --> 00:05:54,680
5

687
00:05:54,680 --> 00:05:54,860
stage

688
00:05:54,860 --> 00:05:55,440
파이프라인이

689
00:05:55,480 --> 00:05:56,640
200pc라는

690
00:05:56,640 --> 00:05:57,320
clock을

691
00:05:57,560 --> 00:05:57,660
갖게

692
00:05:57,660 --> 00:05:57,900
되고

693
00:05:58,980 --> 00:05:59,200
그러면

694
00:05:59,200 --> 00:05:59,840
명령어

695
00:05:59,840 --> 00:06:00,240
하나는

696
00:06:00,240 --> 00:06:00,600
이제

697
00:06:00,600 --> 00:06:01,400
if

698
00:06:01,420 --> 00:06:02,080
,id

699
00:06:02,080 --> 00:06:02,700
,ex

700
00:06:02,800 --> 00:06:03,080
,mem

701
00:06:03,080 --> 00:06:03,980
,writeback

702
00:06:04,480 --> 00:06:04,600
해가지고

703
00:06:04,600 --> 00:06:05,300
이렇게

704
00:06:05,300 --> 00:06:05,560
총

705
00:06:05,640 --> 00:06:05,860
5

706
00:06:05,860 --> 00:06:06,080
clock

707
00:06:06,080 --> 00:06:06,520
cycle이

708
00:06:06,580 --> 00:06:06,840
걸리게

709
00:06:06,840 --> 00:06:06,940
됩니다.

710
00:06:07,780 --> 00:06:08,040
그러면

711
00:06:08,040 --> 00:06:08,520
실제

712
00:06:08,520 --> 00:06:08,660
이

713
00:06:08,720 --> 00:06:08,860
5

714
00:06:08,860 --> 00:06:09,160
clock

715
00:06:09,160 --> 00:06:09,840
cycle을

716
00:06:10,140 --> 00:06:10,340
clock

717
00:06:10,340 --> 00:06:10,860
곱하기

718
00:06:10,860 --> 00:06:11,260
clock

719
00:06:11,260 --> 00:06:11,780
period으로

720
00:06:11,780 --> 00:06:12,220
해보면

721
00:06:12,220 --> 00:06:13,580
1000pc로

722
00:06:13,760 --> 00:06:14,940
명령어

723
00:06:14,940 --> 00:06:15,340
하나의

724
00:06:15,340 --> 00:06:15,620
실행

725
00:06:15,620 --> 00:06:16,480
자체는

726
00:06:16,560 --> 00:06:16,860
오히려

727
00:06:16,860 --> 00:06:17,180
single

728
00:06:17,180 --> 00:06:17,520
cycle

729
00:06:17,660 --> 00:06:18,040
cpu에

730
00:06:18,040 --> 00:06:18,440
비해서

731
00:06:18,980 --> 00:06:19,380
늘어나는

732
00:06:19,380 --> 00:06:19,800
경우가

733
00:06:19,800 --> 00:06:20,260
되게

734
00:06:20,260 --> 00:06:20,580
됩니다.

735
00:06:21,280 --> 00:06:21,460
그래서

736
00:06:21,460 --> 00:06:21,840
딱

737
00:06:21,840 --> 00:06:22,360
명령어

738
00:06:22,360 --> 00:06:22,960
하나의

739
00:06:22,960 --> 00:06:23,220
실행

740
00:06:23,220 --> 00:06:23,600
시간만

741
00:06:23,600 --> 00:06:23,980
봤을

742
00:06:23,980 --> 00:06:24,200
때는

743
00:06:24,200 --> 00:06:25,040
single

744
00:06:25,040 --> 00:06:25,580
cycle이

745
00:06:25,580 --> 00:06:25,820
더

746
00:06:25,820 --> 00:06:26,360
효율적인

747
00:06:26,360 --> 00:06:26,500
거

748
00:06:26,500 --> 00:06:27,080
아니냐

749
00:06:27,160 --> 00:06:27,300
라고

750
00:06:27,460 --> 00:06:27,560
하실

751
00:06:27,560 --> 00:06:27,700
수

752
00:06:27,700 --> 00:06:27,960
있는데

753
00:06:28,780 --> 00:06:28,960
근데

754
00:06:28,960 --> 00:06:29,180
이제

755
00:06:29,180 --> 00:06:29,780
파이프라인

756
00:06:29,780 --> 00:06:31,700
cpu의

757
00:06:31,700 --> 00:06:31,880
가장

758
00:06:31,880 --> 00:06:32,140
큰

759
00:06:32,140 --> 00:06:32,780
장점은

760
00:06:33,180 --> 00:06:33,380
여러

761
00:06:33,380 --> 00:06:34,040
명령어를

762
00:06:34,040 --> 00:06:34,560
우리가

763
00:06:34,560 --> 00:06:35,020
실행을

764
00:06:35,020 --> 00:06:35,440
겹쳐서

765
00:06:35,440 --> 00:06:35,620
할

766
00:06:35,640 --> 00:06:35,740
수

767
00:06:35,740 --> 00:06:36,420
있다는게

768
00:06:36,420 --> 00:06:36,640
최대

769
00:06:36,640 --> 00:06:37,620
장점이에요.

770
00:06:38,220 --> 00:06:38,380
그래서

771
00:06:38,380 --> 00:06:38,840
명령어

772
00:06:38,840 --> 00:06:39,260
3개를

773
00:06:39,260 --> 00:06:39,640
쫙

774
00:06:39,640 --> 00:06:39,780
다

775
00:06:39,780 --> 00:06:40,160
수행을

776
00:06:40,160 --> 00:06:40,340
할

777
00:06:40,440 --> 00:06:40,680
때는

778
00:06:40,680 --> 00:06:42,320
각각의

779
00:06:42,320 --> 00:06:43,000
명령어는

780
00:06:43,000 --> 00:06:43,720
1000pc,

781
00:06:43,860 --> 00:06:44,640
1000pc

782
00:06:44,640 --> 00:06:45,620
걸리지만

783
00:06:46,380 --> 00:06:46,500
이제

784
00:06:46,500 --> 00:06:47,680
실질적으로

785
00:06:47,680 --> 00:06:48,560
미닝풀한

786
00:06:48,560 --> 00:06:49,320
작업이

787
00:06:49,320 --> 00:06:49,760
다

788
00:06:49,760 --> 00:06:50,220
끝나는

789
00:06:50,220 --> 00:06:50,620
시간을

790
00:06:50,800 --> 00:06:51,060
기준으로

791
00:06:51,060 --> 00:06:51,480
했을

792
00:06:51,480 --> 00:06:51,680
때는

793
00:06:51,680 --> 00:06:53,800
1300pc면

794
00:06:53,800 --> 00:06:54,480
명령어

795
00:06:54,480 --> 00:06:54,780
3개를

796
00:06:54,780 --> 00:06:55,000
다

797
00:06:55,140 --> 00:06:55,340
실행을

798
00:06:55,340 --> 00:06:55,500
할

799
00:06:55,560 --> 00:06:55,660
수

800
00:06:55,660 --> 00:06:56,120
있다는

801
00:06:56,120 --> 00:06:56,870
것이고

802
00:06:57,540 --> 00:06:57,700
우리가

803
00:06:57,700 --> 00:06:58,180
clock

804
00:06:58,840 --> 00:06:59,220
cycle

805
00:06:59,220 --> 00:06:59,920
count를

806
00:06:59,920 --> 00:07:00,620
기준으로

807
00:07:00,620 --> 00:07:01,260
명령어가

808
00:07:01,260 --> 00:07:02,020
3개가

809
00:07:02,020 --> 00:07:02,480
실행이

810
00:07:02,480 --> 00:07:02,620
되는데

811
00:07:02,620 --> 00:07:02,860
총

812
00:07:02,860 --> 00:07:03,400
얼마가

813
00:07:03,400 --> 00:07:03,900
걸렸냐?

814
00:07:04,180 --> 00:07:04,340
이렇게

815
00:07:04,340 --> 00:07:04,800
계산을

816
00:07:04,800 --> 00:07:05,160
해보면

817
00:07:05,160 --> 00:07:06,020
clock이

818
00:07:06,020 --> 00:07:07,000
200pc이고

819
00:07:07,000 --> 00:07:07,880
명령어가

820
00:07:07,880 --> 00:07:08,340
3개니까

821
00:07:08,340 --> 00:07:08,580
총

822
00:07:08,580 --> 00:07:09,280
7cycle이

823
00:07:09,280 --> 00:07:09,540
걸릴

824
00:07:09,540 --> 00:07:09,780
겁니다.

825
00:07:10,280 --> 00:07:10,380
그러면

826
00:07:10,380 --> 00:07:11,000
7cycle

827
00:07:11,000 --> 00:07:11,500
곱하기

828
00:07:11,520 --> 00:07:12,920
200pc에서

829
00:07:12,920 --> 00:07:13,620
총

830
00:07:13,620 --> 00:07:15,440
1400pc가

831
00:07:15,440 --> 00:07:16,100
걸리는

832
00:07:16,320 --> 00:07:16,420
식으로

833
00:07:16,420 --> 00:07:17,060
single

834
00:07:17,060 --> 00:07:17,340
cycle

835
00:07:17,340 --> 00:07:17,800
cpu에

836
00:07:17,800 --> 00:07:18,100
비해서

837
00:07:18,100 --> 00:07:18,580
명령어

838
00:07:18,580 --> 00:07:18,900
하나의

839
00:07:19,000 --> 00:07:19,100
실행

840
00:07:19,100 --> 00:07:19,600
시간은

841
00:07:19,600 --> 00:07:20,280
늘어났지만

842
00:07:20,840 --> 00:07:20,980
여러

843
00:07:20,980 --> 00:07:21,580
명령어를

844
00:07:21,580 --> 00:07:22,320
실행시키는

845
00:07:22,320 --> 00:07:22,860
전체적인

846
00:07:23,140 --> 00:07:23,300
시간은

847
00:07:23,300 --> 00:07:23,680
굉장히

848
00:07:23,680 --> 00:07:24,140
줄어들

849
00:07:24,140 --> 00:07:24,320
수

850
00:07:24,320 --> 00:07:24,700
있다는

851
00:07:25,300 --> 00:07:25,400
것이

852
00:07:25,400 --> 00:07:26,640
파이프라인의

853
00:07:26,640 --> 00:07:27,320
컨셉이다

854
00:07:27,320 --> 00:07:27,660
라고

855
00:07:27,660 --> 00:07:28,040
말씀을

856
00:07:28,040 --> 00:07:28,990
드렸습니다.

857
00:07:29,800 --> 00:07:29,900
그래서

858
00:07:29,900 --> 00:07:31,080
파이프라인을

859
00:07:31,080 --> 00:07:31,660
이제

860
00:07:31,660 --> 00:07:32,120
우리가

861
00:07:32,120 --> 00:07:33,700
오늘부터는

862
00:07:33,700 --> 00:07:33,960
이제

863
00:07:33,960 --> 00:07:34,180
이

864
00:07:34,180 --> 00:07:34,780
파이프라인을

865
00:07:34,780 --> 00:07:35,300
실제로

866
00:07:35,300 --> 00:07:35,640
single

867
00:07:35,640 --> 00:07:35,960
cycle

868
00:07:35,960 --> 00:07:36,480
cpu

869
00:07:36,480 --> 00:07:36,920
하드웨어

870
00:07:36,920 --> 00:07:37,260
구조로

871
00:07:37,260 --> 00:07:37,640
확장을

872
00:07:37,640 --> 00:07:37,960
해서

873
00:07:38,500 --> 00:07:38,780
하드웨어

874
00:07:38,780 --> 00:07:39,160
레벨에서

875
00:07:39,160 --> 00:07:39,400
어떻게

876
00:07:39,400 --> 00:07:39,860
구현할

877
00:07:39,860 --> 00:07:39,960
수

878
00:07:39,960 --> 00:07:40,380
있을까?

879
00:07:40,500 --> 00:07:40,600
이

880
00:07:40,600 --> 00:07:40,940
얘기를

881
00:07:40,940 --> 00:07:41,400
들어갈

882
00:07:41,400 --> 00:07:41,680
거에요.

883
00:07:42,340 --> 00:07:42,540
그러면

884
00:07:42,540 --> 00:07:42,980
그것을

885
00:07:42,980 --> 00:07:43,180
하기

886
00:07:43,180 --> 00:07:44,200
위해서는

887
00:07:44,280 --> 00:07:44,420
우리가

888
00:07:44,420 --> 00:07:45,040
지난

889
00:07:45,040 --> 00:07:45,880
시간까지

890
00:07:45,880 --> 00:07:46,220
그리고

891
00:07:46,220 --> 00:07:46,680
직전

892
00:07:46,680 --> 00:07:47,720
슬라이드까지는

893
00:07:47,720 --> 00:07:48,000
우리가

894
00:07:48,000 --> 00:07:48,340
계속

895
00:07:48,340 --> 00:07:48,620
얘기를

896
00:07:48,620 --> 00:07:49,220
했던게

897
00:07:49,640 --> 00:07:50,040
instruction

898
00:07:50,040 --> 00:07:50,420
batch,

899
00:07:50,580 --> 00:07:50,940
instruction

900
00:07:50,940 --> 00:07:51,440
decode,

901
00:07:51,620 --> 00:07:51,900
execute,

902
00:07:52,520 --> 00:07:52,760
memory

903
00:07:52,760 --> 00:07:53,140
access,

904
00:07:53,280 --> 00:07:53,500
write

905
00:07:53,560 --> 00:07:53,700
back

906
00:07:53,700 --> 00:07:53,900
이

907
00:07:53,980 --> 00:07:54,800
5개가

908
00:07:55,240 --> 00:07:55,380
즉

909
00:07:55,380 --> 00:07:55,820
명령어

910
00:07:55,820 --> 00:07:56,140
하나가

911
00:07:56,140 --> 00:07:56,440
5

912
00:07:56,440 --> 00:07:56,700
clock

913
00:07:56,700 --> 00:07:57,180
cycle을

914
00:07:57,180 --> 00:07:57,740
걸쳐서

915
00:07:57,740 --> 00:07:58,440
일어난다.

916
00:07:58,820 --> 00:07:59,040
그리고

917
00:07:59,040 --> 00:07:59,860
첫

918
00:07:59,860 --> 00:08:00,120
clock

919
00:08:00,120 --> 00:08:00,680
cycle에는

920
00:08:00,680 --> 00:08:00,960
첫

921
00:08:00,960 --> 00:08:01,180
번째

922
00:08:01,180 --> 00:08:01,660
명령의

923
00:08:01,660 --> 00:08:02,060
instruction

924
00:08:02,060 --> 00:08:02,380
batch

925
00:08:03,020 --> 00:08:03,300
stage를

926
00:08:03,300 --> 00:08:03,480
하게

927
00:08:03,480 --> 00:08:03,840
되고

928
00:08:03,840 --> 00:08:04,440
그러면

929
00:08:04,440 --> 00:08:04,640
두

930
00:08:04,640 --> 00:08:04,880
번째

931
00:08:04,880 --> 00:08:05,160
clock

932
00:08:05,160 --> 00:08:05,460
cycle

933
00:08:05,460 --> 00:08:05,920
넘어갈

934
00:08:05,920 --> 00:08:06,080
때

935
00:08:06,080 --> 00:08:06,320
그

936
00:08:06,320 --> 00:08:06,480
첫

937
00:08:06,480 --> 00:08:06,720
번째

938
00:08:06,720 --> 00:08:07,300
명령어의

939
00:08:07,300 --> 00:08:07,600
instruction

940
00:08:07,980 --> 00:08:08,140
decode

941
00:08:08,140 --> 00:08:08,620
stage가

942
00:08:08,620 --> 00:08:09,020
일어날

943
00:08:09,020 --> 00:08:09,320
건데

944
00:08:09,920 --> 00:08:10,040
첫

945
00:08:10,040 --> 00:08:10,260
번째

946
00:08:10,260 --> 00:08:10,760
명령어가

947
00:08:10,760 --> 00:08:11,160
instruction

948
00:08:11,160 --> 00:08:11,820
decode로

949
00:08:11,820 --> 00:08:12,540
넘어가면

950
00:08:12,540 --> 00:08:13,140
instruction

951
00:08:13,140 --> 00:08:13,700
batch를

952
00:08:13,700 --> 00:08:13,880
위한

953
00:08:13,880 --> 00:08:14,360
하드웨어가

954
00:08:14,360 --> 00:08:14,760
id를

955
00:08:14,760 --> 00:08:14,860
되죠.

956
00:08:15,460 --> 00:08:15,580
그러면

957
00:08:15,580 --> 00:08:15,840
두

958
00:08:15,840 --> 00:08:16,060
번째

959
00:08:16,060 --> 00:08:16,320
clock

960
00:08:16,320 --> 00:08:16,900
cycle에는

961
00:08:16,900 --> 00:08:17,200
두

962
00:08:17,200 --> 00:08:17,640
번째

963
00:08:17,640 --> 00:08:18,600
명령어의

964
00:08:18,600 --> 00:08:18,900
instruction

965
00:08:18,900 --> 00:08:19,180
batch

966
00:08:19,540 --> 00:08:19,640
stage도

967
00:08:19,640 --> 00:08:19,940
같이

968
00:08:19,940 --> 00:08:20,300
일어난다.

969
00:08:21,140 --> 00:08:21,960
컨셉츄얼리

970
00:08:21,960 --> 00:08:22,460
이제

971
00:08:22,460 --> 00:08:22,980
명령어가

972
00:08:22,980 --> 00:08:23,280
최대

973
00:08:23,280 --> 00:08:23,940
5개가

974
00:08:23,940 --> 00:08:24,580
오벌랩이

975
00:08:24,580 --> 00:08:25,300
딱딱딱딱

976
00:08:25,760 --> 00:08:26,280
걸쳐서

977
00:08:26,280 --> 00:08:26,540
쭉

978
00:08:26,540 --> 00:08:26,960
실행이

979
00:08:26,960 --> 00:08:27,100
될

980
00:08:27,100 --> 00:08:27,220
수

981
00:08:27,220 --> 00:08:27,500
있다.

982
00:08:27,620 --> 00:08:27,940
라는

983
00:08:27,980 --> 00:08:28,100
걸로

984
00:08:28,100 --> 00:08:28,500
말씀을

985
00:08:28,500 --> 00:08:28,600
드렸는데.

986
00:08:30,420 --> 00:08:31,020
그럼

987
00:08:31,020 --> 00:08:31,240
이제

988
00:08:31,240 --> 00:08:31,640
instruction

989
00:08:31,640 --> 00:08:31,940
batch

990
00:08:31,980 --> 00:08:32,660
stage는

991
00:08:32,660 --> 00:08:33,200
후반부

992
00:08:33,200 --> 00:08:33,460
half

993
00:08:33,580 --> 00:08:33,700
clock

994
00:08:33,700 --> 00:08:34,060
cycle

995
00:08:34,060 --> 00:08:34,220
때

996
00:08:34,220 --> 00:08:34,520
pc

997
00:08:34,520 --> 00:08:35,060
register가

998
00:08:35,060 --> 00:08:35,440
읽어서

999
00:08:35,440 --> 00:08:35,820
instruction

1000
00:08:35,980 --> 00:08:36,340
memory를

1001
00:08:36,340 --> 00:08:36,820
당겨갈

1002
00:08:36,900 --> 00:08:37,380
거고

1003
00:08:38,020 --> 00:08:38,140
등등등

1004
00:08:38,140 --> 00:08:38,340
이런

1005
00:08:38,340 --> 00:08:38,660
것들을

1006
00:08:38,660 --> 00:08:39,120
보완을

1007
00:08:39,120 --> 00:08:39,220
하면

1008
00:08:39,920 --> 00:08:40,020
이제

1009
00:08:40,020 --> 00:08:40,740
싱글사이클

1010
00:08:40,740 --> 00:08:41,220
cpu를

1011
00:08:41,220 --> 00:08:41,580
구성을

1012
00:08:41,580 --> 00:08:41,840
하는

1013
00:08:41,840 --> 00:08:42,100
좀

1014
00:08:42,100 --> 00:08:42,860
대표적인

1015
00:08:42,860 --> 00:08:43,300
하드웨어

1016
00:08:43,300 --> 00:08:43,600
구성

1017
00:08:43,680 --> 00:08:44,340
요소들을

1018
00:08:44,340 --> 00:08:44,840
가지고

1019
00:08:44,840 --> 00:08:45,420
저

1020
00:08:45,420 --> 00:08:46,360
타이플라이닝이

1021
00:08:46,360 --> 00:08:46,820
전체적으로

1022
00:08:46,820 --> 00:08:47,060
어떻게

1023
00:08:47,060 --> 00:08:47,560
실행이

1024
00:08:47,560 --> 00:08:48,020
되느냐.

1025
00:08:48,280 --> 00:08:48,380
이

1026
00:08:48,480 --> 00:08:48,920
타임라인을

1027
00:08:48,920 --> 00:08:49,420
그려보면

1028
00:08:49,420 --> 00:08:50,080
저기

1029
00:08:50,080 --> 00:08:51,100
슬라이드에

1030
00:08:51,100 --> 00:08:51,380
여러분들

1031
00:08:51,420 --> 00:08:51,900
보시는

1032
00:08:52,440 --> 00:08:52,540
그림처럼

1033
00:08:52,540 --> 00:08:52,920
되게

1034
00:08:52,920 --> 00:08:53,580
됩니다.

1035
00:08:54,320 --> 00:08:54,420
자

1036
00:08:54,420 --> 00:08:54,800
일단

1037
00:08:54,800 --> 00:08:55,460
첫

1038
00:08:55,460 --> 00:08:55,640
번째

1039
00:08:55,640 --> 00:08:55,860
clock

1040
00:08:55,860 --> 00:08:56,400
cycle에요.

1041
00:08:56,840 --> 00:08:56,980
첫

1042
00:08:56,980 --> 00:08:57,200
번째

1043
00:08:57,200 --> 00:08:57,520
clock

1044
00:08:57,520 --> 00:08:58,480
cycle에서는

1045
00:08:58,480 --> 00:08:58,860
첫

1046
00:08:58,880 --> 00:08:59,160
번째

1047
00:08:59,160 --> 00:08:59,900
명령어의

1048
00:08:59,900 --> 00:09:00,260
instruction

1049
00:09:00,260 --> 00:09:00,700
batch

1050
00:09:00,700 --> 00:09:01,320
stage만

1051
00:09:01,320 --> 00:09:01,780
실행이

1052
00:09:01,780 --> 00:09:01,960
되게

1053
00:09:01,960 --> 00:09:02,340
됩니다.

1054
00:09:03,100 --> 00:09:03,380
그런데

1055
00:09:03,380 --> 00:09:03,920
우리가

1056
00:09:03,920 --> 00:09:04,360
instruction

1057
00:09:04,360 --> 00:09:04,740
batch

1058
00:09:04,740 --> 00:09:05,500
stage는

1059
00:09:05,980 --> 00:09:06,160
memory

1060
00:09:06,160 --> 00:09:06,440
access

1061
00:09:06,440 --> 00:09:07,080
stage에서

1062
00:09:07,080 --> 00:09:07,480
이전에

1063
00:09:07,480 --> 00:09:07,780
브랜치

1064
00:09:07,860 --> 00:09:08,180
명령어

1065
00:09:08,180 --> 00:09:08,460
pc

1066
00:09:08,460 --> 00:09:08,780
register

1067
00:09:08,800 --> 00:09:09,340
업데이트를

1068
00:09:09,340 --> 00:09:09,580
할

1069
00:09:09,580 --> 00:09:09,760
수도

1070
00:09:09,760 --> 00:09:10,060
있기

1071
00:09:10,060 --> 00:09:10,500
때문에

1072
00:09:10,500 --> 00:09:11,220
두

1073
00:09:11,220 --> 00:09:11,580
번째

1074
00:09:11,580 --> 00:09:11,880
half

1075
00:09:11,880 --> 00:09:12,200
clock

1076
00:09:12,200 --> 00:09:13,120
cycle에

1077
00:09:13,120 --> 00:09:13,600
pc

1078
00:09:13,600 --> 00:09:14,000
register

1079
00:09:14,120 --> 00:09:14,400
값을

1080
00:09:14,440 --> 00:09:14,820
읽어서

1081
00:09:14,820 --> 00:09:15,280
instruction

1082
00:09:15,340 --> 00:09:16,000
memory로부터

1083
00:09:16,000 --> 00:09:16,360
데이터

1084
00:09:16,660 --> 00:09:17,380
당겨와서

1085
00:09:17,380 --> 00:09:17,880
4바이트를

1086
00:09:17,900 --> 00:09:18,100
읽고

1087
00:09:18,100 --> 00:09:18,380
온다.

1088
00:09:18,640 --> 00:09:18,740
라고

1089
00:09:18,740 --> 00:09:19,100
말씀을

1090
00:09:19,100 --> 00:09:19,540
드렸어요.

1091
00:09:20,220 --> 00:09:20,440
그러면

1092
00:09:20,440 --> 00:09:21,060
한

1093
00:09:21,060 --> 00:09:21,300
clock

1094
00:09:21,300 --> 00:09:21,920
cycle이

1095
00:09:21,920 --> 00:09:22,460
요렇게

1096
00:09:22,460 --> 00:09:22,900
있다.

1097
00:09:24,200 --> 00:09:24,340
라고

1098
00:09:24,340 --> 00:09:24,820
했을

1099
00:09:24,820 --> 00:09:24,980
때

1100
00:09:24,980 --> 00:09:25,400
이게

1101
00:09:25,400 --> 00:09:25,620
첫

1102
00:09:25,620 --> 00:09:25,800
번째

1103
00:09:25,800 --> 00:09:26,060
clock

1104
00:09:26,100 --> 00:09:26,480
cycle이

1105
00:09:26,480 --> 00:09:26,660
되게

1106
00:09:26,660 --> 00:09:27,080
되는데

1107
00:09:27,880 --> 00:09:27,980
첫

1108
00:09:27,980 --> 00:09:28,300
half

1109
00:09:28,300 --> 00:09:28,600
clock

1110
00:09:28,600 --> 00:09:28,960
cycle

1111
00:09:28,960 --> 00:09:29,480
동안은

1112
00:09:29,480 --> 00:09:29,720
사실

1113
00:09:29,720 --> 00:09:30,100
아무것도

1114
00:09:30,100 --> 00:09:30,620
안합니다.

1115
00:09:30,880 --> 00:09:31,200
하드웨어

1116
00:09:31,200 --> 00:09:31,680
측면에서는.

1117
00:09:32,500 --> 00:09:32,740
여기서

1118
00:09:32,740 --> 00:09:33,040
이

1119
00:09:33,040 --> 00:09:33,540
im은

1120
00:09:33,540 --> 00:09:33,940
instruction

1121
00:09:33,940 --> 00:09:34,440
memory에요.

1122
00:09:35,260 --> 00:09:35,420
그러면

1123
00:09:35,420 --> 00:09:35,660
이

1124
00:09:35,660 --> 00:09:36,080
instruction

1125
00:09:36,080 --> 00:09:36,700
memory가

1126
00:09:36,700 --> 00:09:37,200
실제로

1127
00:09:37,200 --> 00:09:37,900
활용되는

1128
00:09:37,900 --> 00:09:38,780
순간은

1129
00:09:38,780 --> 00:09:39,240
언제냐?

1130
00:09:39,880 --> 00:09:40,020
이

1131
00:09:40,020 --> 00:09:40,260
clock

1132
00:09:40,260 --> 00:09:40,940
signal이

1133
00:09:40,940 --> 00:09:41,500
0에서

1134
00:09:41,500 --> 00:09:41,840
1로

1135
00:09:41,840 --> 00:09:42,280
갔다가

1136
00:09:42,280 --> 00:09:42,760
1에서

1137
00:09:42,760 --> 00:09:43,160
0으로

1138
00:09:43,160 --> 00:09:43,520
갔다가

1139
00:09:43,520 --> 00:09:43,820
다시

1140
00:09:43,900 --> 00:09:44,180
0에서

1141
00:09:44,180 --> 00:09:44,460
1이

1142
00:09:44,460 --> 00:09:44,680
될텐데

1143
00:09:44,900 --> 00:09:45,440
이

1144
00:09:45,520 --> 00:09:45,680
두

1145
00:09:45,680 --> 00:09:45,960
번째

1146
00:09:45,960 --> 00:09:46,760
half

1147
00:09:46,780 --> 00:09:47,060
clock

1148
00:09:47,060 --> 00:09:47,480
cycle

1149
00:09:47,480 --> 00:09:47,680
때

1150
00:09:47,680 --> 00:09:48,100
pc

1151
00:09:48,120 --> 00:09:48,420
값

1152
00:09:48,420 --> 00:09:48,960
읽어서

1153
00:09:48,960 --> 00:09:49,440
걔를

1154
00:09:49,440 --> 00:09:49,940
조서로

1155
00:09:49,940 --> 00:09:50,420
instruction

1156
00:09:50,560 --> 00:09:50,880
memory에

1157
00:09:51,140 --> 00:09:51,240
넣고

1158
00:09:51,240 --> 00:09:52,440
4바이트를

1159
00:09:52,440 --> 00:09:53,080
당겨오는

1160
00:09:53,080 --> 00:09:53,520
시간이

1161
00:09:53,760 --> 00:09:54,100
되게

1162
00:09:54,100 --> 00:09:54,620
되는

1163
00:09:54,620 --> 00:09:54,700
거죠.

1164
00:09:55,480 --> 00:09:55,640
그러면

1165
00:09:55,640 --> 00:09:56,080
instruction

1166
00:09:56,080 --> 00:09:56,440
memory

1167
00:09:56,440 --> 00:09:57,000
자체가

1168
00:09:57,000 --> 00:09:57,680
액세스가

1169
00:09:57,680 --> 00:09:58,000
되는

1170
00:09:58,000 --> 00:09:58,420
것은

1171
00:09:58,420 --> 00:09:58,780
이제

1172
00:09:58,780 --> 00:09:59,140
두

1173
00:09:59,140 --> 00:09:59,400
번째

1174
00:09:59,400 --> 00:09:59,680
half

1175
00:09:59,840 --> 00:09:59,940
clock

1176
00:09:59,940 --> 00:10:00,340
cycle

1177
00:10:00,340 --> 00:10:00,680
즉

1178
00:10:00,800 --> 00:10:00,960
clock

1179
00:10:00,960 --> 00:10:01,360
period

1180
00:10:01,360 --> 00:10:01,900
나누기

1181
00:10:02,380 --> 00:10:02,880
이만큼의

1182
00:10:02,880 --> 00:10:03,160
시간

1183
00:10:03,280 --> 00:10:03,520
동안

1184
00:10:03,520 --> 00:10:04,540
활용이

1185
00:10:05,040 --> 00:10:05,140
된다고

1186
00:10:05,140 --> 00:10:05,660
생각할

1187
00:10:05,740 --> 00:10:05,840
수가

1188
00:10:05,840 --> 00:10:05,960
있습니다.

1189
00:10:07,280 --> 00:10:07,380
자

1190
00:10:07,380 --> 00:10:07,700
그럼

1191
00:10:07,700 --> 00:10:08,020
두

1192
00:10:08,020 --> 00:10:08,240
번째

1193
00:10:08,240 --> 00:10:08,520
clock

1194
00:10:08,520 --> 00:10:09,000
cycle로

1195
00:10:09,000 --> 00:10:09,300
가게

1196
00:10:09,300 --> 00:10:09,540
되면

1197
00:10:09,540 --> 00:10:10,160
이제

1198
00:10:10,160 --> 00:10:10,640
instruction

1199
00:10:10,640 --> 00:10:11,060
batch는

1200
00:10:11,060 --> 00:10:11,500
끝났죠.

1201
00:10:11,600 --> 00:10:11,760
clock

1202
00:10:11,760 --> 00:10:12,040
cycle

1203
00:10:12,040 --> 00:10:12,480
1에서.

1204
00:10:12,800 --> 00:10:12,920
그럼

1205
00:10:12,920 --> 00:10:13,280
clock

1206
00:10:13,280 --> 00:10:13,480
cycle

1207
00:10:13,480 --> 00:10:14,040
2때는

1208
00:10:14,040 --> 00:10:14,260
첫

1209
00:10:14,260 --> 00:10:14,480
번째

1210
00:10:14,480 --> 00:10:15,020
명령어에

1211
00:10:15,020 --> 00:10:15,380
대해서는

1212
00:10:15,380 --> 00:10:15,780
register

1213
00:10:15,780 --> 00:10:16,260
file을

1214
00:10:16,260 --> 00:10:16,480
우리가

1215
00:10:16,480 --> 00:10:16,900
액세스를

1216
00:10:17,020 --> 00:10:17,140
하게

1217
00:10:17,140 --> 00:10:17,700
됩니다.

1218
00:10:18,600 --> 00:10:18,720
근데

1219
00:10:18,720 --> 00:10:19,160
register

1220
00:10:19,160 --> 00:10:20,060
file도

1221
00:10:20,300 --> 00:10:20,560
이전

1222
00:10:20,560 --> 00:10:21,020
명령어에

1223
00:10:21,020 --> 00:10:21,380
right

1224
00:10:21,380 --> 00:10:21,580
back

1225
00:10:21,580 --> 00:10:22,080
stage를

1226
00:10:22,080 --> 00:10:22,560
통해서

1227
00:10:22,560 --> 00:10:23,280
destination

1228
00:10:23,280 --> 00:10:23,760
register

1229
00:10:23,980 --> 00:10:24,080
쓸

1230
00:10:24,080 --> 00:10:24,400
수가

1231
00:10:24,400 --> 00:10:24,720
있기

1232
00:10:24,840 --> 00:10:25,160
때문에

1233
00:10:25,160 --> 00:10:25,820
register

1234
00:10:25,860 --> 00:10:26,180
file

1235
00:10:26,180 --> 00:10:27,040
또한

1236
00:10:27,300 --> 00:10:27,460
instruction

1237
00:10:27,460 --> 00:10:28,020
decode

1238
00:10:28,020 --> 00:10:28,800
stage에서는

1239
00:10:28,800 --> 00:10:29,040
두

1240
00:10:29,040 --> 00:10:29,300
번째

1241
00:10:29,300 --> 00:10:29,580
half

1242
00:10:29,740 --> 00:10:29,840
clock

1243
00:10:29,840 --> 00:10:30,220
cycle

1244
00:10:30,220 --> 00:10:30,420
때

1245
00:10:30,500 --> 00:10:30,980
활용이

1246
00:10:30,980 --> 00:10:31,080
돼요.

1247
00:10:31,820 --> 00:10:31,980
그러면

1248
00:10:31,980 --> 00:10:32,560
여기도

1249
00:10:32,560 --> 00:10:33,160
한번

1250
00:10:33,160 --> 00:10:33,400
clock

1251
00:10:33,400 --> 00:10:33,640
signal

1252
00:10:33,640 --> 00:10:33,960
하나

1253
00:10:33,960 --> 00:10:34,320
요렇게

1254
00:10:34,380 --> 00:10:34,540
딱

1255
00:10:34,720 --> 00:10:35,160
그려보면

1256
00:10:36,360 --> 00:10:36,460
이

1257
00:10:36,460 --> 00:10:37,080
기간이

1258
00:10:37,220 --> 00:10:37,320
지금

1259
00:10:37,320 --> 00:10:37,540
두

1260
00:10:37,540 --> 00:10:37,740
번째

1261
00:10:37,740 --> 00:10:37,980
clock

1262
00:10:38,040 --> 00:10:38,420
cycle이

1263
00:10:38,420 --> 00:10:38,580
되게

1264
00:10:38,600 --> 00:10:39,060
될텐데

1265
00:10:39,680 --> 00:10:39,780
첫

1266
00:10:39,780 --> 00:10:39,940
번째

1267
00:10:39,940 --> 00:10:40,180
half

1268
00:10:40,180 --> 00:10:40,380
clock

1269
00:10:40,380 --> 00:10:40,600
cycle

1270
00:10:40,600 --> 00:10:40,700
동안은 안합니다.

1271
00:10:43,280 --> 00:10:43,560
대신

1272
00:10:43,560 --> 00:10:43,820
두

1273
00:10:43,820 --> 00:10:44,080
번째

1274
00:10:44,080 --> 00:10:44,320
half

1275
00:10:44,320 --> 00:10:44,600
clock

1276
00:10:44,700 --> 00:10:45,100
cycle

1277
00:10:45,100 --> 00:10:45,800
즉

1278
00:10:45,940 --> 00:10:46,080
clock

1279
00:10:46,080 --> 00:10:46,580
signal이

1280
00:10:46,580 --> 00:10:46,940
1에서

1281
00:10:46,940 --> 00:10:47,320
0으로

1282
00:10:47,320 --> 00:10:48,220
떨어졌을

1283
00:10:48,240 --> 00:10:48,440
때

1284
00:10:48,440 --> 00:10:48,800
그러면

1285
00:10:48,800 --> 00:10:48,980
이제

1286
00:10:48,980 --> 00:10:49,180
딱

1287
00:10:49,260 --> 00:10:49,700
절반이

1288
00:10:50,080 --> 00:10:50,540
지났다는

1289
00:10:50,780 --> 00:10:51,220
소리니까

1290
00:10:51,220 --> 00:10:51,920
그

1291
00:10:51,920 --> 00:10:52,680
순간부터

1292
00:10:52,680 --> 00:10:53,720
명령어에

1293
00:10:53,720 --> 00:10:54,480
rs랑

1294
00:10:54,480 --> 00:10:54,920
rt

1295
00:10:55,020 --> 00:10:55,200
build

1296
00:10:55,200 --> 00:10:55,400
값

1297
00:10:55,540 --> 00:10:55,940
받아서

1298
00:10:55,940 --> 00:10:56,620
register

1299
00:10:56,620 --> 00:10:56,940
file

1300
00:10:56,940 --> 00:10:57,440
액세서

1301
00:10:57,460 --> 00:10:57,820
해서

1302
00:10:57,820 --> 00:10:58,460
rs

1303
00:10:58,460 --> 00:10:58,780
rt

1304
00:10:59,000 --> 00:10:59,120
값을

1305
00:10:59,120 --> 00:10:59,580
읽어내는

1306
00:10:59,840 --> 00:11:00,200
작업을

1307
00:11:00,200 --> 00:11:00,720
거치게

1308
00:11:00,720 --> 00:11:01,220
됩니다.

1309
00:11:01,940 --> 00:11:02,140
그래서

1310
00:11:02,140 --> 00:11:02,920
하드웨어

1311
00:11:02,920 --> 00:11:03,440
도면을

1312
00:11:03,440 --> 00:11:03,800
봤을

1313
00:11:03,900 --> 00:11:04,060
때는

1314
00:11:04,640 --> 00:11:05,060
흰색은

1315
00:11:05,060 --> 00:11:05,480
아이들

1316
00:11:05,480 --> 00:11:05,980
회색은

1317
00:11:05,980 --> 00:11:06,320
쓰이는

1318
00:11:06,360 --> 00:11:06,460
거

1319
00:11:06,460 --> 00:11:07,060
흰색은

1320
00:11:07,060 --> 00:11:07,240
안

1321
00:11:07,380 --> 00:11:07,480
쓰고

1322
00:11:07,480 --> 00:11:07,960
회색은

1323
00:11:07,960 --> 00:11:08,160
쓰는

1324
00:11:08,160 --> 00:11:08,600
거

1325
00:11:08,600 --> 00:11:08,760
딱

1326
00:11:08,800 --> 00:11:09,200
요렇게

1327
00:11:09,200 --> 00:11:09,920
절반

1328
00:11:10,080 --> 00:11:10,400
절반

1329
00:11:10,400 --> 00:11:10,720
이렇게

1330
00:11:10,720 --> 00:11:11,280
쓰인다.

1331
00:11:11,380 --> 00:11:11,560
라고

1332
00:11:11,660 --> 00:11:11,780
볼

1333
00:11:11,780 --> 00:11:11,940
수가

1334
00:11:11,940 --> 00:11:12,300
있구요.

1335
00:11:13,120 --> 00:11:13,260
그리고

1336
00:11:13,260 --> 00:11:13,500
두

1337
00:11:13,500 --> 00:11:13,700
번째

1338
00:11:13,700 --> 00:11:13,940
clock

1339
00:11:13,940 --> 00:11:14,540
cycle이기

1340
00:11:14,540 --> 00:11:14,760
때문에

1341
00:11:14,760 --> 00:11:15,020
두

1342
00:11:15,020 --> 00:11:15,260
번째

1343
00:11:15,260 --> 00:11:15,840
명령어의

1344
00:11:15,840 --> 00:11:16,180
instruction

1345
00:11:16,180 --> 00:11:16,500
batch

1346
00:11:16,920 --> 00:11:17,040
stage도

1347
00:11:17,040 --> 00:11:17,260
같이

1348
00:11:17,260 --> 00:11:17,460
하면

1349
00:11:17,460 --> 00:11:17,820
됩니다.

1350
00:11:18,400 --> 00:11:18,640
instruction

1351
00:11:18,640 --> 00:11:19,000
batch

1352
00:11:19,000 --> 00:11:19,440
stage

1353
00:11:19,460 --> 00:11:20,000
우리가

1354
00:11:20,000 --> 00:11:20,260
첫

1355
00:11:20,260 --> 00:11:20,480
번째

1356
00:11:20,480 --> 00:11:21,060
명령어가

1357
00:11:21,060 --> 00:11:21,360
두

1358
00:11:21,360 --> 00:11:21,540
번째

1359
00:11:21,540 --> 00:11:21,740
half

1360
00:11:21,840 --> 00:11:21,940
clock

1361
00:11:21,940 --> 00:11:22,300
cycle

1362
00:11:22,460 --> 00:11:22,620
동안

1363
00:11:22,620 --> 00:11:23,060
instruction

1364
00:11:23,080 --> 00:11:23,580
memory를

1365
00:11:23,580 --> 00:11:23,700
입대해서부터

1366
00:11:24,600 --> 00:11:25,100
한

1367
00:11:25,100 --> 00:11:26,080
것처럼

1368
00:11:26,080 --> 00:11:26,780
얘도

1369
00:11:26,780 --> 00:11:27,140
두

1370
00:11:27,140 --> 00:11:27,420
번째

1371
00:11:27,420 --> 00:11:27,760
half

1372
00:11:27,760 --> 00:11:27,960
clock

1373
00:11:28,660 --> 00:11:29,140
cycle에서만

1374
00:11:29,360 --> 00:11:29,460
instruction

1375
00:11:29,460 --> 00:11:30,100
memory를

1376
00:11:30,100 --> 00:11:30,760
활용하게

1377
00:11:30,760 --> 00:11:31,280
되는

1378
00:11:31,280 --> 00:11:31,940
것이구요.

1379
00:11:33,000 --> 00:11:33,140
그럼

1380
00:11:33,140 --> 00:11:33,320
이제

1381
00:11:33,320 --> 00:11:33,540
세

1382
00:11:33,540 --> 00:11:33,720
번째

1383
00:11:33,720 --> 00:11:33,960
clock

1384
00:11:33,960 --> 00:11:34,460
cycle이

1385
00:11:34,460 --> 00:11:34,660
되면

1386
00:11:34,660 --> 00:11:35,140
명령어

1387
00:11:35,140 --> 00:11:35,740
3개까지

1388
00:11:35,740 --> 00:11:36,280
오블랩이

1389
00:11:36,280 --> 00:11:36,440
되게

1390
00:11:36,440 --> 00:11:36,840
되죠.

1391
00:11:37,120 --> 00:11:37,360
그러면

1392
00:11:37,360 --> 00:11:37,680
이

1393
00:11:37,780 --> 00:11:37,880
세

1394
00:11:37,880 --> 00:11:38,080
번째

1395
00:11:38,080 --> 00:11:38,540
명령어에

1396
00:11:38,540 --> 00:11:38,740
대한

1397
00:11:38,740 --> 00:11:39,100
instruction

1398
00:11:39,580 --> 00:11:39,720
batch는

1399
00:11:39,720 --> 00:11:40,060
얘랑

1400
00:11:40,060 --> 00:11:40,620
비슷하고

1401
00:11:41,260 --> 00:11:41,360
이

1402
00:11:41,360 --> 00:11:41,560
두

1403
00:11:41,560 --> 00:11:41,760
번째

1404
00:11:41,760 --> 00:11:42,220
명령어에

1405
00:11:42,220 --> 00:11:42,400
대한

1406
00:11:42,400 --> 00:11:42,760
instruction

1407
00:11:43,060 --> 00:11:43,300
decode는

1408
00:11:43,300 --> 00:11:43,580
얘랑

1409
00:11:43,580 --> 00:11:44,160
비슷한데

1410
00:11:44,380 --> 00:11:45,580
alu는

1411
00:11:45,580 --> 00:11:46,320
어차피

1412
00:11:46,320 --> 00:11:46,800
우리가

1413
00:11:46,800 --> 00:11:47,260
다른

1414
00:11:47,260 --> 00:11:48,040
스테이지랑

1415
00:11:48,040 --> 00:11:48,820
경쟁을

1416
00:11:48,820 --> 00:11:49,020
해야

1417
00:11:49,020 --> 00:11:49,220
될

1418
00:11:49,220 --> 00:11:49,700
리소스가

1419
00:11:49,700 --> 00:11:50,200
아니기

1420
00:11:50,200 --> 00:11:50,260
때문에

1421
00:11:50,780 --> 00:11:51,220
alu는

1422
00:11:51,520 --> 00:11:51,660
그냥

1423
00:11:51,660 --> 00:11:51,940
한

1424
00:11:51,940 --> 00:11:52,160
clock

1425
00:11:52,160 --> 00:11:52,420
cycle

1426
00:11:52,420 --> 00:11:53,180
통째로

1427
00:11:53,180 --> 00:11:53,720
이

1428
00:11:53,740 --> 00:11:54,080
execute

1429
00:11:54,080 --> 00:11:54,860
stage를

1430
00:11:54,860 --> 00:11:55,380
실행하고

1431
00:11:55,380 --> 00:11:55,640
있는

1432
00:11:55,640 --> 00:11:56,220
명령어의

1433
00:11:56,320 --> 00:11:56,420
첫

1434
00:11:56,420 --> 00:11:56,640
번째

1435
00:11:56,640 --> 00:11:57,160
명령어가

1436
00:11:57,160 --> 00:11:57,400
다

1437
00:11:57,400 --> 00:11:57,800
쓴다.

1438
00:11:58,020 --> 00:11:58,200
라고

1439
00:11:58,400 --> 00:11:58,520
생각을

1440
00:11:58,520 --> 00:11:58,820
하시면

1441
00:11:58,820 --> 00:11:59,100
됩니다.

1442
00:11:59,640 --> 00:11:59,800
그래서

1443
00:11:59,900 --> 00:12:00,480
alu는

1444
00:12:00,480 --> 00:12:01,320
전체가

1445
00:12:01,320 --> 00:12:01,620
다

1446
00:12:01,620 --> 00:12:02,240
회색으로

1447
00:12:02,240 --> 00:12:02,580
쳐져

1448
00:12:02,580 --> 00:12:02,920
있는

1449
00:12:03,400 --> 00:12:03,500
그

1450
00:12:03,500 --> 00:12:03,880
clock

1451
00:12:03,880 --> 00:12:04,200
cycle

1452
00:12:04,200 --> 00:12:05,140
동안은

1453
00:12:05,300 --> 00:12:05,460
그

1454
00:12:05,460 --> 00:12:05,840
clock

1455
00:12:05,840 --> 00:12:06,280
cycle의

1456
00:12:06,280 --> 00:12:06,620
execute

1457
00:12:06,640 --> 00:12:07,300
stage를

1458
00:12:07,300 --> 00:12:07,920
실행하는

1459
00:12:07,920 --> 00:12:08,540
명령어를

1460
00:12:08,700 --> 00:12:08,920
의해서

1461
00:12:08,920 --> 00:12:09,420
완전히

1462
00:12:09,420 --> 00:12:09,920
정리된다.

1463
00:12:10,360 --> 00:12:10,460
라고

1464
00:12:10,460 --> 00:12:10,780
생각을

1465
00:12:10,780 --> 00:12:11,100
하시면

1466
00:12:11,100 --> 00:12:11,520
됩니다.

1467
00:12:12,280 --> 00:12:12,380
자

1468
00:12:12,380 --> 00:12:12,600
그럼

1469
00:12:12,600 --> 00:12:12,820
네

1470
00:12:12,820 --> 00:12:13,000
번째

1471
00:12:13,000 --> 00:12:13,280
clock

1472
00:12:13,280 --> 00:12:13,830
cycle입니다.

1473
00:12:14,040 --> 00:12:14,200
네

1474
00:12:14,200 --> 00:12:14,380
번째

1475
00:12:14,380 --> 00:12:14,680
clock

1476
00:12:14,680 --> 00:12:15,200
cycle은

1477
00:12:15,200 --> 00:12:15,560
memory

1478
00:12:15,560 --> 00:12:15,980
access

1479
00:12:15,980 --> 00:12:16,560
단계인데

1480
00:12:17,560 --> 00:12:17,860
만약에

1481
00:12:17,860 --> 00:12:18,320
add나

1482
00:12:18,320 --> 00:12:18,580
sub

1483
00:12:18,580 --> 00:12:19,040
명령어

1484
00:12:19,040 --> 00:12:19,220
같은

1485
00:12:19,320 --> 00:12:19,640
경우에는

1486
00:12:19,640 --> 00:12:19,900
저

1487
00:12:19,900 --> 00:12:20,260
data

1488
00:12:20,360 --> 00:12:20,880
memory를

1489
00:12:20,880 --> 00:12:21,160
애초에

1490
00:12:21,300 --> 00:12:21,400
쓰지

1491
00:12:21,400 --> 00:12:21,680
않아요.

1492
00:12:22,400 --> 00:12:22,500
근데

1493
00:12:22,500 --> 00:12:22,860
이제

1494
00:12:22,860 --> 00:12:23,140
우리가

1495
00:12:23,140 --> 00:12:23,440
지금

1496
00:12:23,520 --> 00:12:23,940
고려하고

1497
00:12:23,940 --> 00:12:24,120
있는

1498
00:12:24,120 --> 00:12:24,340
것은

1499
00:12:24,340 --> 00:12:24,700
load

1500
00:12:24,700 --> 00:12:24,940
word

1501
00:12:24,940 --> 00:12:25,480
명령어가

1502
00:12:25,480 --> 00:12:25,860
3개에

1503
00:12:25,860 --> 00:12:26,280
나아가고

1504
00:12:26,280 --> 00:12:26,460
있는

1505
00:12:26,460 --> 00:12:26,880
거니까

1506
00:12:26,940 --> 00:12:27,640
load

1507
00:12:27,640 --> 00:12:27,920
word

1508
00:12:27,920 --> 00:12:28,280
명령어

1509
00:12:28,280 --> 00:12:28,440
같은

1510
00:12:28,440 --> 00:12:28,700
경우에는

1511
00:12:28,700 --> 00:12:28,960
data

1512
00:12:28,960 --> 00:12:29,460
memory를

1513
00:12:29,460 --> 00:12:29,820
접근을

1514
00:12:29,820 --> 00:12:30,080
합니다.

1515
00:12:30,840 --> 00:12:31,200
그런데

1516
00:12:31,200 --> 00:12:32,300
instruction

1517
00:12:32,300 --> 00:12:33,180
memory나

1518
00:12:33,180 --> 00:12:33,580
이제

1519
00:12:33,580 --> 00:12:34,060
register

1520
00:12:34,060 --> 00:12:34,520
file과

1521
00:12:34,520 --> 00:12:34,920
다르게

1522
00:12:34,920 --> 00:12:35,560
data

1523
00:12:35,560 --> 00:12:36,280
memory는

1524
00:12:36,280 --> 00:12:36,600
한

1525
00:12:36,680 --> 00:12:36,860
clock

1526
00:12:36,860 --> 00:12:37,480
cycle

1527
00:12:37,480 --> 00:12:38,220
동안

1528
00:12:38,220 --> 00:12:39,060
완전히

1529
00:12:39,060 --> 00:12:39,220
그

1530
00:12:39,220 --> 00:12:39,560
memory

1531
00:12:39,560 --> 00:12:39,980
access

1532
00:12:39,980 --> 00:12:40,660
스테이지를

1533
00:12:40,660 --> 00:12:41,120
실행을

1534
00:12:41,120 --> 00:12:41,360
하는

1535
00:12:41,360 --> 00:12:41,900
명령어가

1536
00:12:42,080 --> 00:12:42,180
정리를

1537
00:12:42,180 --> 00:12:42,380
할

1538
00:12:42,380 --> 00:12:42,520
수

1539
00:12:42,520 --> 00:12:42,920
있습니다.

1540
00:12:43,880 --> 00:12:44,080
그렇기

1541
00:12:44,080 --> 00:12:44,460
때문에

1542
00:12:44,460 --> 00:12:45,140
data

1543
00:12:45,140 --> 00:12:45,700
memory도

1544
00:12:45,700 --> 00:12:46,280
원래는

1545
00:12:46,280 --> 00:12:46,740
전체가

1546
00:12:46,740 --> 00:12:47,280
회색으로

1547
00:12:47,280 --> 00:12:47,600
되어야

1548
00:12:47,600 --> 00:12:48,140
되지만

1549
00:12:48,700 --> 00:12:48,920
근데

1550
00:12:48,920 --> 00:12:49,440
우리가

1551
00:12:49,440 --> 00:12:50,020
instruction

1552
00:12:50,040 --> 00:12:50,860
memory를

1553
00:12:50,860 --> 00:12:51,200
만들

1554
00:12:51,200 --> 00:12:51,560
때

1555
00:12:51,560 --> 00:12:52,620
어차피

1556
00:12:52,620 --> 00:12:53,280
두

1557
00:12:53,280 --> 00:12:53,560
번째

1558
00:12:53,560 --> 00:12:53,840
half

1559
00:12:53,840 --> 00:12:54,140
clock

1560
00:12:54,140 --> 00:12:54,540
cycle

1561
00:12:54,540 --> 00:12:54,940
안에

1562
00:12:54,940 --> 00:12:55,560
주소를

1563
00:12:55,560 --> 00:12:56,180
찍어주면

1564
00:12:56,180 --> 00:12:56,440
4

1565
00:12:56,440 --> 00:12:56,640
byte

1566
00:12:56,640 --> 00:12:57,200
data가

1567
00:12:57,200 --> 00:12:58,220
온다

1568
00:12:58,220 --> 00:12:58,440
라는

1569
00:12:58,440 --> 00:12:58,860
식의

1570
00:12:58,860 --> 00:12:59,220
구조를

1571
00:12:59,220 --> 00:12:59,580
가정을

1572
00:12:59,580 --> 00:13:00,000
했어요.

1573
00:13:00,860 --> 00:13:01,020
그러면

1574
00:13:01,020 --> 00:13:01,540
instruction

1575
00:13:01,540 --> 00:13:02,280
memory는

1576
00:13:02,280 --> 00:13:02,860
half

1577
00:13:02,960 --> 00:13:03,120
clock

1578
00:13:03,120 --> 00:13:03,960
cycle만의

1579
00:13:03,960 --> 00:13:04,660
데이터를

1580
00:13:04,660 --> 00:13:04,940
읽을

1581
00:13:04,940 --> 00:13:05,040
수

1582
00:13:05,040 --> 00:13:05,320
있는데

1583
00:13:05,320 --> 00:13:05,780
data

1584
00:13:05,780 --> 00:13:06,420
memory는

1585
00:13:06,440 --> 00:13:06,540
한

1586
00:13:06,540 --> 00:13:06,820
clock

1587
00:13:06,820 --> 00:13:07,180
cycle

1588
00:13:07,280 --> 00:13:07,620
내내

1589
00:13:07,620 --> 00:13:07,900
우리가

1590
00:13:07,900 --> 00:13:08,140
뭔가

1591
00:13:08,140 --> 00:13:08,380
해야

1592
00:13:08,380 --> 00:13:08,760
된다?

1593
00:13:09,120 --> 00:13:09,340
이상합니다.

1594
00:13:10,560 --> 00:13:10,660
그래서

1595
00:13:11,140 --> 00:13:11,240
data

1596
00:13:11,240 --> 00:13:12,000
memory는

1597
00:13:12,420 --> 00:13:12,800
instruction

1598
00:13:12,800 --> 00:13:13,420
memory랑

1599
00:13:13,420 --> 00:13:13,980
똑같은

1600
00:13:14,280 --> 00:13:14,500
기술로

1601
00:13:14,500 --> 00:13:15,620
만들어졌다

1602
00:13:15,620 --> 00:13:15,860
라고

1603
00:13:15,860 --> 00:13:16,320
가정을

1604
00:13:16,320 --> 00:13:16,800
하고

1605
00:13:16,800 --> 00:13:17,900
읽는

1606
00:13:17,900 --> 00:13:18,560
작업이기

1607
00:13:18,560 --> 00:13:19,000
때문에

1608
00:13:19,000 --> 00:13:19,560
half

1609
00:13:19,560 --> 00:13:19,880
clock

1610
00:13:20,000 --> 00:13:20,340
cycle

1611
00:13:20,340 --> 00:13:20,900
후반

1612
00:13:21,400 --> 00:13:21,500
그쪽에서

1613
00:13:21,500 --> 00:13:22,240
일어난다

1614
00:13:22,240 --> 00:13:22,700
라고

1615
00:13:22,900 --> 00:13:23,000
생각을

1616
00:13:23,000 --> 00:13:23,380
하시면

1617
00:13:23,380 --> 00:13:23,980
됩니다.

1618
00:13:24,540 --> 00:13:24,640
자

1619
00:13:24,640 --> 00:13:24,840
그럼

1620
00:13:24,840 --> 00:13:25,080
여기서

1621
00:13:25,080 --> 00:13:25,540
궁금해

1622
00:13:25,540 --> 00:13:25,820
주실

1623
00:13:25,820 --> 00:13:26,080
만한

1624
00:13:26,160 --> 00:13:26,400
부분이

1625
00:13:26,420 --> 00:13:27,200
얘가

1626
00:13:27,200 --> 00:13:27,360
만약

1627
00:13:27,360 --> 00:13:27,680
store

1628
00:13:27,680 --> 00:13:28,080
word면

1629
00:13:28,080 --> 00:13:28,520
어떻게

1630
00:13:28,520 --> 00:13:28,980
된거냐

1631
00:13:28,980 --> 00:13:29,080
라고

1632
00:13:29,400 --> 00:13:29,580
아실

1633
00:13:29,580 --> 00:13:29,700
수

1634
00:13:29,700 --> 00:13:30,020
있는데

1635
00:13:30,720 --> 00:13:30,900
store

1636
00:13:30,900 --> 00:13:31,500
word면

1637
00:13:31,500 --> 00:13:32,560
초반부

1638
00:13:32,560 --> 00:13:33,140
반이

1639
00:13:33,140 --> 00:13:33,240
활용됩니다.

1640
00:13:35,120 --> 00:13:35,320
그래서

1641
00:13:35,320 --> 00:13:35,920
여러분들이

1642
00:13:35,920 --> 00:13:36,200
지금

1643
00:13:36,200 --> 00:13:36,540
요

1644
00:13:36,540 --> 00:13:37,540
교재에서

1645
00:13:37,540 --> 00:13:37,800
쭉

1646
00:13:37,800 --> 00:13:38,100
얘기를

1647
00:13:38,100 --> 00:13:38,460
하는

1648
00:13:38,460 --> 00:13:38,860
memory

1649
00:13:38,860 --> 00:13:39,280
part

1650
00:13:39,280 --> 00:13:39,780
특히

1651
00:13:40,060 --> 00:13:40,180
memory

1652
00:13:40,180 --> 00:13:40,760
access나

1653
00:13:40,760 --> 00:13:41,180
register

1654
00:13:41,180 --> 00:13:41,460
file

1655
00:13:41,460 --> 00:13:41,900
access를

1656
00:13:41,900 --> 00:13:42,020
할

1657
00:13:42,020 --> 00:13:42,120
때

1658
00:13:42,120 --> 00:13:42,360
어떻게

1659
00:13:42,360 --> 00:13:43,000
생각하셔야

1660
00:13:43,000 --> 00:13:43,440
되냐면

1661
00:13:43,610 --> 00:13:44,460
한

1662
00:13:44,560 --> 00:13:44,700
clock

1663
00:13:44,700 --> 00:13:45,220
cycle이

1664
00:13:45,220 --> 00:13:45,520
있는데

1665
00:13:46,380 --> 00:13:46,620
그

1666
00:13:46,620 --> 00:13:47,160
한

1667
00:13:47,240 --> 00:13:47,360
clock

1668
00:13:47,360 --> 00:13:47,900
cycle의

1669
00:13:47,900 --> 00:13:48,940
초반부는

1670
00:13:49,160 --> 00:13:49,500
무조건

1671
00:13:49,500 --> 00:13:50,100
write을

1672
00:13:50,100 --> 00:13:50,200
담았습니다.

1673
00:13:51,560 --> 00:13:51,700
그리고

1674
00:13:51,700 --> 00:13:51,960
그

1675
00:13:51,960 --> 00:13:52,160
한

1676
00:13:52,160 --> 00:13:52,400
clock

1677
00:13:52,400 --> 00:13:52,820
cycle의

1678
00:13:52,820 --> 00:13:53,500
후반부는

1679
00:13:53,500 --> 00:13:53,880
무조건

1680
00:13:53,880 --> 00:13:54,440
read를

1681
00:13:54,440 --> 00:13:54,660
해요.

1682
00:13:54,940 --> 00:13:55,320
똑같은

1683
00:13:55,760 --> 00:13:55,860
memory나

1684
00:13:55,860 --> 00:13:56,300
register에 대해서.

1685
00:13:57,580 --> 00:13:57,720
그리고

1686
00:13:57,720 --> 00:13:58,380
그렇게

1687
00:13:58,380 --> 00:13:58,980
해야

1688
00:13:58,980 --> 00:13:59,700
여러분들이

1689
00:13:59,700 --> 00:14:00,340
추후

1690
00:14:00,340 --> 00:14:01,260
보시게

1691
00:14:01,260 --> 00:14:01,360
될

1692
00:14:01,360 --> 00:14:01,500
만큼

1693
00:14:01,500 --> 00:14:02,080
아시겠지만

1694
00:14:02,080 --> 00:14:03,080
직전

1695
00:14:03,080 --> 00:14:03,540
명령어

1696
00:14:03,540 --> 00:14:03,800
앞에

1697
00:14:03,800 --> 00:14:04,080
두

1698
00:14:04,080 --> 00:14:04,400
개나

1699
00:14:04,400 --> 00:14:04,620
세

1700
00:14:04,620 --> 00:14:04,740
개

1701
00:14:04,740 --> 00:14:04,880
전

1702
00:14:04,880 --> 00:14:05,460
명령어가

1703
00:14:05,460 --> 00:14:06,060
write하는

1704
00:14:06,060 --> 00:14:06,520
값을

1705
00:14:06,520 --> 00:14:06,960
바로

1706
00:14:07,400 --> 00:14:07,500
그

1707
00:14:07,500 --> 00:14:07,760
세

1708
00:14:07,760 --> 00:14:07,980
개가

1709
00:14:07,980 --> 00:14:08,280
뒤에

1710
00:14:08,280 --> 00:14:08,900
명령어가

1711
00:14:08,900 --> 00:14:09,220
읽을

1712
00:14:09,220 --> 00:14:09,340
수

1713
00:14:09,340 --> 00:14:09,940
있는

1714
00:14:10,060 --> 00:14:10,200
그런

1715
00:14:10,200 --> 00:14:10,740
좀

1716
00:14:11,040 --> 00:14:11,440
최대한

1717
00:14:11,500 --> 00:14:11,600
그

1718
00:14:11,600 --> 00:14:12,000
명령어

1719
00:14:12,000 --> 00:14:12,220
실행

1720
00:14:12,380 --> 00:14:12,580
시간을

1721
00:14:12,580 --> 00:14:12,840
줄일

1722
00:14:12,840 --> 00:14:12,940
수

1723
00:14:12,940 --> 00:14:13,060
있는

1724
00:14:13,060 --> 00:14:13,700
형태가

1725
00:14:13,700 --> 00:14:13,900
되게

1726
00:14:13,900 --> 00:14:14,360
되거든요.

1727
00:14:14,880 --> 00:14:14,980
근데

1728
00:14:14,980 --> 00:14:15,180
그건

1729
00:14:15,180 --> 00:14:15,400
뒤에

1730
00:14:15,400 --> 00:14:15,580
이제

1731
00:14:15,680 --> 00:14:15,860
data

1732
00:14:15,860 --> 00:14:16,820
warning

1733
00:14:16,820 --> 00:14:17,420
관련해서

1734
00:14:17,420 --> 00:14:17,680
얘기

1735
00:14:17,680 --> 00:14:17,940
나올

1736
00:14:17,940 --> 00:14:18,200
때

1737
00:14:18,200 --> 00:14:18,640
그때

1738
00:14:18,640 --> 00:14:19,160
말씀드릴

1739
00:14:19,160 --> 00:14:19,260
건데

1740
00:14:19,960 --> 00:14:20,280
아무튼

1741
00:14:20,280 --> 00:14:20,800
현재

1742
00:14:20,800 --> 00:14:21,500
여러분들이

1743
00:14:21,500 --> 00:14:21,900
이런

1744
00:14:21,900 --> 00:14:22,140
5

1745
00:14:22,140 --> 00:14:22,380
-stage

1746
00:14:22,680 --> 00:14:22,820
pipeline

1747
00:14:22,820 --> 00:14:23,340
hardware을

1748
00:14:23,340 --> 00:14:23,600
구성을

1749
00:14:23,600 --> 00:14:23,800
할

1750
00:14:23,800 --> 00:14:23,920
때

1751
00:14:24,040 --> 00:14:24,520
memory나

1752
00:14:24,520 --> 00:14:24,860
register

1753
00:14:25,040 --> 00:14:25,320
part

1754
00:14:25,880 --> 00:14:26,120
즉

1755
00:14:26,300 --> 00:14:26,420
어떤

1756
00:14:26,420 --> 00:14:26,820
값이

1757
00:14:26,820 --> 00:14:27,560
저장되는

1758
00:14:27,560 --> 00:14:28,420
hardware

1759
00:14:28,420 --> 00:14:28,860
요소가

1760
00:14:28,860 --> 00:14:29,040
있다.

1761
00:14:29,400 --> 00:14:29,500
sequentially

1762
00:14:29,500 --> 00:14:29,900
로식이

1763
00:14:29,900 --> 00:14:30,060
있다.

1764
00:14:30,660 --> 00:14:30,880
그러면

1765
00:14:30,880 --> 00:14:31,280
첫

1766
00:14:31,280 --> 00:14:31,500
half

1767
00:14:31,500 --> 00:14:31,760
clock

1768
00:14:31,760 --> 00:14:32,100
cycle

1769
00:14:32,100 --> 00:14:32,760
동안에는

1770
00:14:33,160 --> 00:14:33,620
거기에

1771
00:14:33,620 --> 00:14:33,800
대해서

1772
00:14:33,800 --> 00:14:34,340
write이

1773
00:14:34,340 --> 00:14:35,060
일어나고

1774
00:14:35,180 --> 00:14:35,280
두

1775
00:14:35,280 --> 00:14:35,480
번째

1776
00:14:35,480 --> 00:14:35,720
half

1777
00:14:35,840 --> 00:14:35,940
clock

1778
00:14:35,940 --> 00:14:36,580
cycle에는

1779
00:14:36,580 --> 00:14:37,240
거기에

1780
00:14:37,240 --> 00:14:37,680
저장된

1781
00:14:37,680 --> 00:14:38,000
값을

1782
00:14:38,000 --> 00:14:38,400
읽는

1783
00:14:38,400 --> 00:14:38,880
행위가

1784
00:14:38,880 --> 00:14:39,640
일어나는

1785
00:14:39,980 --> 00:14:40,220
일종의

1786
00:14:40,220 --> 00:14:40,900
dedicated

1787
00:14:41,520 --> 00:14:41,620
time

1788
00:14:41,620 --> 00:14:42,360
slot들이다.

1789
00:14:42,780 --> 00:14:42,880
라고

1790
00:14:42,880 --> 00:14:43,580
생각을

1791
00:14:43,580 --> 00:14:44,020
하시고

1792
00:14:44,020 --> 00:14:44,500
해석을

1793
00:14:44,500 --> 00:14:44,680
하면

1794
00:14:44,680 --> 00:14:44,780
편합니다.

1795
00:14:45,840 --> 00:14:46,080
그러면

1796
00:14:46,080 --> 00:14:47,200
지금

1797
00:14:47,200 --> 00:14:47,520
load

1798
00:14:47,520 --> 00:14:48,180
명령어니까

1799
00:14:48,180 --> 00:14:48,640
load

1800
00:14:48,640 --> 00:14:49,260
명령어는

1801
00:14:49,260 --> 00:14:49,520
우리가

1802
00:14:49,520 --> 00:14:49,860
data

1803
00:14:49,860 --> 00:14:50,360
memory에서

1804
00:14:50,360 --> 00:14:50,680
값을

1805
00:14:50,680 --> 00:14:51,060
읽는

1806
00:14:51,060 --> 00:14:51,580
행위잖아요.

1807
00:14:52,200 --> 00:14:52,320
그렇기

1808
00:14:52,320 --> 00:14:52,500
때문에

1809
00:14:52,500 --> 00:14:52,980
읽는

1810
00:14:52,980 --> 00:14:53,320
것은

1811
00:14:53,320 --> 00:14:53,820
우리가

1812
00:14:53,820 --> 00:14:54,040
한

1813
00:14:54,040 --> 00:14:54,220
clock

1814
00:14:54,220 --> 00:14:54,580
cycle

1815
00:14:54,580 --> 00:14:54,860
내에

1816
00:14:54,860 --> 00:14:55,180
두

1817
00:14:55,180 --> 00:14:55,440
번째

1818
00:14:55,440 --> 00:14:55,640
half

1819
00:14:55,640 --> 00:14:55,920
clock

1820
00:14:55,920 --> 00:14:56,380
cycle에

1821
00:14:56,540 --> 00:14:56,900
일어나는

1822
00:14:56,900 --> 00:14:57,260
놈이라고

1823
00:14:57,260 --> 00:14:57,360
했습니다.

1824
00:14:58,360 --> 00:14:58,500
그렇기

1825
00:14:58,500 --> 00:14:58,780
때문에

1826
00:14:58,780 --> 00:14:59,200
data

1827
00:14:59,220 --> 00:14:59,840
memory가

1828
00:14:59,840 --> 00:15:00,220
원래

1829
00:15:00,220 --> 00:15:00,860
한

1830
00:15:00,860 --> 00:15:01,060
clock

1831
00:15:01,060 --> 00:15:01,300
cycle

1832
00:15:01,300 --> 00:15:02,120
전체를

1833
00:15:02,120 --> 00:15:02,420
다

1834
00:15:02,420 --> 00:15:02,660
저

1835
00:15:02,660 --> 00:15:02,960
map

1836
00:15:03,080 --> 00:15:03,480
stage를

1837
00:15:03,480 --> 00:15:03,880
실행하고

1838
00:15:03,880 --> 00:15:04,100
있는

1839
00:15:04,180 --> 00:15:04,600
명령어가

1840
00:15:04,600 --> 00:15:05,040
정류를

1841
00:15:05,040 --> 00:15:05,360
하긴

1842
00:15:05,360 --> 00:15:05,740
하지만

1843
00:15:06,340 --> 00:15:06,600
실제로

1844
00:15:06,600 --> 00:15:07,080
값을

1845
00:15:07,080 --> 00:15:07,520
read만

1846
00:15:07,520 --> 00:15:07,760
하는

1847
00:15:07,760 --> 00:15:08,060
것,

1848
00:15:08,300 --> 00:15:08,400
이

1849
00:15:08,400 --> 00:15:08,820
행위는

1850
00:15:08,820 --> 00:15:09,020
두

1851
00:15:09,020 --> 00:15:09,180
번째

1852
00:15:09,180 --> 00:15:09,400
half

1853
00:15:09,440 --> 00:15:09,580
clock

1854
00:15:09,660 --> 00:15:09,860
cycle

1855
00:15:09,860 --> 00:15:10,080
내에

1856
00:15:10,080 --> 00:15:10,580
일어난다.

1857
00:15:11,100 --> 00:15:11,280
라고

1858
00:15:11,280 --> 00:15:11,660
생각을

1859
00:15:11,660 --> 00:15:12,100
하시면

1860
00:15:12,100 --> 00:15:12,750
되겠습니다.

1861
00:15:14,020 --> 00:15:14,120
자

1862
00:15:14,120 --> 00:15:14,480
그러면

1863
00:15:14,480 --> 00:15:14,800
이제

1864
00:15:14,800 --> 00:15:15,180
마지막

1865
00:15:15,180 --> 00:15:15,520
right

1866
00:15:15,520 --> 00:15:16,160
backstage로

1867
00:15:16,160 --> 00:15:16,440
가게

1868
00:15:16,440 --> 00:15:16,720
되는데

1869
00:15:16,720 --> 00:15:17,780
다섯

1870
00:15:17,780 --> 00:15:17,960
번째

1871
00:15:17,960 --> 00:15:18,220
clock

1872
00:15:18,220 --> 00:15:18,620
cycle.

1873
00:15:19,140 --> 00:15:19,240
자

1874
00:15:19,240 --> 00:15:19,400
이제

1875
00:15:19,400 --> 00:15:19,740
right

1876
00:15:19,740 --> 00:15:20,500
backstage는

1877
00:15:20,500 --> 00:15:20,760
우리가

1878
00:15:20,760 --> 00:15:21,200
register

1879
00:15:21,200 --> 00:15:21,760
file에다가

1880
00:15:21,760 --> 00:15:21,960
어떤

1881
00:15:21,960 --> 00:15:22,280
값을

1882
00:15:22,500 --> 00:15:22,640
쓰는

1883
00:15:22,640 --> 00:15:23,000
거예요.

1884
00:15:23,700 --> 00:15:23,840
그럼

1885
00:15:23,840 --> 00:15:24,120
이거는

1886
00:15:24,120 --> 00:15:24,640
write를

1887
00:15:24,640 --> 00:15:24,780
하는

1888
00:15:24,780 --> 00:15:24,880
행위입니다.

1889
00:15:25,740 --> 00:15:26,160
write를

1890
00:15:26,160 --> 00:15:26,380
하는

1891
00:15:26,440 --> 00:15:26,960
행위는

1892
00:15:27,020 --> 00:15:27,160
한

1893
00:15:27,160 --> 00:15:27,360
clock

1894
00:15:27,460 --> 00:15:27,680
cycle

1895
00:15:27,900 --> 00:15:28,000
내에서

1896
00:15:28,000 --> 00:15:28,640
초반고에

1897
00:15:28,640 --> 00:15:29,120
일어난다고

1898
00:15:29,120 --> 00:15:29,360
했습니다.

1899
00:15:30,300 --> 00:15:30,480
그렇기

1900
00:15:30,480 --> 00:15:30,820
때문에

1901
00:15:30,820 --> 00:15:31,600
right

1902
00:15:31,600 --> 00:15:32,460
backstage에서

1903
00:15:32,460 --> 00:15:33,060
register

1904
00:15:33,060 --> 00:15:34,040
file의

1905
00:15:34,260 --> 00:15:34,400
첫

1906
00:15:34,400 --> 00:15:34,660
half

1907
00:15:34,800 --> 00:15:34,940
clock

1908
00:15:34,940 --> 00:15:35,280
cycle

1909
00:15:35,280 --> 00:15:35,820
내에서

1910
00:15:35,820 --> 00:15:36,460
이

1911
00:15:36,460 --> 00:15:36,900
id

1912
00:15:36,900 --> 00:15:37,720
register에다가

1913
00:15:37,720 --> 00:15:38,180
값을

1914
00:15:38,180 --> 00:15:38,640
쓰게

1915
00:15:38,960 --> 00:15:39,180
되기

1916
00:15:39,180 --> 00:15:39,600
때문에

1917
00:15:39,600 --> 00:15:40,260
저

1918
00:15:40,260 --> 00:15:40,900
right

1919
00:15:40,900 --> 00:15:42,020
backstage에서는

1920
00:15:42,020 --> 00:15:42,580
register

1921
00:15:42,580 --> 00:15:43,360
file의

1922
00:15:43,620 --> 00:15:44,480
초반부만

1923
00:15:44,680 --> 00:15:45,020
첫

1924
00:15:45,020 --> 00:15:45,820
half

1925
00:15:45,900 --> 00:15:46,020
clock

1926
00:15:46,260 --> 00:15:46,360
cycle

1927
00:15:46,360 --> 00:15:47,040
동안만

1928
00:15:47,040 --> 00:15:47,180
저

1929
00:15:47,180 --> 00:15:47,540
register

1930
00:15:47,720 --> 00:15:47,900
file이

1931
00:15:47,900 --> 00:15:48,440
활용이

1932
00:15:48,680 --> 00:15:49,200
된다고

1933
00:15:49,480 --> 00:15:49,880
생각하시면

1934
00:15:49,880 --> 00:15:50,120
됩니다.

1935
00:15:51,260 --> 00:15:51,360
자

1936
00:15:51,360 --> 00:15:52,320
이래되면

1937
00:15:52,680 --> 00:15:52,840
이제

1938
00:15:52,840 --> 00:15:53,480
instruction

1939
00:15:53,480 --> 00:15:54,020
decode

1940
00:15:54,020 --> 00:15:54,660
stage랑

1941
00:15:54,660 --> 00:15:55,000
right

1942
00:15:55,000 --> 00:15:55,240
backstage,

1943
00:15:55,800 --> 00:15:56,060
여러분들

1944
00:15:56,200 --> 00:15:56,340
딱

1945
00:15:56,340 --> 00:15:56,620
보세요.

1946
00:15:57,260 --> 00:15:57,400
그러면

1947
00:15:57,400 --> 00:15:57,920
instruction

1948
00:15:57,920 --> 00:15:58,440
decode

1949
00:15:58,440 --> 00:15:58,940
stage는

1950
00:15:58,940 --> 00:15:59,800
후반부에

1951
00:16:00,300 --> 00:16:00,420
값을

1952
00:16:00,420 --> 00:16:00,820
읽고

1953
00:16:02,260 --> 00:16:02,440
right

1954
00:16:02,440 --> 00:16:03,060
backstage는

1955
00:16:03,060 --> 00:16:04,220
초반부에

1956
00:16:04,220 --> 00:16:04,680
값을

1957
00:16:04,680 --> 00:16:05,100
씁니다.

1958
00:16:05,660 --> 00:16:05,800
그러면

1959
00:16:05,800 --> 00:16:06,220
밑에

1960
00:16:06,220 --> 00:16:06,660
만약에

1961
00:16:06,660 --> 00:16:06,840
네

1962
00:16:06,840 --> 00:16:07,120
번째

1963
00:16:07,120 --> 00:16:07,460
road

1964
00:16:07,460 --> 00:16:07,800
word가

1965
00:16:07,800 --> 00:16:08,300
있었다.

1966
00:16:08,720 --> 00:16:08,920
그러면

1967
00:16:08,920 --> 00:16:09,220
이

1968
00:16:09,220 --> 00:16:09,420
네

1969
00:16:09,420 --> 00:16:09,620
번째

1970
00:16:09,620 --> 00:16:09,900
road

1971
00:16:09,900 --> 00:16:10,220
word에

1972
00:16:10,220 --> 00:16:10,600
instruction

1973
00:16:10,600 --> 00:16:11,180
decode가

1974
00:16:11,340 --> 00:16:11,440
이때

1975
00:16:11,440 --> 00:16:12,060
일어나고

1976
00:16:12,420 --> 00:16:12,520
이때

1977
00:16:12,520 --> 00:16:13,000
접근하는

1978
00:16:13,000 --> 00:16:13,100
게

1979
00:16:13,100 --> 00:16:13,500
register

1980
00:16:13,580 --> 00:16:14,220
file일텐데

1981
00:16:14,220 --> 00:16:14,900
얘는

1982
00:16:14,900 --> 00:16:15,860
후반부

1983
00:16:16,160 --> 00:16:16,620
절반에

1984
00:16:16,840 --> 00:16:17,200
활용이

1985
00:16:17,200 --> 00:16:17,360
되겠죠.

1986
00:16:18,340 --> 00:16:18,560
그러면

1987
00:16:18,560 --> 00:16:19,600
전반부에는

1988
00:16:19,600 --> 00:16:20,040
얘가

1989
00:16:20,040 --> 00:16:20,420
썼고

1990
00:16:20,420 --> 00:16:21,220
후반부에는

1991
00:16:21,220 --> 00:16:21,660
얘가

1992
00:16:21,660 --> 00:16:22,120
쓰니까

1993
00:16:22,120 --> 00:16:22,920
동시에

1994
00:16:22,920 --> 00:16:23,180
한

1995
00:16:23,180 --> 00:16:23,720
순간에

1996
00:16:23,720 --> 00:16:24,140
register

1997
00:16:24,160 --> 00:16:24,700
file을

1998
00:16:24,700 --> 00:16:25,320
동시에

1999
00:16:25,320 --> 00:16:25,700
읽고

2000
00:16:25,700 --> 00:16:25,860
쓰는

2001
00:16:25,860 --> 00:16:26,280
행위는

2002
00:16:26,340 --> 00:16:26,700
일어나지

2003
00:16:26,700 --> 00:16:27,100
않습니다.

2004
00:16:27,340 --> 00:16:27,480
딱

2005
00:16:27,480 --> 00:16:27,700
한

2006
00:16:27,700 --> 00:16:28,020
순간에.

2007
00:16:28,780 --> 00:16:28,920
한

2008
00:16:28,920 --> 00:16:29,180
clock

2009
00:16:29,180 --> 00:16:29,600
cycle

2010
00:16:29,600 --> 00:16:30,100
내에

2011
00:16:30,100 --> 00:16:30,740
right

2012
00:16:30,800 --> 00:16:31,040
backstage이

2013
00:16:31,040 --> 00:16:31,300
먼저

2014
00:16:31,520 --> 00:16:31,680
쓰고

2015
00:16:31,680 --> 00:16:32,380
그런

2016
00:16:32,380 --> 00:16:32,700
다음에

2017
00:16:32,700 --> 00:16:33,040
이후

2018
00:16:33,040 --> 00:16:33,660
명령의

2019
00:16:33,660 --> 00:16:34,160
instruction

2020
00:16:34,160 --> 00:16:34,620
decode

2021
00:16:34,620 --> 00:16:35,360
stage가

2022
00:16:35,640 --> 00:16:35,760
그

2023
00:16:35,760 --> 00:16:36,020
쓴

2024
00:16:36,020 --> 00:16:36,400
값을

2025
00:16:36,400 --> 00:16:37,400
고려하여

2026
00:16:37,400 --> 00:16:38,200
rs랑

2027
00:16:38,200 --> 00:16:38,840
rt값을

2028
00:16:38,840 --> 00:16:39,160
읽어온다.

2029
00:16:39,700 --> 00:16:39,900
이런

2030
00:16:39,900 --> 00:16:40,700
방식이다

2031
00:16:40,700 --> 00:16:41,080
라고

2032
00:16:41,080 --> 00:16:41,400
생각을

2033
00:16:41,400 --> 00:16:41,860
하면

2034
00:16:41,860 --> 00:16:41,960
됩니다.

2035
00:16:43,480 --> 00:16:44,000
그래서 그럼

2036
00:16:44,720 --> 00:16:44,980
명령

2037
00:16:44,980 --> 00:16:45,440
하나는

2038
00:16:45,440 --> 00:16:45,700
이렇게

2039
00:16:45,700 --> 00:16:46,000
다섯

2040
00:16:46,000 --> 00:16:46,340
stage

2041
00:16:46,340 --> 00:16:47,180
cycle에

2042
00:16:47,180 --> 00:16:47,540
걸쳐서

2043
00:16:47,700 --> 00:16:47,940
실행이

2044
00:16:47,940 --> 00:16:48,100
될

2045
00:16:48,160 --> 00:16:48,400
거고

2046
00:16:48,400 --> 00:16:48,640
두

2047
00:16:48,640 --> 00:16:49,080
번째는

2048
00:16:49,080 --> 00:16:49,620
ifid,

2049
00:16:50,360 --> 00:16:50,800
x,

2050
00:16:51,120 --> 00:16:51,520
mem,

2051
00:16:52,100 --> 00:16:52,300
right

2052
00:16:52,300 --> 00:16:52,500
back

2053
00:16:52,500 --> 00:16:52,880
이렇게

2054
00:16:53,080 --> 00:16:53,180
가게

2055
00:16:53,180 --> 00:16:53,340
될

2056
00:16:53,340 --> 00:16:53,440
거고

2057
00:16:54,100 --> 00:16:54,200
세

2058
00:16:54,200 --> 00:16:54,680
번째도

2059
00:16:54,680 --> 00:16:55,440
ifid,

2060
00:16:56,380 --> 00:16:57,040
x,

2061
00:16:57,700 --> 00:16:57,900
mem,

2062
00:16:58,800 --> 00:16:58,940
right

2063
00:16:58,940 --> 00:16:59,180
back

2064
00:16:59,180 --> 00:16:59,540
이렇게

2065
00:16:59,880 --> 00:16:59,980
실행이

2066
00:16:59,980 --> 00:17:00,120
되는

2067
00:17:00,120 --> 00:17:00,380
걸

2068
00:17:00,380 --> 00:17:00,700
알

2069
00:17:00,700 --> 00:17:00,900
수가

2070
00:17:00,900 --> 00:17:01,020
있죠.

2071
00:17:02,240 --> 00:17:02,340
자

2072
00:17:02,340 --> 00:17:02,600
그러면

2073
00:17:02,600 --> 00:17:02,880
여기

2074
00:17:02,880 --> 00:17:03,200
보다

2075
00:17:03,200 --> 00:17:03,420
보면

2076
00:17:03,420 --> 00:17:03,740
이렇게

2077
00:17:03,740 --> 00:17:03,940
또

2078
00:17:03,940 --> 00:17:04,560
삐져나온

2079
00:17:04,560 --> 00:17:04,700
이

2080
00:17:04,700 --> 00:17:05,000
선은

2081
00:17:05,000 --> 00:17:05,380
뭐냐

2082
00:17:05,380 --> 00:17:05,860
라고

2083
00:17:05,860 --> 00:17:06,300
여러분들이

2084
00:17:06,620 --> 00:17:06,720
궁금해

2085
00:17:06,720 --> 00:17:06,960
하실

2086
00:17:06,960 --> 00:17:07,100
수

2087
00:17:07,100 --> 00:17:07,360
있는데

2088
00:17:08,160 --> 00:17:08,260
저

2089
00:17:08,260 --> 00:17:08,880
삐져나온

2090
00:17:08,880 --> 00:17:09,620
선은

2091
00:17:09,680 --> 00:17:11,680
target

2092
00:17:11,680 --> 00:17:12,220
memory

2093
00:17:12,220 --> 00:17:13,480
주소입니다.

2094
00:17:14,480 --> 00:17:14,680
target

2095
00:17:14,680 --> 00:17:15,020
memory

2096
00:17:15,020 --> 00:17:15,580
주소는

2097
00:17:15,580 --> 00:17:15,840
우리가

2098
00:17:15,840 --> 00:17:16,320
로드워드

2099
00:17:16,320 --> 00:17:16,660
명령

2100
00:17:16,660 --> 00:17:16,900
같은

2101
00:17:16,900 --> 00:17:17,400
경우에

2102
00:17:17,400 --> 00:17:17,720
base

2103
00:17:17,720 --> 00:17:18,120
register

2104
00:17:18,200 --> 00:17:18,780
값에다가

2105
00:17:18,780 --> 00:17:19,420
offset을

2106
00:17:19,420 --> 00:17:19,900
더해서

2107
00:17:19,900 --> 00:17:20,300
target

2108
00:17:20,300 --> 00:17:20,600
memory

2109
00:17:20,600 --> 00:17:21,040
주소를

2110
00:17:21,040 --> 00:17:21,460
계산을

2111
00:17:21,460 --> 00:17:22,120
해내잖아요.

2112
00:17:22,780 --> 00:17:22,960
그러면

2113
00:17:22,960 --> 00:17:23,420
이제

2114
00:17:23,540 --> 00:17:23,640
이

2115
00:17:23,640 --> 00:17:24,120
alu가

2116
00:17:24,120 --> 00:17:24,660
만들어낸

2117
00:17:24,660 --> 00:17:24,980
target

2118
00:17:24,980 --> 00:17:26,130
address랑,

2119
00:17:27,780 --> 00:17:27,940
아

2120
00:17:27,940 --> 00:17:28,440
죄송해요.

2121
00:17:28,660 --> 00:17:28,860
target

2122
00:17:28,860 --> 00:17:29,480
address는

2123
00:17:29,560 --> 00:17:29,660
이

2124
00:17:29,660 --> 00:17:29,920
data

2125
00:17:29,920 --> 00:17:30,480
memory로

2126
00:17:30,480 --> 00:17:31,240
들어가고

2127
00:17:31,500 --> 00:17:31,680
그러면

2128
00:17:31,680 --> 00:17:31,940
내가

2129
00:17:31,940 --> 00:17:32,480
destination

2130
00:17:32,480 --> 00:17:33,140
register가

2131
00:17:33,140 --> 00:17:33,640
어디냐

2132
00:17:34,020 --> 00:17:34,180
라는

2133
00:17:34,180 --> 00:17:34,340
게

2134
00:17:34,340 --> 00:17:34,820
들어가게

2135
00:17:34,820 --> 00:17:35,000
되는데

2136
00:17:35,200 --> 00:17:35,320
이

2137
00:17:35,620 --> 00:17:35,880
destination

2138
00:17:35,880 --> 00:17:36,280
register

2139
00:17:36,280 --> 00:17:36,980
정보가

2140
00:17:37,340 --> 00:17:37,440
이렇게

2141
00:17:37,440 --> 00:17:37,840
register

2142
00:17:37,900 --> 00:17:38,280
file한테

2143
00:17:38,280 --> 00:17:38,860
넘어간다.

2144
00:17:39,120 --> 00:17:39,600
저회로

2145
00:17:39,760 --> 00:17:39,880
라고

2146
00:17:39,880 --> 00:17:40,480
생각하시면

2147
00:17:40,480 --> 00:17:40,800
됩니다.

2148
00:17:41,440 --> 00:17:41,600
그럼

2149
00:17:41,600 --> 00:17:41,840
right

2150
00:17:41,840 --> 00:17:42,120
backstage

2151
00:17:42,120 --> 00:17:42,940
단계에서는

2152
00:17:42,940 --> 00:17:43,800
destination

2153
00:17:43,800 --> 00:17:44,320
register

2154
00:17:44,320 --> 00:17:45,020
rtindex를

2155
00:17:45,020 --> 00:17:45,580
받았고

2156
00:17:45,580 --> 00:17:46,140
그리고

2157
00:17:46,400 --> 00:17:46,500
data

2158
00:17:46,500 --> 00:17:47,100
memory에서

2159
00:17:47,100 --> 00:17:47,580
올라온

2160
00:17:47,580 --> 00:17:48,000
samite

2161
00:17:48,000 --> 00:17:48,420
data가

2162
00:17:48,420 --> 00:17:48,780
있으니까

2163
00:17:48,800 --> 00:17:49,180
그

2164
00:17:49,180 --> 00:17:49,420
두

2165
00:17:49,420 --> 00:17:49,560
개

2166
00:17:49,560 --> 00:17:50,020
가지고

2167
00:17:50,660 --> 00:17:50,840
첫

2168
00:17:50,840 --> 00:17:51,520
절반

2169
00:17:51,520 --> 00:17:51,840
clock

2170
00:17:51,840 --> 00:17:52,240
cycle

2171
00:17:52,320 --> 00:17:53,080
내에

2172
00:17:53,160 --> 00:17:53,520
그

2173
00:17:53,600 --> 00:17:53,960
1번

2174
00:17:53,960 --> 00:17:55,220
register에다가

2175
00:17:55,220 --> 00:17:56,040
그

2176
00:17:56,560 --> 00:17:56,880
0번

2177
00:17:56,880 --> 00:17:57,260
register

2178
00:17:57,360 --> 00:17:57,640
plus

2179
00:17:57,640 --> 00:17:58,640
100이라는

2180
00:17:58,640 --> 00:17:59,180
그

2181
00:17:59,180 --> 00:17:59,480
memory

2182
00:17:59,480 --> 00:18:00,080
주소에

2183
00:18:00,080 --> 00:18:00,620
저장된

2184
00:18:00,620 --> 00:18:01,200
samite

2185
00:18:01,200 --> 00:18:01,860
data를

2186
00:18:02,140 --> 00:18:02,940
로드하는

2187
00:18:02,980 --> 00:18:03,980
과정을

2188
00:18:04,140 --> 00:18:04,680
거치게

2189
00:18:04,680 --> 00:18:04,780
됩니다.

2190
00:18:07,460 --> 00:18:07,880
저

2191
00:18:07,880 --> 00:18:08,180
밑에

2192
00:18:08,540 --> 00:18:08,660
명령어가

2193
00:18:08,660 --> 00:18:08,880
하나

2194
00:18:08,880 --> 00:18:09,040
더

2195
00:18:09,040 --> 00:18:10,600
있으면은

2196
00:18:10,600 --> 00:18:10,960
첫

2197
00:18:10,960 --> 00:18:11,200
번째

2198
00:18:11,760 --> 00:18:12,340
명령어의

2199
00:18:12,720 --> 00:18:13,900
writeback이랑

2200
00:18:13,900 --> 00:18:14,300
그

2201
00:18:14,300 --> 00:18:14,400
네

2202
00:18:14,400 --> 00:18:14,560
번째

2203
00:18:14,560 --> 00:18:15,820
명령어의

2204
00:18:15,820 --> 00:18:17,760
instruction

2205
00:18:17,760 --> 00:18:18,520
decode랑

2206
00:18:18,520 --> 00:18:19,120
겹칠

2207
00:18:19,120 --> 00:18:19,260
수

2208
00:18:19,260 --> 00:18:19,780
있나요?

2209
00:18:21,160 --> 00:18:21,260
네

2210
00:18:21,260 --> 00:18:21,480
번째

2211
00:18:21,480 --> 00:18:21,980
명령어가

2212
00:18:21,980 --> 00:18:22,480
있으면

2213
00:18:22,480 --> 00:18:23,560
ifid

2214
00:18:23,560 --> 00:18:24,160
exmap

2215
00:18:24,160 --> 00:18:25,000
writeback이니까

2216
00:18:25,000 --> 00:18:25,660
요

2217
00:18:25,660 --> 00:18:26,180
순간에

2218
00:18:26,180 --> 00:18:26,580
보면

2219
00:18:26,580 --> 00:18:27,580
arightback이랑

2220
00:18:27,580 --> 00:18:28,400
arid가

2221
00:18:28,400 --> 00:18:29,100
동시에

2222
00:18:29,220 --> 00:18:29,480
시행이

2223
00:18:29,480 --> 00:18:29,700
되죠.

2224
00:18:30,300 --> 00:18:30,400
근데

2225
00:18:30,400 --> 00:18:31,340
register에

2226
00:18:31,340 --> 00:18:31,760
대한

2227
00:18:32,180 --> 00:18:32,620
write을

2228
00:18:32,620 --> 00:18:32,840
얘가

2229
00:18:32,840 --> 00:18:33,080
첫

2230
00:18:33,080 --> 00:18:33,400
절반

2231
00:18:33,400 --> 00:18:33,640
clock

2232
00:18:33,640 --> 00:18:34,040
cycle을

2233
00:18:34,240 --> 00:18:34,700
끝내고

2234
00:18:35,060 --> 00:18:35,180
그리고

2235
00:18:35,180 --> 00:18:35,620
얘는

2236
00:18:35,620 --> 00:18:36,400
뒤에

2237
00:18:36,400 --> 00:18:36,640
두

2238
00:18:36,640 --> 00:18:36,880
번째

2239
00:18:36,880 --> 00:18:37,180
clock

2240
00:18:37,180 --> 00:18:37,500
cycle

2241
00:18:37,500 --> 00:18:37,660
때

2242
00:18:37,900 --> 00:18:38,000
값을

2243
00:18:38,000 --> 00:18:38,280
읽기

2244
00:18:38,280 --> 00:18:38,660
때문에

2245
00:18:39,300 --> 00:18:39,760
만약에

2246
00:18:39,760 --> 00:18:40,300
얘가

2247
00:18:40,680 --> 00:18:40,820
뭐

2248
00:18:40,820 --> 00:18:41,100
예를

2249
00:18:41,100 --> 00:18:41,280
들어서

2250
00:18:41,280 --> 00:18:41,580
1번

2251
00:18:41,580 --> 00:18:41,840
register

2252
00:18:41,880 --> 00:18:42,080
어떤

2253
00:18:42,120 --> 00:18:42,360
값을

2254
00:18:42,360 --> 00:18:42,800
썼어요.

2255
00:18:43,180 --> 00:18:43,320
그러면

2256
00:18:43,320 --> 00:18:43,520
그

2257
00:18:43,520 --> 00:18:43,920
최신

2258
00:18:43,920 --> 00:18:44,460
값은

2259
00:18:44,660 --> 00:18:44,840
얘는

2260
00:18:44,840 --> 00:18:45,300
읽을

2261
00:18:45,300 --> 00:18:45,420
수가

2262
00:18:45,420 --> 00:18:45,760
있어요.

2263
00:18:46,560 --> 00:18:46,680
근데

2264
00:18:46,680 --> 00:18:46,960
여기서

2265
00:18:46,960 --> 00:18:47,180
그럼

2266
00:18:47,180 --> 00:18:47,440
문제가

2267
00:18:47,440 --> 00:18:47,840
보이죠?

2268
00:18:48,380 --> 00:18:48,640
얘는

2269
00:18:48,640 --> 00:18:49,800
1번에다가

2270
00:18:49,800 --> 00:18:50,080
최신

2271
00:18:50,080 --> 00:18:50,340
값을

2272
00:18:50,500 --> 00:18:50,640
썼다고

2273
00:18:50,640 --> 00:18:50,960
칩시다.

2274
00:18:51,840 --> 00:18:52,120
그럼

2275
00:18:52,640 --> 00:18:53,100
1번이랑

2276
00:18:53,100 --> 00:18:53,420
최신

2277
00:18:53,420 --> 00:18:53,720
값을

2278
00:18:53,720 --> 00:18:54,020
쓰기

2279
00:18:54,020 --> 00:18:54,340
전에

2280
00:18:54,340 --> 00:18:55,060
얘랑

2281
00:18:55,060 --> 00:18:55,240
얘

2282
00:18:55,240 --> 00:18:55,600
이

2283
00:18:56,040 --> 00:18:56,200
직후

2284
00:18:56,200 --> 00:18:56,440
두

2285
00:18:56,440 --> 00:18:56,580
개

2286
00:18:56,580 --> 00:18:57,140
명령어가

2287
00:18:57,140 --> 00:18:57,480
그

2288
00:18:57,480 --> 00:18:57,800
1번

2289
00:18:57,800 --> 00:18:58,100
register

2290
00:18:58,140 --> 00:18:58,460
값을

2291
00:18:58,460 --> 00:18:58,920
읽으려고

2292
00:18:58,920 --> 00:18:59,120
할

2293
00:18:59,120 --> 00:18:59,340
때는

2294
00:18:59,340 --> 00:18:59,640
아직

2295
00:18:59,800 --> 00:18:59,900
값이

2296
00:18:59,900 --> 00:19:00,080
안

2297
00:19:00,080 --> 00:19:00,480
쓰였기

2298
00:19:00,480 --> 00:19:00,860
때문에

2299
00:19:01,720 --> 00:19:01,820
correct한

2300
00:19:01,820 --> 00:19:02,060
값이

2301
00:19:02,120 --> 00:19:02,220
안

2302
00:19:02,220 --> 00:19:02,620
들어가요.

2303
00:19:03,640 --> 00:19:03,860
그거에

2304
00:19:03,860 --> 00:19:04,000
대한

2305
00:19:04,000 --> 00:19:04,380
이슈

2306
00:19:04,380 --> 00:19:04,880
뒤에

2307
00:19:04,880 --> 00:19:05,200
슬라이드

2308
00:19:05,200 --> 00:19:05,640
나옵니다.

2309
00:19:07,220 --> 00:19:07,420
그래서

2310
00:19:07,420 --> 00:19:08,260
만약에

2311
00:19:08,260 --> 00:19:08,800
그런

2312
00:19:08,800 --> 00:19:09,300
지금

2313
00:19:09,300 --> 00:19:09,780
이런

2314
00:19:09,780 --> 00:19:10,140
되게

2315
00:19:10,140 --> 00:19:10,760
기본적인

2316
00:19:10,760 --> 00:19:11,560
파이플라이닝을

2317
00:19:11,560 --> 00:19:11,920
구현을

2318
00:19:12,480 --> 00:19:12,580
한다고

2319
00:19:12,580 --> 00:19:13,040
했을

2320
00:19:13,040 --> 00:19:13,260
때는

2321
00:19:13,260 --> 00:19:14,560
방금

2322
00:19:14,560 --> 00:19:14,780
이

2323
00:19:14,780 --> 00:19:15,120
이슈를

2324
00:19:15,120 --> 00:19:15,440
뭐라

2325
00:19:15,440 --> 00:19:15,820
부르냐면

2326
00:19:15,820 --> 00:19:16,160
data

2327
00:19:16,160 --> 00:19:16,520
hazard

2328
00:19:16,520 --> 00:19:16,820
또는

2329
00:19:16,820 --> 00:19:17,060
read

2330
00:19:17,220 --> 00:19:17,320
after

2331
00:19:17,320 --> 00:19:17,580
write

2332
00:19:18,040 --> 00:19:18,200
data

2333
00:19:18,200 --> 00:19:18,920
dependency라고

2334
00:19:18,920 --> 00:19:19,280
부르거든요.

2335
00:19:20,820 --> 00:19:21,060
write

2336
00:19:21,160 --> 00:19:21,300
than

2337
00:19:21,420 --> 00:19:21,780
후에

2338
00:19:21,780 --> 00:19:22,340
우리가

2339
00:19:22,340 --> 00:19:22,780
값을

2340
00:19:22,820 --> 00:19:23,220
읽으려고

2341
00:19:23,220 --> 00:19:23,420
할

2342
00:19:23,480 --> 00:19:23,600
때

2343
00:19:23,600 --> 00:19:24,440
여러분들은

2344
00:19:24,440 --> 00:19:25,060
프로그래머의

2345
00:19:25,060 --> 00:19:25,420
입장이니까

2346
00:19:26,420 --> 00:19:26,540
우리

2347
00:19:26,540 --> 00:19:27,120
CPU가

2348
00:19:27,120 --> 00:19:27,420
명령

2349
00:19:27,420 --> 00:19:27,680
하나

2350
00:19:27,680 --> 00:19:28,100
실행을

2351
00:19:28,100 --> 00:19:28,880
완전히

2352
00:19:28,880 --> 00:19:29,520
끝내고

2353
00:19:29,520 --> 00:19:29,720
그

2354
00:19:29,720 --> 00:19:29,880
다음

2355
00:19:29,880 --> 00:19:30,360
명령으로

2356
00:19:30,360 --> 00:19:30,880
갔다라고

2357
00:19:30,880 --> 00:19:31,180
생각을

2358
00:19:31,180 --> 00:19:31,380
하잖아요.

2359
00:19:32,560 --> 00:19:32,660
근데

2360
00:19:32,660 --> 00:19:32,980
이렇게

2361
00:19:32,980 --> 00:19:33,380
해버리면

2362
00:19:33,380 --> 00:19:33,600
그게

2363
00:19:33,600 --> 00:19:34,040
안됩니다.

2364
00:19:34,600 --> 00:19:34,800
왜냐?

2365
00:19:34,900 --> 00:19:35,040
첫

2366
00:19:35,040 --> 00:19:35,240
번째

2367
00:19:35,240 --> 00:19:35,820
명령어가

2368
00:19:35,820 --> 00:19:36,180
아직

2369
00:19:36,180 --> 00:19:36,520
1번

2370
00:19:36,520 --> 00:19:36,940
register에

2371
00:19:36,940 --> 00:19:37,240
값을

2372
00:19:37,360 --> 00:19:37,920
쓰기도

2373
00:19:38,000 --> 00:19:38,600
전에

2374
00:19:38,600 --> 00:19:39,040
뒤에

2375
00:19:39,040 --> 00:19:39,560
명령어

2376
00:19:39,560 --> 00:19:39,900
직후

2377
00:19:39,900 --> 00:19:40,580
명령어들에

2378
00:19:40,580 --> 00:19:40,760
대한

2379
00:19:40,760 --> 00:19:41,180
실행을

2380
00:19:41,180 --> 00:19:41,580
시작을

2381
00:19:41,580 --> 00:19:41,940
했고

2382
00:19:42,580 --> 00:19:42,740
그리고

2383
00:19:42,740 --> 00:19:43,100
직후

2384
00:19:43,100 --> 00:19:43,620
명령어들이

2385
00:19:43,620 --> 00:19:44,000
값을

2386
00:19:44,000 --> 00:19:44,700
읽으려면

2387
00:19:45,160 --> 00:19:45,400
register

2388
00:19:45,400 --> 00:19:45,700
file

2389
00:19:45,700 --> 00:19:46,000
쓰기

2390
00:19:46,000 --> 00:19:46,260
전까지

2391
00:19:46,260 --> 00:19:46,740
기다려야

2392
00:19:46,740 --> 00:19:47,580
돼요.

2393
00:19:47,820 --> 00:19:47,920
그러면

2394
00:19:47,920 --> 00:19:48,460
이것은

2395
00:19:48,460 --> 00:19:48,840
방법이

2396
00:19:48,840 --> 00:19:49,000
두

2397
00:19:49,000 --> 00:19:49,280
가지가

2398
00:19:49,280 --> 00:19:49,620
있는데

2399
00:19:49,620 --> 00:19:50,340
여러분

2400
00:19:50,340 --> 00:19:51,000
프로그래머

2401
00:19:51,000 --> 00:19:51,780
입장에서

2402
00:19:52,260 --> 00:19:52,360
이런

2403
00:19:52,360 --> 00:19:52,680
식으로

2404
00:19:52,680 --> 00:19:52,960
data

2405
00:19:52,960 --> 00:19:53,660
dependent한

2406
00:19:53,860 --> 00:19:54,180
명령어들이

2407
00:19:54,180 --> 00:19:54,460
있다.

2408
00:19:54,940 --> 00:19:55,060
그러면

2409
00:19:55,060 --> 00:19:55,700
일종의

2410
00:19:55,700 --> 00:19:56,340
nop를

2411
00:19:56,340 --> 00:19:57,000
중간중간에

2412
00:19:57,040 --> 00:19:57,140
여러

2413
00:19:57,140 --> 00:19:57,240
개

2414
00:19:57,240 --> 00:19:57,520
넣는

2415
00:19:57,520 --> 00:19:57,820
겁니다.

2416
00:19:58,260 --> 00:19:58,580
일부러

2417
00:19:58,580 --> 00:19:59,140
timeline이

2418
00:19:59,140 --> 00:19:59,480
맞도록.

2419
00:19:59,960 --> 00:20:00,100
그렇게

2420
00:20:00,100 --> 00:20:00,300
하는

2421
00:20:00,300 --> 00:20:00,660
방법도

2422
00:20:00,660 --> 00:20:00,960
있는데

2423
00:20:00,960 --> 00:20:01,680
그러면

2424
00:20:01,680 --> 00:20:01,940
누가

2425
00:20:01,940 --> 00:20:02,240
esp

2426
00:20:02,240 --> 00:20:02,440
use겠어요.

2427
00:20:03,460 --> 00:20:03,760
그래서

2428
00:20:03,760 --> 00:20:05,080
하드웨어적으로

2429
00:20:05,080 --> 00:20:06,260
데이터를

2430
00:20:06,360 --> 00:20:06,680
좀

2431
00:20:06,680 --> 00:20:07,460
중간에

2432
00:20:07,660 --> 00:20:07,960
register

2433
00:20:07,960 --> 00:20:08,220
file

2434
00:20:08,220 --> 00:20:08,600
쓰기

2435
00:20:08,600 --> 00:20:08,860
전에

2436
00:20:08,860 --> 00:20:09,200
조금

2437
00:20:09,200 --> 00:20:09,580
미리

2438
00:20:09,580 --> 00:20:09,960
앞으로

2439
00:20:09,960 --> 00:20:10,520
당겨주는

2440
00:20:10,520 --> 00:20:10,880
데이터

2441
00:20:10,880 --> 00:20:11,640
보원이라는

2442
00:20:11,640 --> 00:20:12,140
기술도

2443
00:20:12,140 --> 00:20:12,480
있고

2444
00:20:12,480 --> 00:20:13,220
근데

2445
00:20:13,220 --> 00:20:13,740
그것을

2446
00:20:13,740 --> 00:20:14,040
해도

2447
00:20:14,040 --> 00:20:14,560
적어도

2448
00:20:14,560 --> 00:20:14,980
하나의

2449
00:20:14,980 --> 00:20:15,300
nop

2450
00:20:15,300 --> 00:20:15,740
명령어를

2451
00:20:15,740 --> 00:20:15,940
넣을

2452
00:20:15,940 --> 00:20:16,300
필요가

2453
00:20:16,300 --> 00:20:16,640
있습니다.

2454
00:20:17,180 --> 00:20:17,300
그럼

2455
00:20:17,300 --> 00:20:17,500
그

2456
00:20:17,500 --> 00:20:17,880
nop

2457
00:20:17,880 --> 00:20:18,400
명령어는

2458
00:20:18,400 --> 00:20:19,180
하드웨어가

2459
00:20:19,180 --> 00:20:20,320
detect해서

2460
00:20:20,320 --> 00:20:20,900
알아서

2461
00:20:20,900 --> 00:20:21,420
중간에

2462
00:20:21,420 --> 00:20:21,940
넣어주는

2463
00:20:22,320 --> 00:20:22,760
메커니즘이

2464
00:20:22,760 --> 00:20:23,000
있어요.

2465
00:20:23,460 --> 00:20:23,560
그게

2466
00:20:23,560 --> 00:20:23,720
이제

2467
00:20:23,720 --> 00:20:23,900
뒤에

2468
00:20:23,900 --> 00:20:24,100
나옵니다.

2469
00:20:24,760 --> 00:20:24,880
그래서

2470
00:20:24,880 --> 00:20:25,100
뒤에

2471
00:20:25,220 --> 00:20:25,420
보다

2472
00:20:25,420 --> 00:20:25,680
보면

2473
00:20:25,680 --> 00:20:26,480
대충

2474
00:20:26,500 --> 00:20:26,700
어떤

2475
00:20:26,700 --> 00:20:27,140
얘기인지

2476
00:20:27,140 --> 00:20:27,640
아실

2477
00:20:27,640 --> 00:20:27,820
거예요.

2478
00:20:29,060 --> 00:20:29,160
자

2479
00:20:29,160 --> 00:20:29,420
그래서

2480
00:20:29,420 --> 00:20:30,100
여기까지는

2481
00:20:30,100 --> 00:20:30,480
3개의

2482
00:20:30,480 --> 00:20:30,820
명령어

2483
00:20:31,140 --> 00:20:31,240
예시이기

2484
00:20:31,240 --> 00:20:31,560
때문에

2485
00:20:31,560 --> 00:20:32,060
근데

2486
00:20:32,060 --> 00:20:32,500
실제로

2487
00:20:32,500 --> 00:20:32,860
우리는

2488
00:20:32,860 --> 00:20:33,120
5

2489
00:20:33,120 --> 00:20:33,380
stage

2490
00:20:33,380 --> 00:20:33,820
pipeline

2491
00:20:33,820 --> 00:20:34,460
스피어니까

2492
00:20:34,460 --> 00:20:34,960
명령어

2493
00:20:34,960 --> 00:20:35,820
5개에

2494
00:20:35,840 --> 00:20:36,020
대한

2495
00:20:36,220 --> 00:20:36,460
실행이

2496
00:20:36,720 --> 00:20:36,820
동시에

2497
00:20:36,820 --> 00:20:37,160
일어날

2498
00:20:37,160 --> 00:20:37,300
수

2499
00:20:37,300 --> 00:20:37,760
있다는

2500
00:20:38,100 --> 00:20:38,300
것은

2501
00:20:38,300 --> 00:20:38,820
계속

2502
00:20:38,820 --> 00:20:39,140
잊지

2503
00:20:39,140 --> 00:20:39,320
않을

2504
00:20:39,320 --> 00:20:39,820
시간입니다.

2505
00:20:40,680 --> 00:20:40,780
자

2506
00:20:40,780 --> 00:20:41,100
그러면

2507
00:20:41,100 --> 00:20:41,520
저런

2508
00:20:41,520 --> 00:20:41,880
식으로

2509
00:20:41,880 --> 00:20:42,660
대약적으로

2510
00:20:42,660 --> 00:20:43,820
큼직큼직하게

2511
00:20:43,820 --> 00:20:44,140
우리가

2512
00:20:44,140 --> 00:20:44,860
하드웨어를

2513
00:20:44,860 --> 00:20:45,620
나눠봤어요.

2514
00:20:46,080 --> 00:20:46,220
인서트

2515
00:20:46,220 --> 00:20:46,480
백

2516
00:20:46,480 --> 00:20:46,800
체는

2517
00:20:46,980 --> 00:20:47,080
인서트

2518
00:20:47,080 --> 00:20:47,520
메모리,

2519
00:20:47,960 --> 00:20:48,080
인서트

2520
00:20:48,420 --> 00:20:48,820
디코드에는

2521
00:20:48,820 --> 00:20:49,240
register

2522
00:20:49,460 --> 00:20:49,560
file

2523
00:20:49,560 --> 00:20:49,880
읽기,

2524
00:20:50,660 --> 00:20:50,800
execute

2525
00:20:50,800 --> 00:20:51,460
stage에서는

2526
00:20:51,460 --> 00:20:52,040
nglue,

2527
00:20:52,420 --> 00:20:52,580
memory

2528
00:20:52,580 --> 00:20:52,900
access

2529
00:20:53,200 --> 00:20:53,660
stage에서는

2530
00:20:53,720 --> 00:20:54,040
data

2531
00:20:54,040 --> 00:20:54,440
memory,

2532
00:20:54,980 --> 00:20:55,120
그리고

2533
00:20:55,120 --> 00:20:55,980
writeback에서는

2534
00:20:55,980 --> 00:20:56,500
후반부

2535
00:20:56,500 --> 00:20:56,720
clock

2536
00:20:56,800 --> 00:20:57,060
cycle

2537
00:20:57,140 --> 00:20:57,240
때

2538
00:20:57,240 --> 00:20:57,640
register

2539
00:20:57,640 --> 00:20:58,040
file을,

2540
00:20:58,280 --> 00:20:58,700
아

2541
00:20:59,200 --> 00:20:59,300
첫

2542
00:20:59,300 --> 00:20:59,580
번째

2543
00:20:59,580 --> 00:20:59,940
clock

2544
00:21:00,000 --> 00:21:00,260
cycle

2545
00:21:00,300 --> 00:21:00,420
때

2546
00:21:00,420 --> 00:21:00,760
register

2547
00:21:01,000 --> 00:21:01,340
file에다가

2548
00:21:01,340 --> 00:21:01,760
쓴다.

2549
00:21:02,240 --> 00:21:02,360
이렇게

2550
00:21:02,560 --> 00:21:02,700
크게

2551
00:21:02,700 --> 00:21:03,240
5개의

2552
00:21:03,240 --> 00:21:03,500
구성

2553
00:21:03,540 --> 00:21:03,800
요소를

2554
00:21:03,800 --> 00:21:04,450
만들어봤는데

2555
00:21:05,380 --> 00:21:06,000
그

2556
00:21:07,130 --> 00:21:08,780
명령어

2557
00:21:08,780 --> 00:21:09,100
execute

2558
00:21:09,100 --> 00:21:10,040
stage별로

2559
00:21:10,040 --> 00:21:10,960
대표적인

2560
00:21:11,000 --> 00:21:11,440
하드웨어

2561
00:21:11,440 --> 00:21:12,020
맵핑을

2562
00:21:12,020 --> 00:21:12,680
기반으로

2563
00:21:12,680 --> 00:21:13,120
single

2564
00:21:13,120 --> 00:21:13,580
cycle

2565
00:21:13,580 --> 00:21:14,220
cpu의

2566
00:21:14,220 --> 00:21:14,740
하드웨어

2567
00:21:14,740 --> 00:21:15,220
구조를

2568
00:21:15,220 --> 00:21:15,680
5

2569
00:21:15,680 --> 00:21:15,980
stage

2570
00:21:15,980 --> 00:21:16,740
pipeline으로

2571
00:21:16,740 --> 00:21:17,180
구현을

2572
00:21:17,380 --> 00:21:17,560
하도록

2573
00:21:17,560 --> 00:21:17,900
조금

2574
00:21:18,180 --> 00:21:18,340
바꿔볼

2575
00:21:18,340 --> 00:21:18,440
겁니다.

2576
00:21:19,240 --> 00:21:19,480
그래서

2577
00:21:19,480 --> 00:21:19,740
그

2578
00:21:19,860 --> 00:21:19,960
첫

2579
00:21:19,960 --> 00:21:20,640
단계가

2580
00:21:20,900 --> 00:21:21,000
이제

2581
00:21:21,000 --> 00:21:21,420
뭐냐면

2582
00:21:21,420 --> 00:21:23,120
우리는

2583
00:21:23,120 --> 00:21:23,600
일단

2584
00:21:23,600 --> 00:21:24,240
if,

2585
00:21:24,600 --> 00:21:24,760
id,

2586
00:21:25,400 --> 00:21:25,640
ex,

2587
00:21:26,140 --> 00:21:26,440
map,

2588
00:21:26,840 --> 00:21:27,280
writeback

2589
00:21:27,560 --> 00:21:27,820
이렇게

2590
00:21:28,040 --> 00:21:28,520
5개의

2591
00:21:28,520 --> 00:21:29,200
명령어의

2592
00:21:29,200 --> 00:21:29,460
실행

2593
00:21:29,480 --> 00:21:29,820
단계로

2594
00:21:29,820 --> 00:21:30,340
나눴어요.

2595
00:21:30,860 --> 00:21:30,920
그래서

2596
00:21:30,960 --> 00:21:31,080
저

2597
00:21:31,080 --> 00:21:31,680
5개에

2598
00:21:31,680 --> 00:21:32,360
맞춰서

2599
00:21:32,760 --> 00:21:33,040
5

2600
00:21:33,040 --> 00:21:33,480
stage

2601
00:21:33,480 --> 00:21:34,500
pipelining을

2602
00:21:34,500 --> 00:21:34,700
할

2603
00:21:34,700 --> 00:21:35,000
겁니다.

2604
00:21:35,760 --> 00:21:35,860
자

2605
00:21:35,860 --> 00:21:36,160
그러면

2606
00:21:36,160 --> 00:21:36,360
저

2607
00:21:36,360 --> 00:21:36,680
if

2608
00:21:36,680 --> 00:21:37,380
단계에서

2609
00:21:37,380 --> 00:21:38,040
좀

2610
00:21:38,040 --> 00:21:39,060
중요하다라고

2611
00:21:39,060 --> 00:21:39,360
우리가

2612
00:21:39,360 --> 00:21:39,640
딱

2613
00:21:39,700 --> 00:21:40,240
하나의

2614
00:21:40,340 --> 00:21:40,760
하드웨어로

2615
00:21:40,760 --> 00:21:41,200
맵핑했던

2616
00:21:41,520 --> 00:21:41,620
인서트

2617
00:21:41,620 --> 00:21:42,080
메모리입니다.

2618
00:21:42,840 --> 00:21:43,020
그러면

2619
00:21:43,020 --> 00:21:43,820
if가

2620
00:21:43,820 --> 00:21:44,140
어차피

2621
00:21:44,140 --> 00:21:44,640
명령어

2622
00:21:44,640 --> 00:21:45,060
실행의

2623
00:21:45,060 --> 00:21:45,300
맨

2624
00:21:45,300 --> 00:21:45,480
첫

2625
00:21:45,540 --> 00:21:46,080
단계니까

2626
00:21:46,080 --> 00:21:46,660
저

2627
00:21:46,660 --> 00:21:47,440
if를

2628
00:21:47,700 --> 00:21:47,800
저

2629
00:21:47,800 --> 00:21:48,120
인서트

2630
00:21:48,120 --> 00:21:48,600
메모리를

2631
00:21:48,600 --> 00:21:48,740
저

2632
00:21:48,740 --> 00:21:48,920
앞에

2633
00:21:48,920 --> 00:21:49,120
좀

2634
00:21:49,120 --> 00:21:49,560
땡겨놓고

2635
00:21:49,720 --> 00:21:50,520
이

2636
00:21:50,520 --> 00:21:51,280
구간을

2637
00:21:51,860 --> 00:21:52,080
인서트

2638
00:21:52,080 --> 00:21:52,600
매치

2639
00:21:52,600 --> 00:21:52,940
관련

2640
00:21:52,940 --> 00:21:53,620
하드웨어

2641
00:21:53,620 --> 00:21:54,420
구간이라고

2642
00:21:54,420 --> 00:21:54,840
생각을

2643
00:21:54,840 --> 00:21:54,940
해볼게요.

2644
00:21:56,300 --> 00:21:56,440
지금

2645
00:21:56,440 --> 00:21:56,740
여러분

2646
00:21:56,740 --> 00:21:57,120
보시는

2647
00:21:57,120 --> 00:21:57,280
저

2648
00:21:57,280 --> 00:21:57,860
하드웨어

2649
00:21:57,860 --> 00:21:58,180
single

2650
00:21:58,180 --> 00:21:58,540
cycle

2651
00:21:58,540 --> 00:21:58,920
cpu

2652
00:21:58,920 --> 00:21:59,520
그대로입니다.

2653
00:22:00,000 --> 00:22:00,100
single

2654
00:22:00,100 --> 00:22:00,420
cycle

2655
00:22:00,420 --> 00:22:00,780
cpu

2656
00:22:00,780 --> 00:22:01,620
그대로인데

2657
00:22:02,180 --> 00:22:02,320
single

2658
00:22:02,320 --> 00:22:02,640
cycle

2659
00:22:02,640 --> 00:22:03,260
cpu를

2660
00:22:03,260 --> 00:22:03,620
구성을

2661
00:22:03,620 --> 00:22:03,900
하는

2662
00:22:03,900 --> 00:22:04,580
하드웨어들

2663
00:22:04,580 --> 00:22:05,000
위치를

2664
00:22:05,000 --> 00:22:05,300
조금

2665
00:22:05,300 --> 00:22:05,720
조금씩

2666
00:22:05,720 --> 00:22:06,060
옮기는

2667
00:22:06,060 --> 00:22:06,800
거예요.

2668
00:22:07,180 --> 00:22:07,280
자

2669
00:22:07,280 --> 00:22:07,520
그럼

2670
00:22:07,520 --> 00:22:07,720
두

2671
00:22:07,720 --> 00:22:08,200
번째는

2672
00:22:08,200 --> 00:22:08,520
instruction

2673
00:22:08,520 --> 00:22:09,240
decode에요.

2674
00:22:09,600 --> 00:22:09,720
얘는

2675
00:22:09,720 --> 00:22:10,120
우리가

2676
00:22:10,120 --> 00:22:10,580
register

2677
00:22:10,580 --> 00:22:11,120
file이라고

2678
00:22:11,120 --> 00:22:11,260
했죠.

2679
00:22:11,840 --> 00:22:11,940
그래서

2680
00:22:11,940 --> 00:22:12,680
register를

2681
00:22:12,680 --> 00:22:13,120
id

2682
00:22:13,400 --> 00:22:13,500
저

2683
00:22:13,500 --> 00:22:14,260
영역에다가

2684
00:22:14,260 --> 00:22:14,620
두도록

2685
00:22:14,620 --> 00:22:14,720
하겠습니다.

2686
00:22:15,980 --> 00:22:16,160
그러면

2687
00:22:16,160 --> 00:22:16,580
execute

2688
00:22:16,580 --> 00:22:17,300
stage는

2689
00:22:17,300 --> 00:22:18,540
elu

2690
00:22:18,660 --> 00:22:19,000
얘니까

2691
00:22:19,000 --> 00:22:19,400
또

2692
00:22:19,400 --> 00:22:20,000
ex

2693
00:22:20,140 --> 00:22:20,740
영역

2694
00:22:20,940 --> 00:22:21,140
구간에

2695
00:22:21,320 --> 00:22:21,420
두게

2696
00:22:21,420 --> 00:22:21,680
되고

2697
00:22:21,680 --> 00:22:22,320
그리고

2698
00:22:22,320 --> 00:22:22,740
memory

2699
00:22:22,740 --> 00:22:23,140
access

2700
00:22:23,140 --> 00:22:23,820
stage는

2701
00:22:23,820 --> 00:22:24,140
우리가

2702
00:22:24,140 --> 00:22:24,460
data

2703
00:22:24,460 --> 00:22:25,120
memory를

2704
00:22:25,120 --> 00:22:25,820
접근하느냐

2705
00:22:25,820 --> 00:22:26,260
마느냐

2706
00:22:26,520 --> 00:22:26,940
이슈라고

2707
00:22:26,940 --> 00:22:27,240
했기

2708
00:22:27,240 --> 00:22:27,540
때문에

2709
00:22:27,540 --> 00:22:27,940
data

2710
00:22:28,100 --> 00:22:28,580
memory도

2711
00:22:28,580 --> 00:22:28,880
저기에

2712
00:22:28,880 --> 00:22:29,420
두겠습니다.

2713
00:22:30,900 --> 00:22:31,000
자

2714
00:22:31,000 --> 00:22:31,300
그럼

2715
00:22:31,300 --> 00:22:32,100
애매해지는게

2716
00:22:32,100 --> 00:22:32,680
writeback이죠.

2717
00:22:33,800 --> 00:22:34,240
writeback은

2718
00:22:34,240 --> 00:22:34,560
우리가

2719
00:22:34,920 --> 00:22:35,020
register

2720
00:22:35,020 --> 00:22:35,680
file에다가

2721
00:22:35,680 --> 00:22:36,020
값을

2722
00:22:36,160 --> 00:22:36,340
쓰는

2723
00:22:36,340 --> 00:22:36,880
놈이잖아요.

2724
00:22:37,460 --> 00:22:37,660
그러면

2725
00:22:37,660 --> 00:22:38,000
사실

2726
00:22:38,000 --> 00:22:38,280
이

2727
00:22:38,280 --> 00:22:39,400
register라는

2728
00:22:39,400 --> 00:22:39,760
놈이

2729
00:22:39,760 --> 00:22:40,000
이

2730
00:22:40,000 --> 00:22:40,640
writeback에도

2731
00:22:40,640 --> 00:22:41,160
사실은

2732
00:22:41,160 --> 00:22:41,500
있어야

2733
00:22:41,500 --> 00:22:41,900
되도록

2734
00:22:41,900 --> 00:22:42,360
그림을

2735
00:22:42,360 --> 00:22:42,720
그리면

2736
00:22:42,720 --> 00:22:43,440
좋겠지만

2737
00:22:44,640 --> 00:22:44,740
저

2738
00:22:44,740 --> 00:22:45,120
register

2739
00:22:45,120 --> 00:22:45,520
file은

2740
00:22:45,520 --> 00:22:45,940
하나밖에

2741
00:22:45,940 --> 00:22:46,060
없습니다.

2742
00:22:46,840 --> 00:22:46,980
이

2743
00:22:47,140 --> 00:22:47,380
하드웨어

2744
00:22:47,380 --> 00:22:47,480
4개.

2745
00:22:48,280 --> 00:22:48,580
그렇기

2746
00:22:48,580 --> 00:22:48,920
때문에

2747
00:22:48,920 --> 00:22:50,260
writeback은

2748
00:22:50,660 --> 00:22:50,760
이

2749
00:22:50,760 --> 00:22:51,040
뒤에

2750
00:22:51,040 --> 00:22:51,480
뭔가

2751
00:22:51,480 --> 00:22:51,960
휑해

2752
00:22:51,960 --> 00:22:52,600
보이지만

2753
00:22:52,600 --> 00:22:54,040
궁극적으로는

2754
00:22:54,360 --> 00:22:54,460
이

2755
00:22:54,460 --> 00:22:55,140
멀티플렉서

2756
00:22:55,140 --> 00:22:55,480
통해서

2757
00:22:55,780 --> 00:22:56,120
4바이트

2758
00:22:56,120 --> 00:22:56,320
무슨

2759
00:22:56,320 --> 00:22:56,740
값을

2760
00:22:56,740 --> 00:22:56,920
쓸지

2761
00:22:57,160 --> 00:22:57,680
정해가지고

2762
00:22:57,680 --> 00:22:58,460
여기로

2763
00:22:58,460 --> 00:22:59,220
들어간다.

2764
00:22:59,720 --> 00:23:00,160
즉

2765
00:23:00,260 --> 00:23:00,420
이

2766
00:23:00,420 --> 00:23:00,860
register

2767
00:23:00,860 --> 00:23:01,880
file이

2768
00:23:01,940 --> 00:23:02,920
마치

2769
00:23:03,000 --> 00:23:03,140
저

2770
00:23:03,140 --> 00:23:03,840
writeback은

2771
00:23:03,840 --> 00:23:04,240
저기

2772
00:23:04,240 --> 00:23:05,200
뒤에서부터

2773
00:23:05,200 --> 00:23:05,480
해서

2774
00:23:05,480 --> 00:23:05,720
이

2775
00:23:05,720 --> 00:23:06,400
초반부에

2776
00:23:06,400 --> 00:23:06,600
이

2777
00:23:06,600 --> 00:23:06,880
write

2778
00:23:06,880 --> 00:23:07,440
register와

2779
00:23:07,440 --> 00:23:07,700
write

2780
00:23:07,700 --> 00:23:08,040
data

2781
00:23:08,080 --> 00:23:08,760
파트가

2782
00:23:08,760 --> 00:23:09,260
저

2783
00:23:09,260 --> 00:23:09,960
writeback의

2784
00:23:09,960 --> 00:23:10,300
영역이다.

2785
00:23:10,920 --> 00:23:11,080
라고

2786
00:23:11,260 --> 00:23:11,360
생각을

2787
00:23:11,360 --> 00:23:11,860
하시는게

2788
00:23:11,860 --> 00:23:12,360
좋습니다.

2789
00:23:13,200 --> 00:23:13,400
그러면

2790
00:23:13,400 --> 00:23:14,660
writeback에서는

2791
00:23:14,660 --> 00:23:15,200
실제

2792
00:23:15,200 --> 00:23:15,400
이

2793
00:23:15,400 --> 00:23:15,800
register

2794
00:23:15,840 --> 00:23:16,420
중에서

2795
00:23:16,420 --> 00:23:16,860
저

2796
00:23:16,860 --> 00:23:17,320
register에

2797
00:23:17,360 --> 00:23:17,680
들어가는

2798
00:23:17,780 --> 00:23:17,920
port

2799
00:23:17,920 --> 00:23:18,460
중에서

2800
00:23:18,460 --> 00:23:19,540
write

2801
00:23:19,560 --> 00:23:20,240
register가

2802
00:23:20,240 --> 00:23:20,420
몇

2803
00:23:20,420 --> 00:23:20,860
번이냐

2804
00:23:21,240 --> 00:23:21,360
그리고

2805
00:23:21,360 --> 00:23:21,740
그

2806
00:23:21,740 --> 00:23:22,080
write

2807
00:23:22,080 --> 00:23:22,500
register,

2808
00:23:22,980 --> 00:23:23,080
destination

2809
00:23:23,080 --> 00:23:24,020
register에다가

2810
00:23:24,020 --> 00:23:24,340
어떤

2811
00:23:24,340 --> 00:23:24,840
4바이트

2812
00:23:24,880 --> 00:23:25,140
값을

2813
00:23:25,280 --> 00:23:25,380
쓸

2814
00:23:25,380 --> 00:23:25,860
것이냐.

2815
00:23:26,400 --> 00:23:26,500
저

2816
00:23:26,500 --> 00:23:26,800
두

2817
00:23:26,800 --> 00:23:27,100
개의

2818
00:23:27,100 --> 00:23:27,540
port가

2819
00:23:27,540 --> 00:23:28,520
writeback이랑

2820
00:23:28,520 --> 00:23:29,140
관련된

2821
00:23:29,140 --> 00:23:29,240
port이다.

2822
00:23:30,320 --> 00:23:30,420
생각을

2823
00:23:30,420 --> 00:23:30,760
하시면

2824
00:23:30,760 --> 00:23:30,960
돼요.

2825
00:23:31,660 --> 00:23:31,860
그러면

2826
00:23:31,860 --> 00:23:32,140
이제

2827
00:23:32,140 --> 00:23:32,600
instruction

2828
00:23:32,600 --> 00:23:33,160
decode

2829
00:23:33,160 --> 00:23:33,800
파트는

2830
00:23:33,800 --> 00:23:34,520
무엇이냐?

2831
00:23:34,700 --> 00:23:34,800
라고

2832
00:23:34,800 --> 00:23:35,080
하실

2833
00:23:35,080 --> 00:23:35,220
수

2834
00:23:35,220 --> 00:23:35,480
있는데

2835
00:23:35,520 --> 00:23:36,560
우리가

2836
00:23:36,560 --> 00:23:37,360
값을

2837
00:23:37,360 --> 00:23:37,860
읽어드릴

2838
00:23:37,860 --> 00:23:38,420
register

2839
00:23:38,420 --> 00:23:39,020
두

2840
00:23:39,020 --> 00:23:39,280
개의

2841
00:23:39,280 --> 00:23:39,780
index는

2842
00:23:39,980 --> 00:23:40,100
각각

2843
00:23:40,100 --> 00:23:40,400
어떻게

2844
00:23:40,400 --> 00:23:40,620
되냐.

2845
00:23:41,040 --> 00:23:41,180
즉

2846
00:23:41,220 --> 00:23:41,900
rsrt

2847
00:23:42,160 --> 00:23:42,500
index가

2848
00:23:42,500 --> 00:23:42,760
어떻게

2849
00:23:42,760 --> 00:23:43,120
되냐.

2850
00:23:43,680 --> 00:23:43,840
그리고

2851
00:23:43,840 --> 00:23:44,560
그걸로부터

2852
00:23:44,560 --> 00:23:45,180
읽어드린

2853
00:23:45,180 --> 00:23:46,340
rsrt

2854
00:23:46,460 --> 00:23:46,840
값은

2855
00:23:46,840 --> 00:23:47,160
어떻게

2856
00:23:47,180 --> 00:23:47,820
그

2857
00:23:47,820 --> 00:23:48,160
실제

2858
00:23:48,160 --> 00:23:48,300
그

2859
00:23:48,300 --> 00:23:48,680
값들은

2860
00:23:48,680 --> 00:23:49,020
뭐냐.

2861
00:23:49,400 --> 00:23:49,500
그니까

2862
00:23:49,500 --> 00:23:49,980
instruction

2863
00:23:49,980 --> 00:23:50,580
decode

2864
00:23:50,580 --> 00:23:51,020
파트라고

2865
00:23:51,020 --> 00:23:51,320
보시면

2866
00:23:51,320 --> 00:23:51,700
됩니다.

2867
00:23:52,480 --> 00:23:52,660
그래서

2868
00:23:52,660 --> 00:23:52,940
read

2869
00:23:52,940 --> 00:23:53,360
register

2870
00:23:53,360 --> 00:23:53,660
1,

2871
00:23:53,800 --> 00:23:53,860
2

2872
00:23:53,860 --> 00:23:54,440
포트랑

2873
00:23:54,440 --> 00:23:54,800
거기

2874
00:23:54,840 --> 00:23:55,980
index를

2875
00:23:55,980 --> 00:23:56,360
넣었을

2876
00:23:56,360 --> 00:23:56,440
때

2877
00:23:56,440 --> 00:23:56,980
돌아가는

2878
00:23:56,980 --> 00:23:57,240
read

2879
00:23:57,240 --> 00:23:57,580
data

2880
00:23:57,580 --> 00:23:57,880
1,

2881
00:23:58,100 --> 00:23:58,120
2.

2882
00:23:58,660 --> 00:23:58,760
저

2883
00:23:58,760 --> 00:23:59,540
4개의

2884
00:23:59,540 --> 00:24:00,640
IOPort가

2885
00:24:00,640 --> 00:24:01,520
instruction

2886
00:24:01,520 --> 00:24:02,220
decode

2887
00:24:02,220 --> 00:24:02,920
쪽이고

2888
00:24:02,920 --> 00:24:03,600
그리고

2889
00:24:03,600 --> 00:24:04,260
write하는

2890
00:24:04,560 --> 00:24:04,660
register

2891
00:24:04,660 --> 00:24:05,200
index가

2892
00:24:05,200 --> 00:24:05,560
뭐냐.

2893
00:24:05,940 --> 00:24:06,060
그리고

2894
00:24:06,060 --> 00:24:06,480
그

2895
00:24:06,480 --> 00:24:07,340
write하는

2896
00:24:07,340 --> 00:24:07,680
register

2897
00:24:07,680 --> 00:24:08,480
index에

2898
00:24:08,480 --> 00:24:08,780
내가

2899
00:24:08,780 --> 00:24:09,140
실제로

2900
00:24:09,140 --> 00:24:09,420
쓸

2901
00:24:09,420 --> 00:24:09,880
4바이트

2902
00:24:09,920 --> 00:24:10,180
값은

2903
00:24:10,180 --> 00:24:10,440
뭐냐.

2904
00:24:10,660 --> 00:24:10,760
저

2905
00:24:10,760 --> 00:24:11,100
두

2906
00:24:11,100 --> 00:24:11,460
개의

2907
00:24:11,460 --> 00:24:11,800
import

2908
00:24:12,160 --> 00:24:12,260
port가

2909
00:24:12,260 --> 00:24:13,340
writeback

2910
00:24:13,420 --> 00:24:13,620
쪽에

2911
00:24:13,620 --> 00:24:14,180
해당하는

2912
00:24:14,180 --> 00:24:14,780
register다.

2913
00:24:15,320 --> 00:24:15,500
그래서

2914
00:24:15,500 --> 00:24:15,860
사실

2915
00:24:15,860 --> 00:24:16,460
register도

2916
00:24:16,460 --> 00:24:16,680
약간

2917
00:24:16,680 --> 00:24:17,460
로지컬이

2918
00:24:17,560 --> 00:24:17,660
두

2919
00:24:17,660 --> 00:24:17,840
개로

2920
00:24:17,840 --> 00:24:18,240
분류를

2921
00:24:18,240 --> 00:24:18,560
해볼

2922
00:24:18,560 --> 00:24:18,860
수는

2923
00:24:18,860 --> 00:24:19,020
있는

2924
00:24:19,020 --> 00:24:19,300
거예요.

2925
00:24:19,860 --> 00:24:19,960
실제

2926
00:24:19,960 --> 00:24:20,220
뭐

2927
00:24:20,220 --> 00:24:20,800
카피를

2928
00:24:20,800 --> 00:24:21,080
들이게

2929
00:24:21,080 --> 00:24:21,300
되면.

2930
00:24:22,220 --> 00:24:22,340
근데

2931
00:24:22,340 --> 00:24:22,640
그렇게

2932
00:24:22,640 --> 00:24:23,040
그리면

2933
00:24:23,040 --> 00:24:23,620
register

2934
00:24:23,620 --> 00:24:23,820
두

2935
00:24:23,820 --> 00:24:24,100
개니까

2936
00:24:24,100 --> 00:24:24,540
이상하지

2937
00:24:24,540 --> 00:24:24,820
않냐

2938
00:24:24,820 --> 00:24:25,120
라고

2939
00:24:25,120 --> 00:24:25,640
헷갈리실

2940
00:24:25,640 --> 00:24:25,760
수

2941
00:24:25,980 --> 00:24:26,140
있으니까

2942
00:24:26,160 --> 00:24:26,940
저런

2943
00:24:26,940 --> 00:24:27,240
식으로

2944
00:24:27,240 --> 00:24:27,640
일단

2945
00:24:27,640 --> 00:24:28,040
배치를

2946
00:24:28,600 --> 00:24:28,700
해보도록

2947
00:24:28,700 --> 00:24:29,180
하겠습니다.

2948
00:24:29,820 --> 00:24:29,920
자

2949
00:24:29,920 --> 00:24:30,240
저렇게

2950
00:24:30,260 --> 00:24:30,560
하면

2951
00:24:30,560 --> 00:24:30,860
되게

2952
00:24:30,860 --> 00:24:31,260
좀

2953
00:24:31,260 --> 00:24:31,900
단순하게

2954
00:24:31,900 --> 00:24:32,240
single

2955
00:24:32,240 --> 00:24:32,520
cycle

2956
00:24:32,940 --> 00:24:33,220
cpu를

2957
00:24:33,220 --> 00:24:33,520
일단

2958
00:24:33,520 --> 00:24:34,220
5개의

2959
00:24:34,220 --> 00:24:34,620
pipeline

2960
00:24:34,620 --> 00:24:35,100
stage에

2961
00:24:35,100 --> 00:24:35,880
맞춰서

2962
00:24:35,980 --> 00:24:36,080
좀

2963
00:24:36,080 --> 00:24:36,500
재구상을

2964
00:24:36,660 --> 00:24:36,780
한

2965
00:24:36,780 --> 00:24:37,160
거고

2966
00:24:38,240 --> 00:24:38,440
그러면

2967
00:24:38,440 --> 00:24:38,920
우리가

2968
00:24:38,920 --> 00:24:39,860
사실

2969
00:24:39,860 --> 00:24:40,240
single

2970
00:24:40,240 --> 00:24:40,520
cycle

2971
00:24:40,520 --> 00:24:41,840
cpu가

2972
00:24:42,160 --> 00:24:42,300
각

2973
00:24:42,520 --> 00:24:42,760
스테이지

2974
00:24:42,800 --> 00:24:43,120
별로

2975
00:24:43,120 --> 00:24:44,160
필요한

2976
00:24:44,160 --> 00:24:44,600
중요한

2977
00:24:44,600 --> 00:24:44,920
굳이

2978
00:24:44,980 --> 00:24:45,100
큰

2979
00:24:45,100 --> 00:24:45,580
하드웨어

2980
00:24:45,580 --> 00:24:45,940
외에

2981
00:24:45,940 --> 00:24:46,620
딴

2982
00:24:46,720 --> 00:24:46,880
그

2983
00:24:46,880 --> 00:24:47,520
쿠폰들도

2984
00:24:47,520 --> 00:24:48,060
있었어요.

2985
00:24:49,580 --> 00:24:50,060
대표적으로

2986
00:24:50,060 --> 00:24:50,400
pc

2987
00:24:51,400 --> 00:24:51,500
register도

2988
00:24:51,500 --> 00:24:51,740
있을

2989
00:24:51,940 --> 00:24:52,260
거고

2990
00:24:52,520 --> 00:24:52,660
그리고

2991
00:24:52,660 --> 00:24:53,100
pc

2992
00:24:53,100 --> 00:24:53,400
plus

2993
00:24:53,400 --> 00:24:53,880
4를

2994
00:24:53,880 --> 00:24:54,220
해주는

2995
00:24:54,220 --> 00:24:54,640
adder도

2996
00:24:54,640 --> 00:24:54,980
있고

2997
00:24:55,030 --> 00:24:55,880
그리고

2998
00:24:55,880 --> 00:24:56,980
pc

2999
00:24:56,980 --> 00:24:57,280
plus

3000
00:24:57,280 --> 00:24:57,540
4

3001
00:24:57,540 --> 00:24:57,900
plus

3002
00:24:57,920 --> 00:24:58,280
left

3003
00:24:58,460 --> 00:24:58,800
shifted

3004
00:24:58,800 --> 00:24:59,080
by

3005
00:24:59,080 --> 00:24:59,340
2

3006
00:24:59,340 --> 00:24:59,560
bit

3007
00:24:59,660 --> 00:24:59,800
than

3008
00:25:00,080 --> 00:25:00,180
immediate

3009
00:25:00,180 --> 00:25:00,680
value를

3010
00:25:00,680 --> 00:25:01,460
더하는

3011
00:25:01,460 --> 00:25:02,080
adder도

3012
00:25:02,080 --> 00:25:02,300
있고

3013
00:25:02,720 --> 00:25:03,460
멀티플렉서도

3014
00:25:03,460 --> 00:25:03,680
있고

3015
00:25:03,680 --> 00:25:04,140
등등

3016
00:25:04,140 --> 00:25:04,360
많습니다.

3017
00:25:05,340 --> 00:25:05,800
걔네들은

3018
00:25:05,800 --> 00:25:06,140
일단

3019
00:25:06,140 --> 00:25:06,840
적당하게

3020
00:25:06,840 --> 00:25:07,200
저렇게

3021
00:25:07,220 --> 00:25:07,580
배치를

3022
00:25:07,580 --> 00:25:08,640
해둘거에요.

3023
00:25:08,980 --> 00:25:09,220
인스터로프션

3024
00:25:09,220 --> 00:25:09,540
배치

3025
00:25:09,540 --> 00:25:10,200
단계에서

3026
00:25:10,200 --> 00:25:10,920
우리가

3027
00:25:10,920 --> 00:25:12,040
pc

3028
00:25:12,140 --> 00:25:12,540
값을

3029
00:25:12,540 --> 00:25:13,040
읽어서

3030
00:25:13,040 --> 00:25:13,600
실제

3031
00:25:13,600 --> 00:25:14,060
인스터로프션

3032
00:25:14,060 --> 00:25:14,680
메모리로부터

3033
00:25:14,680 --> 00:25:15,140
4바이트

3034
00:25:15,140 --> 00:25:15,540
땡겨서

3035
00:25:15,540 --> 00:25:15,740
요

3036
00:25:15,740 --> 00:25:16,280
파트가

3037
00:25:16,280 --> 00:25:16,740
실제

3038
00:25:16,740 --> 00:25:17,340
인스터로프션

3039
00:25:17,340 --> 00:25:17,880
배치의

3040
00:25:17,880 --> 00:25:18,620
핵심이긴

3041
00:25:18,620 --> 00:25:18,720
하지만

3042
00:25:19,060 --> 00:25:19,640
저

3043
00:25:19,640 --> 00:25:20,080
인스터로프션

3044
00:25:20,080 --> 00:25:20,800
배치하면서

3045
00:25:20,800 --> 00:25:21,600
어차피

3046
00:25:21,600 --> 00:25:21,880
pc

3047
00:25:21,880 --> 00:25:22,060
값

3048
00:25:22,060 --> 00:25:22,420
읽은

3049
00:25:22,420 --> 00:25:22,600
거

3050
00:25:22,600 --> 00:25:23,020
pc

3051
00:25:23,020 --> 00:25:23,360
plus

3052
00:25:23,360 --> 00:25:23,600
4

3053
00:25:23,600 --> 00:25:23,960
값도

3054
00:25:23,960 --> 00:25:24,320
동시에

3055
00:25:24,320 --> 00:25:24,800
계산해

3056
00:25:24,800 --> 00:25:25,200
버리지

3057
00:25:25,240 --> 00:25:25,400
뭐

3058
00:25:25,400 --> 00:25:25,740
하고

3059
00:25:25,900 --> 00:25:26,200
저의

3060
00:25:26,200 --> 00:25:26,620
의견은

3061
00:25:26,620 --> 00:25:27,000
if

3062
00:25:27,000 --> 00:25:27,560
쪽에

3063
00:25:27,560 --> 00:25:27,760
어느

3064
00:25:27,760 --> 00:25:27,980
정도

3065
00:25:27,980 --> 00:25:28,340
배치를

3066
00:25:28,340 --> 00:25:28,800
해두자

3067
00:25:29,180 --> 00:25:29,340
라고

3068
00:25:29,340 --> 00:25:29,680
저희가

3069
00:25:29,680 --> 00:25:30,060
생각을

3070
00:25:30,440 --> 00:25:30,580
해두도록

3071
00:25:30,580 --> 00:25:31,080
하고

3072
00:25:31,940 --> 00:25:32,080
그리고

3073
00:25:32,080 --> 00:25:32,500
execute

3074
00:25:32,500 --> 00:25:32,940
스테이지

3075
00:25:32,940 --> 00:25:33,380
내에서

3076
00:25:33,380 --> 00:25:33,860
pc

3077
00:25:34,000 --> 00:25:34,260
plus

3078
00:25:34,260 --> 00:25:35,220
4에다가

3079
00:25:35,740 --> 00:25:35,860
immediate

3080
00:25:35,860 --> 00:25:36,520
value

3081
00:25:36,520 --> 00:25:36,960
left

3082
00:25:36,960 --> 00:25:37,360
shifted

3083
00:25:37,480 --> 00:25:37,640
by

3084
00:25:37,640 --> 00:25:37,880
2

3085
00:25:37,880 --> 00:25:38,020
bit

3086
00:25:38,240 --> 00:25:38,380
요거

3087
00:25:38,380 --> 00:25:39,400
더하는거는

3088
00:25:39,440 --> 00:25:39,560
뭐

3089
00:25:39,560 --> 00:25:40,080
편의상

3090
00:25:40,080 --> 00:25:40,520
execute

3091
00:25:40,520 --> 00:25:40,920
스테이지

3092
00:25:40,920 --> 00:25:41,420
쪽으로

3093
00:25:41,420 --> 00:25:41,800
일단

3094
00:25:41,800 --> 00:25:42,160
배치를

3095
00:25:42,160 --> 00:25:42,560
해두겠습니다.

3096
00:25:43,600 --> 00:25:43,780
그러면

3097
00:25:43,780 --> 00:25:44,280
메모리

3098
00:25:44,280 --> 00:25:44,760
액세스

3099
00:25:44,760 --> 00:25:45,520
스테이지에서

3100
00:25:45,520 --> 00:25:46,000
실제

3101
00:25:46,000 --> 00:25:46,380
pc

3102
00:25:46,440 --> 00:25:47,100
업데이트가

3103
00:25:47,100 --> 00:25:47,660
일어나게

3104
00:25:47,660 --> 00:25:47,920
되는데

3105
00:25:48,420 --> 00:25:48,580
브랜치

3106
00:25:48,840 --> 00:25:49,000
명령의

3107
00:25:49,220 --> 00:25:49,580
경우에는

3108
00:25:49,580 --> 00:25:53,500
메모리

3109
00:25:53,500 --> 00:25:53,800
액세스

3110
00:25:53,800 --> 00:25:54,360
스테이지에서

3111
00:25:54,360 --> 00:25:55,200
pc에다가

3112
00:25:55,200 --> 00:25:55,880
rise를

3113
00:25:55,880 --> 00:25:56,540
하는거니까

3114
00:25:57,060 --> 00:25:57,180
메모리

3115
00:25:57,180 --> 00:25:57,640
액세스의

3116
00:25:57,760 --> 00:25:58,140
초반부

3117
00:25:58,140 --> 00:25:59,020
클락사이클

3118
00:25:59,060 --> 00:25:59,240
내에

3119
00:25:59,240 --> 00:25:59,560
pc

3120
00:25:59,580 --> 00:26:00,060
업데이트가

3121
00:26:00,100 --> 00:26:00,600
일어나겠죠

3122
00:26:00,600 --> 00:26:01,380
그러면

3123
00:26:01,380 --> 00:26:01,640
그

3124
00:26:01,640 --> 00:26:01,940
pc

3125
00:26:01,940 --> 00:26:02,540
업데이트가

3126
00:26:02,620 --> 00:26:03,200
일어나는

3127
00:26:03,200 --> 00:26:03,640
이

3128
00:26:03,720 --> 00:26:04,420
하늘색

3129
00:26:04,420 --> 00:26:05,620
회로

3130
00:26:05,680 --> 00:26:06,200
plus

3131
00:26:06,220 --> 00:26:06,660
요

3132
00:26:06,660 --> 00:26:07,620
멀티플렉서

3133
00:26:08,420 --> 00:26:08,560
요

3134
00:26:08,560 --> 00:26:09,280
파트는

3135
00:26:09,280 --> 00:26:09,900
메모리

3136
00:26:09,900 --> 00:26:10,520
액세스

3137
00:26:10,520 --> 00:26:11,380
스테이지의

3138
00:26:11,780 --> 00:26:12,200
초반

3139
00:26:12,900 --> 00:26:13,000
절반

3140
00:26:13,440 --> 00:26:13,680
클락사이클

3141
00:26:13,800 --> 00:26:13,900
내에

3142
00:26:13,900 --> 00:26:14,480
일어나는

3143
00:26:14,480 --> 00:26:14,960
파트다

3144
00:26:15,200 --> 00:26:15,360
라고

3145
00:26:15,540 --> 00:26:15,640
생각을

3146
00:26:15,640 --> 00:26:15,980
하시면

3147
00:26:15,980 --> 00:26:16,340
됩니다

3148
00:26:16,740 --> 00:26:16,860
만약

3149
00:26:16,860 --> 00:26:17,200
브랜치

3150
00:26:17,200 --> 00:26:17,660
명령이

3151
00:26:17,660 --> 00:26:17,920
있고

3152
00:26:17,920 --> 00:26:18,340
그

3153
00:26:18,340 --> 00:26:18,680
브랜치

3154
00:26:18,740 --> 00:26:19,460
명령이

3155
00:26:19,620 --> 00:26:19,820
about

3156
00:26:19,820 --> 00:26:20,340
taken

3157
00:26:20,460 --> 00:26:20,600
이든

3158
00:26:20,600 --> 00:26:20,880
not

3159
00:26:20,880 --> 00:26:21,240
taken

3160
00:26:21,420 --> 00:26:21,560
이든

3161
00:26:21,560 --> 00:26:22,220
결정이

3162
00:26:22,220 --> 00:26:22,700
났다면

3163
00:26:23,340 --> 00:26:23,440
그래서

3164
00:26:23,440 --> 00:26:23,720
저런

3165
00:26:23,780 --> 00:26:23,880
식으로

3166
00:26:23,880 --> 00:26:24,360
구상을

3167
00:26:24,360 --> 00:26:24,540
할

3168
00:26:24,540 --> 00:26:24,640
수

3169
00:26:24,640 --> 00:26:25,180
있다고

3170
00:26:25,560 --> 00:26:25,660
일단

3171
00:26:25,660 --> 00:26:26,460
알아두시면

3172
00:26:26,460 --> 00:26:26,900
되구요

3173
00:26:27,820 --> 00:26:27,920
자

3174
00:26:27,920 --> 00:26:28,200
그럼

3175
00:26:28,200 --> 00:26:28,520
저런

3176
00:26:28,520 --> 00:26:28,840
식으로

3177
00:26:28,840 --> 00:26:29,340
일단

3178
00:26:29,340 --> 00:26:30,240
그

3179
00:26:30,240 --> 00:26:31,080
대략적인

3180
00:26:31,080 --> 00:26:31,600
하드웨어

3181
00:26:31,600 --> 00:26:32,060
배치는

3182
00:26:32,060 --> 00:26:32,740
했지만

3183
00:26:32,740 --> 00:26:33,440
사실

3184
00:26:33,440 --> 00:26:34,100
직전에

3185
00:26:35,060 --> 00:26:35,160
이

3186
00:26:35,160 --> 00:26:36,280
슬라이드의

3187
00:26:36,280 --> 00:26:36,560
가장

3188
00:26:36,560 --> 00:26:36,920
큰

3189
00:26:36,960 --> 00:26:37,280
문제가

3190
00:26:37,280 --> 00:26:38,320
여러분들이

3191
00:26:38,320 --> 00:26:38,700
생각해

3192
00:26:38,700 --> 00:26:39,020
보시는

3193
00:26:39,140 --> 00:26:39,380
거냐면

3194
00:26:40,340 --> 00:26:40,520
우리가

3195
00:26:40,520 --> 00:26:41,420
싱글사이클

3196
00:26:41,480 --> 00:26:41,820
cpu

3197
00:26:41,820 --> 00:26:42,140
때는

3198
00:26:43,360 --> 00:26:43,580
모든

3199
00:26:43,580 --> 00:26:44,220
하드웨어

3200
00:26:44,220 --> 00:26:45,160
컴포넌트들이

3201
00:26:45,160 --> 00:26:45,860
딱

3202
00:26:45,980 --> 00:26:46,460
하나의

3203
00:26:46,460 --> 00:26:47,940
명령어에서

3204
00:26:48,580 --> 00:26:48,840
저렇게

3205
00:26:48,840 --> 00:26:49,540
컴포지션을

3206
00:26:49,540 --> 00:26:49,640
하는

3207
00:26:49,640 --> 00:26:50,460
명령어가

3208
00:26:50,460 --> 00:26:50,760
예를

3209
00:26:50,760 --> 00:26:50,960
들어서

3210
00:26:51,060 --> 00:26:51,420
add라고

3211
00:26:51,420 --> 00:26:51,700
하면

3212
00:26:52,600 --> 00:26:52,860
add에

3213
00:26:52,860 --> 00:26:53,080
대한

3214
00:26:53,080 --> 00:26:53,540
정보만

3215
00:26:53,540 --> 00:26:53,740
갖고

3216
00:26:53,740 --> 00:26:54,840
있는거다

3217
00:26:55,000 --> 00:26:55,180
그리고

3218
00:26:55,180 --> 00:26:55,480
그

3219
00:26:55,480 --> 00:26:55,860
add에

3220
00:26:55,860 --> 00:26:56,040
대한

3221
00:26:56,040 --> 00:26:56,440
정보만

3222
00:26:56,440 --> 00:26:56,680
갖고

3223
00:26:56,680 --> 00:26:57,140
있다라는

3224
00:26:57,140 --> 00:26:57,520
것은

3225
00:26:57,520 --> 00:26:58,340
우리가

3226
00:26:58,340 --> 00:26:59,020
add에

3227
00:26:59,020 --> 00:26:59,520
해당하는

3228
00:26:59,520 --> 00:27:00,040
컨트롤

3229
00:27:00,040 --> 00:27:00,840
시그널들이

3230
00:27:00,840 --> 00:27:01,940
한순간에는

3231
00:27:01,940 --> 00:27:02,280
모든

3232
00:27:02,280 --> 00:27:02,680
구성

3233
00:27:02,680 --> 00:27:03,120
요소에게

3234
00:27:03,120 --> 00:27:03,360
다

3235
00:27:03,720 --> 00:27:03,860
야

3236
00:27:03,860 --> 00:27:04,480
너는

3237
00:27:04,540 --> 00:27:05,220
지금

3238
00:27:05,220 --> 00:27:05,620
id

3239
00:27:05,620 --> 00:27:06,400
쪽

3240
00:27:06,960 --> 00:27:07,320
그거긴

3241
00:27:07,320 --> 00:27:07,660
하지만

3242
00:27:07,660 --> 00:27:08,340
add명령을

3243
00:27:08,340 --> 00:27:08,540
해야

3244
00:27:08,560 --> 00:27:08,700
돼

3245
00:27:08,700 --> 00:27:09,020
너는

3246
00:27:09,020 --> 00:27:09,340
ex

3247
00:27:09,340 --> 00:27:09,680
쪽에

3248
00:27:09,680 --> 00:27:10,180
alu긴

3249
00:27:10,320 --> 00:27:10,420
하지만

3250
00:27:10,420 --> 00:27:10,860
add를

3251
00:27:10,860 --> 00:27:11,080
해야

3252
00:27:11,080 --> 00:27:11,360
돼

3253
00:27:11,740 --> 00:27:11,860
데이터

3254
00:27:11,860 --> 00:27:12,480
메모리면

3255
00:27:12,480 --> 00:27:12,840
야

3256
00:27:12,840 --> 00:27:13,160
너는

3257
00:27:13,160 --> 00:27:13,380
지금

3258
00:27:13,380 --> 00:27:13,880
이만큼의

3259
00:27:13,920 --> 00:27:14,360
클락사이클을

3260
00:27:14,380 --> 00:27:14,540
add

3261
00:27:14,540 --> 00:27:14,840
하니까

3262
00:27:14,840 --> 00:27:15,580
read도

3263
00:27:15,580 --> 00:27:15,780
할

3264
00:27:15,820 --> 00:27:15,920
필요

3265
00:27:15,920 --> 00:27:16,160
없고

3266
00:27:16,160 --> 00:27:16,600
write도

3267
00:27:16,600 --> 00:27:16,760
할

3268
00:27:16,780 --> 00:27:16,880
필요

3269
00:27:16,880 --> 00:27:17,280
없어

3270
00:27:18,080 --> 00:27:18,600
writeback

3271
00:27:18,700 --> 00:27:18,800
같은

3272
00:27:18,800 --> 00:27:19,240
경우에는

3273
00:27:19,240 --> 00:27:19,960
현재

3274
00:27:19,960 --> 00:27:20,180
우리

3275
00:27:20,180 --> 00:27:20,380
add

3276
00:27:20,380 --> 00:27:21,040
명령어니까

3277
00:27:21,040 --> 00:27:21,580
destination

3278
00:27:21,580 --> 00:27:22,200
register를

3279
00:27:22,200 --> 00:27:22,500
쓰긴

3280
00:27:22,500 --> 00:27:23,060
쓸건데

3281
00:27:23,060 --> 00:27:23,840
alu에서

3282
00:27:23,840 --> 00:27:24,100
나온

3283
00:27:24,100 --> 00:27:24,520
결과를

3284
00:27:24,520 --> 00:27:24,620
써라

3285
00:27:25,120 --> 00:27:25,440
이런식의

3286
00:27:25,440 --> 00:27:25,560
다

3287
00:27:25,560 --> 00:27:25,920
컨트롤

3288
00:27:25,920 --> 00:27:26,500
시그널이

3289
00:27:26,500 --> 00:27:26,820
모든

3290
00:27:26,820 --> 00:27:27,220
하드웨어

3291
00:27:27,220 --> 00:27:27,700
유닛들이

3292
00:27:27,800 --> 00:27:28,220
똑같은

3293
00:27:28,220 --> 00:27:28,600
명령어

3294
00:27:28,600 --> 00:27:29,020
하나만

3295
00:27:29,020 --> 00:27:29,360
쳐다보고

3296
00:27:29,360 --> 00:27:29,520
있는거에요

3297
00:27:30,680 --> 00:27:30,920
근데

3298
00:27:30,920 --> 00:27:32,060
문제는

3299
00:27:32,500 --> 00:27:33,060
파이플라이닝을

3300
00:27:33,060 --> 00:27:33,260
하게

3301
00:27:33,260 --> 00:27:33,640
되면

3302
00:27:33,640 --> 00:27:34,820
우리는

3303
00:27:34,820 --> 00:27:35,300
서로

3304
00:27:35,300 --> 00:27:36,680
한순간에

3305
00:27:36,920 --> 00:27:37,140
서로

3306
00:27:37,140 --> 00:27:37,680
다른

3307
00:27:37,680 --> 00:27:38,360
파이플라인

3308
00:27:38,360 --> 00:27:38,920
스테이지에

3309
00:27:38,920 --> 00:27:39,640
해당하는

3310
00:27:39,640 --> 00:27:40,720
명령어들이

3311
00:27:40,720 --> 00:27:41,120
서로

3312
00:27:41,120 --> 00:27:41,680
다릅니다

3313
00:27:42,980 --> 00:27:43,080
한

3314
00:27:43,080 --> 00:27:43,640
클락사이클

3315
00:27:43,640 --> 00:27:44,040
내게

3316
00:27:44,040 --> 00:27:44,540
자

3317
00:27:44,540 --> 00:27:44,880
이제

3318
00:27:44,880 --> 00:27:45,540
이런식으로

3319
00:27:45,820 --> 00:27:46,100
납조개서

3320
00:27:46,100 --> 00:27:46,240
한번

3321
00:27:46,240 --> 00:27:46,620
봤을

3322
00:27:46,640 --> 00:27:46,740
때

3323
00:27:47,860 --> 00:27:48,100
우리가

3324
00:27:48,100 --> 00:27:48,800
무조건

3325
00:27:48,800 --> 00:27:49,400
왼쪽부터

3326
00:27:49,400 --> 00:27:49,940
if,

3327
00:27:51,480 --> 00:27:52,020
id,

3328
00:27:52,760 --> 00:27:53,240
ex,

3329
00:27:54,120 --> 00:27:54,440
mem,

3330
00:27:54,920 --> 00:27:55,400
writeback

3331
00:27:55,400 --> 00:27:55,760
이렇게

3332
00:27:55,760 --> 00:27:56,240
쪼개게

3333
00:27:56,240 --> 00:27:56,400
되는데

3334
00:27:58,080 --> 00:27:58,500
writeback을

3335
00:27:58,500 --> 00:27:58,920
수행하고

3336
00:27:58,920 --> 00:27:59,120
있는

3337
00:27:59,120 --> 00:27:59,500
명령어

3338
00:27:59,500 --> 00:27:59,820
하나가

3339
00:27:59,820 --> 00:28:00,300
있을거고

3340
00:28:00,940 --> 00:28:01,120
memory

3341
00:28:01,120 --> 00:28:02,040
access을

3342
00:28:02,040 --> 00:28:02,480
수행하고

3343
00:28:02,480 --> 00:28:02,660
있는

3344
00:28:02,660 --> 00:28:03,100
명령어

3345
00:28:03,100 --> 00:28:03,340
또

3346
00:28:03,340 --> 00:28:03,700
다른게

3347
00:28:03,700 --> 00:28:03,880
하나

3348
00:28:03,880 --> 00:28:04,560
있을거고

3349
00:28:04,560 --> 00:28:05,040
execute

3350
00:28:05,040 --> 00:28:05,480
스테이지

3351
00:28:05,480 --> 00:28:05,780
하고

3352
00:28:05,780 --> 00:28:05,980
있는

3353
00:28:05,980 --> 00:28:06,400
명령어

3354
00:28:06,400 --> 00:28:06,560
하나

3355
00:28:06,560 --> 00:28:06,760
또

3356
00:28:06,760 --> 00:28:07,360
있을거고

3357
00:28:07,780 --> 00:28:07,980
instruction

3358
00:28:07,980 --> 00:28:08,340
decode

3359
00:28:08,340 --> 00:28:08,580
스테이지

3360
00:28:08,580 --> 00:28:08,900
하는

3361
00:28:08,900 --> 00:28:09,320
명령어

3362
00:28:09,320 --> 00:28:09,480
하나

3363
00:28:09,480 --> 00:28:09,660
또

3364
00:28:09,660 --> 00:28:10,260
있을거고

3365
00:28:10,260 --> 00:28:10,900
instruction

3366
00:28:10,900 --> 00:28:11,220
batch

3367
00:28:11,220 --> 00:28:11,420
하고

3368
00:28:11,420 --> 00:28:11,620
있는

3369
00:28:11,620 --> 00:28:12,040
명령어

3370
00:28:12,040 --> 00:28:12,340
하나가

3371
00:28:12,340 --> 00:28:12,480
또

3372
00:28:12,480 --> 00:28:12,660
있어요

3373
00:28:13,680 --> 00:28:13,980
달리

3374
00:28:13,980 --> 00:28:14,680
얘기하면

3375
00:28:15,340 --> 00:28:16,100
싱글사이클

3376
00:28:16,100 --> 00:28:16,720
cpu와

3377
00:28:16,720 --> 00:28:17,220
달리

3378
00:28:17,220 --> 00:28:18,220
파이플라인

3379
00:28:18,220 --> 00:28:18,840
cpu의

3380
00:28:18,840 --> 00:28:19,300
경우에는

3381
00:28:19,300 --> 00:28:20,080
각

3382
00:28:20,180 --> 00:28:20,560
하드웨어

3383
00:28:20,560 --> 00:28:21,360
컴포넌트들이

3384
00:28:21,360 --> 00:28:21,760
다를

3385
00:28:21,760 --> 00:28:21,900
수

3386
00:28:21,900 --> 00:28:22,140
있다는

3387
00:28:22,140 --> 00:28:22,400
얘기에요

3388
00:28:22,660 --> 00:28:22,920
그리고

3389
00:28:22,920 --> 00:28:23,440
또

3390
00:28:23,440 --> 00:28:24,120
해석하고

3391
00:28:24,120 --> 00:28:24,420
현재

3392
00:28:24,420 --> 00:28:24,920
실행을

3393
00:28:24,920 --> 00:28:25,120
해야

3394
00:28:25,120 --> 00:28:25,360
되는

3395
00:28:25,360 --> 00:28:26,140
명령어들이

3396
00:28:26,140 --> 00:28:26,400
모두

3397
00:28:26,400 --> 00:28:26,780
다를

3398
00:28:26,780 --> 00:28:26,920
수

3399
00:28:26,920 --> 00:28:27,200
있다는

3400
00:28:27,200 --> 00:28:27,300
얘기입니다.

3401
00:28:28,900 --> 00:28:29,260
싱글사이클

3402
00:28:29,500 --> 00:28:29,820
cpu는

3403
00:28:29,820 --> 00:28:30,100
제가

3404
00:28:30,100 --> 00:28:30,320
아까

3405
00:28:30,320 --> 00:28:30,740
말씀드린

3406
00:28:30,740 --> 00:28:31,080
것처럼

3407
00:28:31,080 --> 00:28:32,200
alu도

3408
00:28:32,200 --> 00:28:32,580
데이터

3409
00:28:32,620 --> 00:28:33,580
메모리도

3410
00:28:33,800 --> 00:28:34,340
그리고

3411
00:28:34,340 --> 00:28:35,060
register

3412
00:28:35,060 --> 00:28:35,540
file도

3413
00:28:35,540 --> 00:28:35,800
모두

3414
00:28:36,360 --> 00:28:36,460
add명령어

3415
00:28:36,460 --> 00:28:36,800
하나만

3416
00:28:36,800 --> 00:28:36,900
쳐다봤어요.

3417
00:28:38,120 --> 00:28:38,300
근데

3418
00:28:38,300 --> 00:28:38,780
지금

3419
00:28:39,040 --> 00:28:39,440
5스테이지

3420
00:28:39,440 --> 00:28:40,260
파이플라인으로

3421
00:28:40,260 --> 00:28:40,600
가게

3422
00:28:40,720 --> 00:28:40,820
되면

3423
00:28:40,820 --> 00:28:42,020
writeback은

3424
00:28:42,020 --> 00:28:42,640
add명령어

3425
00:28:42,640 --> 00:28:42,760
일

3426
00:28:42,760 --> 00:28:42,840
수

3427
00:28:43,020 --> 00:28:43,120
있고

3428
00:28:43,120 --> 00:28:43,840
memory

3429
00:28:43,840 --> 00:28:44,120
access

3430
00:28:44,120 --> 00:28:44,560
스테이지는

3431
00:28:44,560 --> 00:28:45,200
roadword일

3432
00:28:45,200 --> 00:28:45,300
수

3433
00:28:45,300 --> 00:28:45,540
있고

3434
00:28:46,020 --> 00:28:46,320
execute

3435
00:28:46,320 --> 00:28:46,880
스테이지는

3436
00:28:46,880 --> 00:28:47,440
branch일

3437
00:28:47,460 --> 00:28:47,560
수도

3438
00:28:47,560 --> 00:28:47,940
있고

3439
00:28:48,220 --> 00:28:48,480
instruction

3440
00:28:48,480 --> 00:28:48,940
decode

3441
00:28:48,940 --> 00:28:49,400
스테이지는

3442
00:28:49,400 --> 00:28:49,500
또

3443
00:28:49,500 --> 00:28:50,140
storeword일

3444
00:28:50,140 --> 00:28:50,280
수도

3445
00:28:50,280 --> 00:28:50,600
있고

3446
00:28:50,600 --> 00:28:51,200
instruction

3447
00:28:51,200 --> 00:28:51,500
batch

3448
00:28:51,700 --> 00:28:52,120
스테이지에서는

3449
00:28:52,120 --> 00:28:52,320
또

3450
00:28:52,320 --> 00:28:53,700
add명령어

3451
00:28:53,760 --> 00:28:53,860
일

3452
00:28:53,860 --> 00:28:54,020
수

3453
00:28:54,020 --> 00:28:54,120
있죠.

3454
00:28:55,300 --> 00:28:55,480
즉

3455
00:28:55,880 --> 00:28:56,000
같은

3456
00:28:56,000 --> 00:28:56,640
하드웨어를

3457
00:28:56,640 --> 00:28:57,880
구성하지만

3458
00:28:57,880 --> 00:28:58,620
이

3459
00:28:58,620 --> 00:28:59,340
파이플라인

3460
00:28:59,340 --> 00:28:59,940
스테이지를

3461
00:28:59,940 --> 00:29:00,580
구성하는

3462
00:29:00,580 --> 00:29:01,360
하드웨어들은

3463
00:29:01,360 --> 00:29:01,740
모두

3464
00:29:01,740 --> 00:29:02,120
서로

3465
00:29:02,120 --> 00:29:02,500
다른

3466
00:29:02,500 --> 00:29:03,000
명령어

3467
00:29:03,080 --> 00:29:03,640
컨텍스트를

3468
00:29:03,640 --> 00:29:03,840
볼

3469
00:29:03,900 --> 00:29:04,000
수

3470
00:29:04,000 --> 00:29:04,400
있어야

3471
00:29:04,400 --> 00:29:04,500
된다.

3472
00:29:05,810 --> 00:29:06,860
자

3473
00:29:06,860 --> 00:29:07,280
그러면

3474
00:29:07,280 --> 00:29:07,560
이걸

3475
00:29:07,560 --> 00:29:07,980
어떻게

3476
00:29:07,980 --> 00:29:08,680
구현할까

3477
00:29:09,120 --> 00:29:09,240
라고

3478
00:29:09,240 --> 00:29:09,740
생각할

3479
00:29:09,740 --> 00:29:09,900
수가

3480
00:29:09,900 --> 00:29:10,200
있어요.

3481
00:29:11,260 --> 00:29:11,500
사실

3482
00:29:11,500 --> 00:29:11,920
여러분들

3483
00:29:11,920 --> 00:29:12,680
싱글사이클

3484
00:29:12,680 --> 00:29:13,420
cpu에서

3485
00:29:13,420 --> 00:29:13,880
우리가

3486
00:29:13,880 --> 00:29:14,980
add명령어라는

3487
00:29:14,980 --> 00:29:15,160
것을

3488
00:29:15,320 --> 00:29:15,600
수행을

3489
00:29:15,600 --> 00:29:15,720
할

3490
00:29:15,800 --> 00:29:15,900
때

3491
00:29:15,900 --> 00:29:16,280
어떻게

3492
00:29:16,280 --> 00:29:16,760
했는지를

3493
00:29:16,760 --> 00:29:16,960
한번

3494
00:29:17,360 --> 00:29:17,460
생각을

3495
00:29:17,460 --> 00:29:18,140
해보시면

3496
00:29:18,140 --> 00:29:18,980
우리가

3497
00:29:18,980 --> 00:29:19,420
instruction

3498
00:29:19,420 --> 00:29:19,720
batch

3499
00:29:19,720 --> 00:29:20,360
단계에서

3500
00:29:20,360 --> 00:29:20,760
sabit

3501
00:29:20,760 --> 00:29:21,180
데이터를

3502
00:29:21,180 --> 00:29:21,720
읽어옵니다.

3503
00:29:22,380 --> 00:29:22,480
사실

3504
00:29:22,480 --> 00:29:22,800
제가

3505
00:29:22,800 --> 00:29:23,340
데이터라고

3506
00:29:23,340 --> 00:29:23,640
부르는

3507
00:29:23,640 --> 00:29:24,000
이유는

3508
00:29:24,000 --> 00:29:24,180
아직

3509
00:29:24,660 --> 00:29:24,820
해석되지

3510
00:29:24,820 --> 00:29:24,980
않은

3511
00:29:25,200 --> 00:29:25,580
명령어라서

3512
00:29:25,580 --> 00:29:25,840
그래요.

3513
00:29:26,420 --> 00:29:26,700
sabit

3514
00:29:26,700 --> 00:29:27,180
데이터에

3515
00:29:27,180 --> 00:29:27,600
들어옵니다.

3516
00:29:28,300 --> 00:29:28,460
그러면

3517
00:29:28,460 --> 00:29:28,940
instruction

3518
00:29:28,940 --> 00:29:29,620
decode로

3519
00:29:29,620 --> 00:29:30,100
넘어갈

3520
00:29:30,100 --> 00:29:30,360
때

3521
00:29:30,360 --> 00:29:30,880
그

3522
00:29:30,880 --> 00:29:31,740
sabit로부터

3523
00:29:31,740 --> 00:29:32,400
rsrt

3524
00:29:32,400 --> 00:29:32,900
field는

3525
00:29:32,900 --> 00:29:33,240
일단

3526
00:29:33,240 --> 00:29:34,060
rsrt

3527
00:29:34,060 --> 00:29:34,920
field가

3528
00:29:34,920 --> 00:29:35,700
valid하겠지

3529
00:29:35,700 --> 00:29:35,900
하고

3530
00:29:36,000 --> 00:29:36,100
그리고

3531
00:29:36,100 --> 00:29:36,240
destiny

3532
00:29:36,260 --> 00:29:37,100
register

3533
00:29:37,100 --> 00:29:37,600
file에다가

3534
00:29:37,600 --> 00:29:38,100
읽어줘

3535
00:29:38,220 --> 00:29:38,320
라고

3536
00:29:38,320 --> 00:29:38,700
시키는

3537
00:29:38,740 --> 00:29:39,100
거고

3538
00:29:39,500 --> 00:29:39,660
그리고

3539
00:29:39,660 --> 00:29:39,860
그

3540
00:29:39,860 --> 00:29:40,740
sabit의

3541
00:29:40,740 --> 00:29:41,400
op

3542
00:29:41,400 --> 00:29:41,940
코드를

3543
00:29:41,940 --> 00:29:42,340
일단

3544
00:29:42,340 --> 00:29:42,720
컨트롤

3545
00:29:42,720 --> 00:29:43,120
유닛에

3546
00:29:43,120 --> 00:29:43,400
넣고

3547
00:29:43,460 --> 00:29:44,080
그

3548
00:29:44,080 --> 00:29:44,400
컨트롤

3549
00:29:44,400 --> 00:29:44,760
유닛이

3550
00:29:44,760 --> 00:29:44,900
만약

3551
00:29:44,900 --> 00:29:45,160
더

3552
00:29:45,160 --> 00:29:45,540
필요하면

3553
00:29:45,540 --> 00:29:45,820
function

3554
00:29:45,820 --> 00:29:46,280
field도

3555
00:29:46,280 --> 00:29:47,180
바꾸어가지고

3556
00:29:47,180 --> 00:29:48,040
add명령어다

3557
00:29:48,040 --> 00:29:48,280
라고

3558
00:29:48,280 --> 00:29:48,700
해석을

3559
00:29:48,700 --> 00:29:48,860
해야

3560
00:29:48,860 --> 00:29:49,120
된단

3561
00:29:49,120 --> 00:29:49,440
말이에요.

3562
00:29:50,500 --> 00:29:50,740
근데

3563
00:29:52,880 --> 00:29:53,240
현재

3564
00:29:53,240 --> 00:29:53,980
이제

3565
00:29:53,980 --> 00:29:54,560
그

3566
00:29:54,560 --> 00:29:55,640
만약

3567
00:29:55,640 --> 00:29:56,120
id

3568
00:29:56,120 --> 00:29:56,860
스테이지에서

3569
00:29:56,860 --> 00:29:57,840
add명령어를

3570
00:29:57,840 --> 00:29:58,060
해야

3571
00:29:58,060 --> 00:29:58,360
되고

3572
00:29:58,360 --> 00:29:58,960
instruction

3573
00:29:58,960 --> 00:29:59,300
batch

3574
00:29:59,300 --> 00:29:59,980
스테이지에서

3575
00:29:59,980 --> 00:30:00,220
이제

3576
00:30:00,220 --> 00:30:00,440
그

3577
00:30:00,440 --> 00:30:00,600
다음

3578
00:30:00,600 --> 00:30:01,080
명령어인

3579
00:30:01,080 --> 00:30:01,520
serve를

3580
00:30:01,520 --> 00:30:01,760
한다

3581
00:30:01,760 --> 00:30:02,100
해봅시다.

3582
00:30:03,500 --> 00:30:03,700
현재

3583
00:30:03,700 --> 00:30:04,160
우리는

3584
00:30:04,160 --> 00:30:04,620
한

3585
00:30:04,620 --> 00:30:05,180
클럭사이클이

3586
00:30:05,200 --> 00:30:05,380
탕

3587
00:30:05,440 --> 00:30:05,800
튀었을

3588
00:30:05,800 --> 00:30:06,000
때

3589
00:30:06,000 --> 00:30:06,700
instruction

3590
00:30:06,700 --> 00:30:07,480
decode는

3591
00:30:07,480 --> 00:30:07,920
add에

3592
00:30:07,920 --> 00:30:08,100
대한

3593
00:30:08,100 --> 00:30:08,400
놈을

3594
00:30:08,400 --> 00:30:08,600
해야

3595
00:30:08,600 --> 00:30:08,940
되고

3596
00:30:08,940 --> 00:30:09,500
근데

3597
00:30:09,500 --> 00:30:10,000
instruction

3598
00:30:10,000 --> 00:30:10,600
batch는

3599
00:30:10,600 --> 00:30:10,760
이제

3600
00:30:10,760 --> 00:30:10,980
그

3601
00:30:10,980 --> 00:30:11,180
다음

3602
00:30:11,180 --> 00:30:11,600
명령어

3603
00:30:11,600 --> 00:30:12,220
sabit의

3604
00:30:12,220 --> 00:30:12,780
serve인

3605
00:30:12,780 --> 00:30:13,080
놈을

3606
00:30:13,080 --> 00:30:13,580
당겨와야

3607
00:30:13,580 --> 00:30:13,680
돼요.

3608
00:30:14,780 --> 00:30:14,940
그러면

3609
00:30:14,940 --> 00:30:15,400
instruction

3610
00:30:15,400 --> 00:30:15,780
batch가

3611
00:30:15,780 --> 00:30:16,000
만약

3612
00:30:16,000 --> 00:30:16,420
serve을

3613
00:30:16,420 --> 00:30:16,760
당겨와

3614
00:30:16,760 --> 00:30:17,020
버린다.

3615
00:30:17,780 --> 00:30:17,960
그리고

3616
00:30:17,960 --> 00:30:18,380
우리가

3617
00:30:18,380 --> 00:30:18,860
instruction

3618
00:30:18,860 --> 00:30:19,540
decode에서

3619
00:30:19,540 --> 00:30:20,040
실행되는

3620
00:30:20,040 --> 00:30:21,260
add에

3621
00:30:21,260 --> 00:30:21,420
대한

3622
00:30:21,420 --> 00:30:21,800
정보를

3623
00:30:21,800 --> 00:30:22,180
어딘가

3624
00:30:22,180 --> 00:30:22,920
저장해두지

3625
00:30:23,240 --> 00:30:23,560
않는다

3626
00:30:23,560 --> 00:30:23,740
라고

3627
00:30:23,740 --> 00:30:23,980
하면

3628
00:30:24,940 --> 00:30:25,040
어

3629
00:30:25,040 --> 00:30:25,380
우리는

3630
00:30:25,380 --> 00:30:25,720
지금

3631
00:30:25,720 --> 00:30:26,020
현재

3632
00:30:26,020 --> 00:30:26,380
뒤에

3633
00:30:26,380 --> 00:30:26,760
애들은

3634
00:30:26,760 --> 00:30:27,020
이제

3635
00:30:27,020 --> 00:30:27,900
add라는

3636
00:30:27,900 --> 00:30:28,400
명령어를

3637
00:30:28,400 --> 00:30:28,640
네

3638
00:30:28,640 --> 00:30:29,280
클럭사이클을

3639
00:30:29,280 --> 00:30:29,680
걸쳐서

3640
00:30:29,860 --> 00:30:29,960
마저

3641
00:30:29,960 --> 00:30:30,300
실행을

3642
00:30:30,300 --> 00:30:30,740
해줘야

3643
00:30:30,740 --> 00:30:31,220
되는데

3644
00:30:32,280 --> 00:30:32,500
serve라는

3645
00:30:32,500 --> 00:30:32,860
명령어를

3646
00:30:32,860 --> 00:30:33,400
당겨오면

3647
00:30:33,400 --> 00:30:33,800
add라는

3648
00:30:33,800 --> 00:30:34,060
정보가

3649
00:30:34,060 --> 00:30:34,260
완전

3650
00:30:34,260 --> 00:30:34,820
날아가죠.

3651
00:30:35,500 --> 00:30:35,660
그러면

3652
00:30:35,660 --> 00:30:35,900
저

3653
00:30:35,900 --> 00:30:36,540
add라는

3654
00:30:36,540 --> 00:30:37,220
명령어를

3655
00:30:37,220 --> 00:30:37,560
현재

3656
00:30:37,560 --> 00:30:37,840
우리가

3657
00:30:37,840 --> 00:30:38,160
하고

3658
00:30:38,160 --> 00:30:39,240
있다라는

3659
00:30:39,240 --> 00:30:39,540
그

3660
00:30:39,580 --> 00:30:40,200
컨텍스를

3661
00:30:40,200 --> 00:30:40,980
저장해야

3662
00:30:40,980 --> 00:30:41,240
되는

3663
00:30:41,240 --> 00:30:41,760
임시

3664
00:30:41,760 --> 00:30:42,220
공간

3665
00:30:42,220 --> 00:30:42,420
또는

3666
00:30:42,620 --> 00:30:42,800
임시

3667
00:30:42,800 --> 00:30:43,180
버퍼

3668
00:30:43,180 --> 00:30:43,420
같은

3669
00:30:43,420 --> 00:30:43,580
걸

3670
00:30:43,620 --> 00:30:43,860
넣어야

3671
00:30:43,860 --> 00:30:43,960
됩니다.

3672
00:30:44,280 --> 00:30:44,420
우리가

3673
00:30:44,420 --> 00:30:45,080
중간중간

3674
00:30:45,880 --> 00:30:45,980
그

3675
00:30:45,980 --> 00:30:46,700
버퍼들을

3676
00:30:46,700 --> 00:30:47,780
latch라고

3677
00:30:47,780 --> 00:30:47,880
불러요.

3678
00:30:48,380 --> 00:30:48,540
우리가

3679
00:30:48,540 --> 00:30:48,640
하드웨어에서.

3680
00:30:50,400 --> 00:30:50,500
저

3681
00:30:50,500 --> 00:30:51,160
latch는

3682
00:30:51,160 --> 00:30:51,540
여러분들

3683
00:30:51,540 --> 00:30:51,960
뭐라고

3684
00:30:51,960 --> 00:30:52,520
생각하시면

3685
00:30:52,520 --> 00:30:53,000
되냐면

3686
00:30:53,000 --> 00:30:54,400
nbit

3687
00:30:54,540 --> 00:30:54,960
register

3688
00:30:54,980 --> 00:30:55,580
하나라고

3689
00:30:55,580 --> 00:30:56,220
생각하셔야

3690
00:30:56,220 --> 00:30:56,540
됩니다.

3691
00:30:57,080 --> 00:30:57,380
register

3692
00:30:57,380 --> 00:30:57,900
구현하는

3693
00:30:57,900 --> 00:30:58,080
거랑

3694
00:30:58,080 --> 00:30:58,520
똑같은

3695
00:30:58,520 --> 00:30:58,900
하드웨어

3696
00:30:58,900 --> 00:30:59,260
기술로

3697
00:30:59,260 --> 00:30:59,660
구현되는

3698
00:30:59,660 --> 00:30:59,760
거네요.

3699
00:31:00,280 --> 00:31:00,380
저

3700
00:31:00,380 --> 00:31:00,560
latch라는게.

3701
00:31:01,560 --> 00:31:01,680
즉

3702
00:31:01,680 --> 00:31:01,980
sequential

3703
00:31:01,980 --> 00:31:02,400
logic

3704
00:31:02,400 --> 00:31:02,600
or

3705
00:31:02,600 --> 00:31:02,820
flip

3706
00:31:02,880 --> 00:31:03,060
-flop

3707
00:31:03,200 --> 00:31:03,300
이런

3708
00:31:03,300 --> 00:31:03,500
걸로

3709
00:31:03,940 --> 00:31:04,300
구현되는

3710
00:31:04,300 --> 00:31:04,700
건데

3711
00:31:05,560 --> 00:31:05,660
자

3712
00:31:05,660 --> 00:31:05,880
그럼

3713
00:31:05,880 --> 00:31:06,080
저

3714
00:31:06,080 --> 00:31:06,800
latch에다가

3715
00:31:06,800 --> 00:31:07,100
도대체

3716
00:31:07,120 --> 00:31:07,280
우리가

3717
00:31:07,280 --> 00:31:07,640
무슨

3718
00:31:07,640 --> 00:31:08,080
정보를

3719
00:31:08,080 --> 00:31:08,400
넣는

3720
00:31:08,400 --> 00:31:08,820
거냐

3721
00:31:08,820 --> 00:31:09,420
라고

3722
00:31:09,420 --> 00:31:10,060
이제

3723
00:31:10,060 --> 00:31:10,380
좀

3724
00:31:10,580 --> 00:31:11,260
궁금해하실까봐

3725
00:31:11,260 --> 00:31:11,480
좀

3726
00:31:11,480 --> 00:31:11,860
말씀을

3727
00:31:11,860 --> 00:31:12,220
드리면

3728
00:31:13,360 --> 00:31:13,560
현재

3729
00:31:13,560 --> 00:31:14,440
클럭사이클

3730
00:31:14,440 --> 00:31:15,060
1에서

3731
00:31:15,060 --> 00:31:15,660
우리가

3732
00:31:15,660 --> 00:31:15,960
add

3733
00:31:15,960 --> 00:31:16,420
명령어

3734
00:31:16,420 --> 00:31:16,780
하나를

3735
00:31:16,780 --> 00:31:17,480
떼왔다라고

3736
00:31:17,480 --> 00:31:17,580
칩시다.

3737
00:31:18,660 --> 00:31:18,920
그러면

3738
00:31:18,920 --> 00:31:19,800
저

3739
00:31:19,800 --> 00:31:20,500
latch는

3740
00:31:20,500 --> 00:31:21,920
사실

3741
00:31:21,920 --> 00:31:22,520
이

3742
00:31:22,520 --> 00:31:23,220
ifid

3743
00:31:23,220 --> 00:31:23,480
latch,

3744
00:31:23,700 --> 00:31:24,040
ex

3745
00:31:24,040 --> 00:31:24,760
latch,

3746
00:31:24,880 --> 00:31:25,100
ex

3747
00:31:25,100 --> 00:31:25,380
map

3748
00:31:25,380 --> 00:31:25,620
latch

3749
00:31:25,680 --> 00:31:25,940
그리고

3750
00:31:25,940 --> 00:31:26,520
mapw

3751
00:31:26,520 --> 00:31:27,280
latch라고

3752
00:31:27,280 --> 00:31:27,960
부르는데

3753
00:31:27,960 --> 00:31:28,620
저

3754
00:31:28,620 --> 00:31:29,140
각각

3755
00:31:29,140 --> 00:31:29,620
latch가

3756
00:31:29,620 --> 00:31:30,180
저장하고

3757
00:31:30,180 --> 00:31:30,360
있는

3758
00:31:30,360 --> 00:31:30,780
정보는

3759
00:31:30,780 --> 00:31:31,220
뭐냐면

3760
00:31:31,220 --> 00:31:32,200
이

3761
00:31:32,200 --> 00:31:32,980
latch의

3762
00:31:33,480 --> 00:31:33,880
이후

3763
00:31:33,880 --> 00:31:34,320
그

3764
00:31:34,320 --> 00:31:34,520
다음

3765
00:31:34,520 --> 00:31:35,180
latch까지

3766
00:31:36,260 --> 00:31:36,360
이

3767
00:31:36,360 --> 00:31:36,940
latch와

3768
00:31:36,940 --> 00:31:37,220
그

3769
00:31:37,220 --> 00:31:37,440
다음

3770
00:31:37,440 --> 00:31:37,700
latch

3771
00:31:37,700 --> 00:31:38,460
사이의

3772
00:31:38,460 --> 00:31:38,980
하드웨어

3773
00:31:38,980 --> 00:31:40,040
컴포넌트들이

3774
00:31:40,480 --> 00:31:40,580
그

3775
00:31:40,580 --> 00:31:40,860
다음

3776
00:31:40,860 --> 00:31:41,680
클럭사이클

3777
00:31:41,680 --> 00:31:42,040
때

3778
00:31:42,040 --> 00:31:43,760
소모해야

3779
00:31:43,760 --> 00:31:44,020
될

3780
00:31:44,020 --> 00:31:44,320
또는

3781
00:31:44,320 --> 00:31:45,140
필요할

3782
00:31:45,140 --> 00:31:45,680
명령어

3783
00:31:45,680 --> 00:31:45,940
관련

3784
00:31:45,940 --> 00:31:46,560
컨텍스트를

3785
00:31:46,560 --> 00:31:46,740
다

3786
00:31:46,900 --> 00:31:47,020
저장을

3787
00:31:47,020 --> 00:31:47,240
하고

3788
00:31:47,240 --> 00:31:47,400
있는

3789
00:31:47,400 --> 00:31:47,720
겁니다.

3790
00:31:48,880 --> 00:31:49,000
자

3791
00:31:49,000 --> 00:31:49,500
그러면

3792
00:31:49,500 --> 00:31:51,200
클럭사이클은

3793
00:31:51,200 --> 00:31:51,380
이제

3794
00:31:51,380 --> 00:31:51,940
파이프라인

3795
00:31:51,940 --> 00:31:52,380
스테이지에

3796
00:31:52,380 --> 00:31:52,680
따라서

3797
00:31:52,680 --> 00:31:53,280
요렇게

3798
00:31:53,280 --> 00:31:53,680
크게

3799
00:31:53,900 --> 00:31:54,000
하나

3800
00:31:54,000 --> 00:31:54,620
뜰거에요.

3801
00:31:55,480 --> 00:31:55,680
요게

3802
00:31:55,680 --> 00:31:55,900
한

3803
00:31:55,900 --> 00:31:56,780
클럭사이클이고

3804
00:31:56,780 --> 00:31:57,520
현재

3805
00:31:57,520 --> 00:31:57,740
이

3806
00:31:57,740 --> 00:31:57,940
한

3807
00:31:57,940 --> 00:31:58,500
클럭사이클

3808
00:31:58,560 --> 00:31:58,740
동안

3809
00:31:58,740 --> 00:31:59,180
인스터로션

3810
00:31:59,600 --> 00:31:59,740
디코드

3811
00:31:59,740 --> 00:32:00,280
관련된

3812
00:32:00,720 --> 00:32:00,840
이제

3813
00:32:00,940 --> 00:32:01,060
그

3814
00:32:01,060 --> 00:32:01,360
하드웨어

3815
00:32:01,360 --> 00:32:01,760
유닛들이

3816
00:32:01,960 --> 00:32:02,160
작동을

3817
00:32:02,300 --> 00:32:02,500
시작을

3818
00:32:02,500 --> 00:32:02,640
할

3819
00:32:02,640 --> 00:32:02,920
겁니다.

3820
00:32:03,760 --> 00:32:03,860
자

3821
00:32:03,860 --> 00:32:04,340
그러면

3822
00:32:04,340 --> 00:32:05,300
직전

3823
00:32:05,300 --> 00:32:06,000
클럭사이클

3824
00:32:06,000 --> 00:32:06,160
때

3825
00:32:06,160 --> 00:32:06,620
우리가

3826
00:32:06,620 --> 00:32:07,380
add에

3827
00:32:07,380 --> 00:32:08,120
해당하는

3828
00:32:08,120 --> 00:32:09,320
4바이트

3829
00:32:09,320 --> 00:32:09,920
명령어

3830
00:32:09,920 --> 00:32:10,540
4바이트

3831
00:32:10,540 --> 00:32:10,880
데이터

3832
00:32:10,880 --> 00:32:11,680
땡겨온거를

3833
00:32:11,680 --> 00:32:12,720
저

3834
00:32:12,720 --> 00:32:13,480
latch라는

3835
00:32:13,480 --> 00:32:14,060
임시

3836
00:32:14,060 --> 00:32:14,840
저장공간에

3837
00:32:14,840 --> 00:32:15,060
그냥

3838
00:32:15,060 --> 00:32:15,800
32bit을

3839
00:32:15,800 --> 00:32:16,160
저장을

3840
00:32:16,160 --> 00:32:16,660
해두는

3841
00:32:16,660 --> 00:32:16,820
겁니다.

3842
00:32:17,620 --> 00:32:18,200
인스터로션

3843
00:32:18,200 --> 00:32:19,460
메모리로부터

3844
00:32:19,460 --> 00:32:20,260
그

3845
00:32:20,460 --> 00:32:20,720
직전

3846
00:32:21,040 --> 00:32:21,500
클럭사이클

3847
00:32:21,500 --> 00:32:22,660
동안은

3848
00:32:24,700 --> 00:32:24,800
두

3849
00:32:24,800 --> 00:32:24,980
번째

3850
00:32:24,980 --> 00:32:25,720
클럭사이클

3851
00:32:25,780 --> 00:32:25,900
동안

3852
00:32:25,900 --> 00:32:26,400
인스터로션

3853
00:32:26,400 --> 00:32:26,800
메모리에

3854
00:32:26,800 --> 00:32:27,000
어떤

3855
00:32:27,160 --> 00:32:27,340
조서를

3856
00:32:27,340 --> 00:32:27,520
딱

3857
00:32:27,520 --> 00:32:27,640
찍을건데

3858
00:32:27,660 --> 00:32:28,380
그러면

3859
00:32:28,380 --> 00:32:28,600
이제

3860
00:32:28,600 --> 00:32:29,080
add라는

3861
00:32:29,080 --> 00:32:29,620
명령어라고

3862
00:32:29,620 --> 00:32:30,060
쳐요.

3863
00:32:30,360 --> 00:32:30,500
그러면

3864
00:32:30,500 --> 00:32:30,680
그

3865
00:32:30,680 --> 00:32:31,080
add라는

3866
00:32:31,080 --> 00:32:31,440
명령어

3867
00:32:31,440 --> 00:32:31,640
아직

3868
00:32:31,640 --> 00:32:32,040
해석을

3869
00:32:32,460 --> 00:32:32,560
안했으니까

3870
00:32:32,560 --> 00:32:32,800
우리가

3871
00:32:32,800 --> 00:32:33,320
add란건

3872
00:32:33,320 --> 00:32:33,900
모르겠지만

3873
00:32:34,840 --> 00:32:34,940
이때

3874
00:32:34,940 --> 00:32:35,420
인스터로션

3875
00:32:35,420 --> 00:32:36,140
메모리로부터

3876
00:32:36,140 --> 00:32:36,520
땡겨온

3877
00:32:36,520 --> 00:32:37,640
32bit

3878
00:32:38,100 --> 00:32:38,860
명령어를

3879
00:32:38,860 --> 00:32:39,220
이

3880
00:32:39,220 --> 00:32:39,900
latch의

3881
00:32:39,900 --> 00:32:40,840
일부분으로

3882
00:32:41,420 --> 00:32:41,520
그냥

3883
00:32:41,520 --> 00:32:42,360
저장해놓는

3884
00:32:42,360 --> 00:32:42,560
겁니다.

3885
00:32:42,840 --> 00:32:43,140
직전

3886
00:32:43,140 --> 00:32:43,800
클럭사이클

3887
00:32:43,800 --> 00:32:44,000
때.

3888
00:32:44,720 --> 00:32:44,920
그러면

3889
00:32:44,920 --> 00:32:45,280
그

3890
00:32:45,280 --> 00:32:45,540
다음

3891
00:32:45,540 --> 00:32:46,240
클럭사이클

3892
00:32:46,240 --> 00:32:46,500
때는

3893
00:32:46,500 --> 00:32:47,480
이

3894
00:32:47,480 --> 00:32:48,060
인스터로션

3895
00:32:48,060 --> 00:32:48,340
디코드,

3896
00:32:48,400 --> 00:32:48,520
그

3897
00:32:48,520 --> 00:32:48,640
다음

3898
00:32:48,640 --> 00:32:49,420
클럭사이클이라고

3899
00:32:49,420 --> 00:32:49,640
하면

3900
00:32:49,640 --> 00:32:50,400
클럭시그널이

3901
00:32:50,400 --> 00:32:50,680
0에서

3902
00:32:50,680 --> 00:32:50,960
1로

3903
00:32:50,960 --> 00:32:51,140
딱

3904
00:32:51,240 --> 00:32:51,540
튀었을

3905
00:32:51,540 --> 00:32:51,640
때

3906
00:32:52,220 --> 00:32:52,340
그러면

3907
00:32:52,340 --> 00:32:52,900
인스터로션

3908
00:32:52,900 --> 00:32:53,420
디코드에

3909
00:32:53,420 --> 00:32:53,840
해당하는

3910
00:32:53,840 --> 00:32:54,120
애들은

3911
00:32:54,120 --> 00:32:54,860
레지스터랑

3912
00:32:54,860 --> 00:32:55,140
현재

3913
00:32:55,140 --> 00:32:55,420
sign

3914
00:32:55,420 --> 00:32:55,780
extend

3915
00:32:55,780 --> 00:32:56,120
unit이니까

3916
00:32:56,420 --> 00:32:56,740
그럼

3917
00:32:56,740 --> 00:32:57,520
레지스터만

3918
00:32:57,520 --> 00:32:57,680
일단

3919
00:32:57,680 --> 00:32:58,000
보겠습니다.

3920
00:32:58,400 --> 00:32:58,620
rs,

3921
00:32:58,740 --> 00:32:58,920
rt

3922
00:32:59,060 --> 00:32:59,360
build만

3923
00:32:59,360 --> 00:32:59,680
뽑는

3924
00:32:59,700 --> 00:32:59,920
것만

3925
00:32:59,920 --> 00:33:00,080
한번

3926
00:33:00,080 --> 00:33:00,440
볼까요?

3927
00:33:01,500 --> 00:33:01,660
그러면

3928
00:33:01,660 --> 00:33:02,120
얘는

3929
00:33:02,120 --> 00:33:03,580
인스터로션

3930
00:33:03,580 --> 00:33:04,420
메모리에서

3931
00:33:04,420 --> 00:33:04,740
갖고

3932
00:33:04,760 --> 00:33:04,920
온

3933
00:33:04,920 --> 00:33:05,640
4바이트를

3934
00:33:05,640 --> 00:33:05,980
현재

3935
00:33:05,980 --> 00:33:06,620
클럭사이클로

3936
00:33:06,620 --> 00:33:06,920
갖고

3937
00:33:06,960 --> 00:33:07,140
온

3938
00:33:07,140 --> 00:33:07,420
그걸

3939
00:33:07,420 --> 00:33:07,880
보는게

3940
00:33:07,880 --> 00:33:08,260
아니라

3941
00:33:09,000 --> 00:33:09,140
이

3942
00:33:09,140 --> 00:33:09,880
latch에

3943
00:33:09,880 --> 00:33:10,420
저장되어

3944
00:33:10,420 --> 00:33:10,600
있는

3945
00:33:10,600 --> 00:33:11,160
직전

3946
00:33:11,160 --> 00:33:12,240
클럭사이클의

3947
00:33:12,240 --> 00:33:12,740
인스터로션

3948
00:33:12,740 --> 00:33:13,620
메모리로부터

3949
00:33:13,620 --> 00:33:14,200
땡겨온

3950
00:33:14,200 --> 00:33:15,840
32bit로부터

3951
00:33:15,840 --> 00:33:17,300
rs랑

3952
00:33:17,300 --> 00:33:17,920
rt

3953
00:33:18,460 --> 00:33:18,600
build값을

3954
00:33:18,600 --> 00:33:18,860
땡겨온겁니다.

3955
00:33:20,240 --> 00:33:20,460
즉,

3956
00:33:20,740 --> 00:33:21,240
싱글사이클

3957
00:33:21,240 --> 00:33:21,900
CPU때는

3958
00:33:21,900 --> 00:33:22,140
우리가

3959
00:33:22,140 --> 00:33:22,520
인스터로션

3960
00:33:22,520 --> 00:33:23,100
메모리에서

3961
00:33:23,100 --> 00:33:23,720
땡겨오면

3962
00:33:23,720 --> 00:33:23,900
그

3963
00:33:23,900 --> 00:33:24,540
4바이트가

3964
00:33:24,540 --> 00:33:25,180
바로

3965
00:33:25,180 --> 00:33:25,800
나가나가

3966
00:33:26,100 --> 00:33:26,320
분해가

3967
00:33:26,320 --> 00:33:26,660
돼서

3968
00:33:26,660 --> 00:33:27,200
레지스터

3969
00:33:27,200 --> 00:33:27,620
파일이랑

3970
00:33:27,620 --> 00:33:27,960
컨트롤

3971
00:33:27,960 --> 00:33:28,360
유닛으로

3972
00:33:28,360 --> 00:33:28,660
들어갔어요.

3973
00:33:29,640 --> 00:33:29,740
근데

3974
00:33:29,740 --> 00:33:30,440
이제

3975
00:33:30,440 --> 00:33:31,100
멀티사이클,

3976
00:33:31,420 --> 00:33:31,600
아,

3977
00:33:31,700 --> 00:33:32,120
파이클라인드

3978
00:33:32,120 --> 00:33:32,780
CPU에서는

3979
00:33:32,780 --> 00:33:34,200
인스터로션

3980
00:33:34,200 --> 00:33:34,560
배치는

3981
00:33:34,560 --> 00:33:35,220
4바이트

3982
00:33:35,220 --> 00:33:35,620
명령을

3983
00:33:35,620 --> 00:33:36,440
땡겨서

3984
00:33:36,790 --> 00:33:38,240
ifid라는

3985
00:33:38,240 --> 00:33:39,000
레치에다가

3986
00:33:39,000 --> 00:33:39,600
저장을

3987
00:33:39,600 --> 00:33:40,180
하는게

3988
00:33:40,180 --> 00:33:40,620
인스터로션

3989
00:33:40,620 --> 00:33:41,080
배치의

3990
00:33:41,080 --> 00:33:41,220
역할입니다.

3991
00:33:42,500 --> 00:33:42,880
인스터로션

3992
00:33:42,880 --> 00:33:43,560
decode

3993
00:33:43,560 --> 00:33:44,120
스테이지의

3994
00:33:44,120 --> 00:33:45,240
역할은

3995
00:33:45,360 --> 00:33:45,720
직전

3996
00:33:45,720 --> 00:33:46,580
클럭사이클에

3997
00:33:46,580 --> 00:33:47,780
ifid라는

3998
00:33:47,780 --> 00:33:48,300
레치에

3999
00:33:48,300 --> 00:33:48,980
저장된

4000
00:33:48,980 --> 00:33:49,240
이

4001
00:33:49,380 --> 00:33:50,520
32bit을

4002
00:33:51,280 --> 00:33:51,380
마치

4003
00:33:51,380 --> 00:33:52,200
싱글사이클

4004
00:33:52,200 --> 00:33:52,920
CPU에서

4005
00:33:52,920 --> 00:33:53,200
내가

4006
00:33:53,200 --> 00:33:53,740
방금

4007
00:33:53,740 --> 00:33:54,180
땡겨온

4008
00:33:54,240 --> 00:33:54,700
4바이트

4009
00:33:54,980 --> 00:33:55,220
인스터로션

4010
00:33:55,220 --> 00:33:55,760
이하라고

4011
00:33:55,760 --> 00:33:56,260
생각을

4012
00:33:56,260 --> 00:33:56,780
하고

4013
00:33:57,900 --> 00:33:58,020
이

4014
00:33:58,020 --> 00:33:59,080
32bit을

4015
00:33:59,080 --> 00:33:59,480
현재

4016
00:33:59,480 --> 00:33:59,760
내가

4017
00:33:59,760 --> 00:34:00,280
실행해야

4018
00:34:00,280 --> 00:34:00,440
될

4019
00:34:00,440 --> 00:34:01,120
명령어구나

4020
00:34:01,120 --> 00:34:01,620
라고

4021
00:34:01,620 --> 00:34:01,900
하고

4022
00:34:01,900 --> 00:34:02,300
여기서

4023
00:34:02,300 --> 00:34:02,900
rs,

4024
00:34:03,080 --> 00:34:03,460
rt

4025
00:34:03,600 --> 00:34:03,960
build를

4026
00:34:03,960 --> 00:34:04,840
뽑아와서

4027
00:34:05,320 --> 00:34:05,440
그러면

4028
00:34:05,440 --> 00:34:05,780
rs,

4029
00:34:05,920 --> 00:34:06,060
rt

4030
00:34:06,120 --> 00:34:06,320
build

4031
00:34:06,320 --> 00:34:06,820
뽑아오면

4032
00:34:07,620 --> 00:34:07,800
원래

4033
00:34:07,800 --> 00:34:08,240
인스터로션

4034
00:34:08,240 --> 00:34:08,620
decode

4035
00:34:08,620 --> 00:34:09,140
스테이지의

4036
00:34:09,140 --> 00:34:09,760
역할은

4037
00:34:10,100 --> 00:34:10,680
rs

4038
00:34:10,680 --> 00:34:11,560
레지스터의

4039
00:34:11,580 --> 00:34:11,680
값

4040
00:34:11,680 --> 00:34:11,980
그리고

4041
00:34:11,980 --> 00:34:12,340
rt

4042
00:34:12,340 --> 00:34:12,820
레지스터의

4043
00:34:12,820 --> 00:34:13,080
값을

4044
00:34:13,080 --> 00:34:13,420
1고는

4045
00:34:13,420 --> 00:34:13,800
거잖아요?

4046
00:34:14,460 --> 00:34:14,580
그

4047
00:34:14,580 --> 00:34:15,220
1고는

4048
00:34:15,220 --> 00:34:15,820
값들은

4049
00:34:15,820 --> 00:34:16,000
또

4050
00:34:16,000 --> 00:34:16,260
그

4051
00:34:16,260 --> 00:34:16,480
다음

4052
00:34:16,480 --> 00:34:17,380
클럭사이클의

4053
00:34:17,600 --> 00:34:17,700
execute

4054
00:34:17,700 --> 00:34:18,160
스테이지가

4055
00:34:18,160 --> 00:34:18,660
필요하겠죠?

4056
00:34:19,620 --> 00:34:19,860
그러면

4057
00:34:19,860 --> 00:34:20,420
그

4058
00:34:20,420 --> 00:34:20,620
다음

4059
00:34:20,620 --> 00:34:21,340
클럭사이클의

4060
00:34:21,340 --> 00:34:21,640
execute

4061
00:34:21,640 --> 00:34:22,080
스테이지의

4062
00:34:22,080 --> 00:34:22,540
input으로

4063
00:34:22,540 --> 00:34:23,060
사용할

4064
00:34:23,060 --> 00:34:23,580
id,

4065
00:34:23,840 --> 00:34:24,100
ex

4066
00:34:24,180 --> 00:34:24,920
레치에다가

4067
00:34:24,920 --> 00:34:25,420
값을

4068
00:34:25,420 --> 00:34:26,000
저장해주는

4069
00:34:26,000 --> 00:34:26,260
겁니다.

4070
00:34:27,340 --> 00:34:27,620
그러면

4071
00:34:27,620 --> 00:34:28,040
그

4072
00:34:28,040 --> 00:34:28,260
다음

4073
00:34:28,260 --> 00:34:29,120
클럭사이클에서

4074
00:34:29,680 --> 00:34:29,780
execute

4075
00:34:29,780 --> 00:34:30,540
스테이지가

4076
00:34:30,920 --> 00:34:31,240
만약

4077
00:34:31,240 --> 00:34:31,520
내가

4078
00:34:31,520 --> 00:34:32,080
add였다.

4079
00:34:32,300 --> 00:34:32,460
그러면

4080
00:34:32,460 --> 00:34:32,800
rs,

4081
00:34:32,920 --> 00:34:33,240
rt

4082
00:34:33,280 --> 00:34:33,800
값이

4083
00:34:33,800 --> 00:34:33,940
지금

4084
00:34:33,940 --> 00:34:34,120
이

4085
00:34:34,120 --> 00:34:34,380
id,

4086
00:34:34,460 --> 00:34:34,780
ex

4087
00:34:34,800 --> 00:34:35,200
레치에

4088
00:34:35,200 --> 00:34:35,760
저장되어

4089
00:34:35,760 --> 00:34:36,000
있는데

4090
00:34:36,500 --> 00:34:36,600
그럼

4091
00:34:36,600 --> 00:34:37,120
저것을

4092
00:34:37,120 --> 00:34:37,680
input으로

4093
00:34:37,680 --> 00:34:38,480
받아서

4094
00:34:38,480 --> 00:34:39,460
2개를

4095
00:34:39,460 --> 00:34:40,220
더해서

4096
00:34:40,220 --> 00:34:41,000
ex,

4097
00:34:41,240 --> 00:34:41,400
mem

4098
00:34:41,400 --> 00:34:42,320
레치에다가

4099
00:34:42,320 --> 00:34:43,280
rs

4100
00:34:43,280 --> 00:34:43,840
더하기

4101
00:34:43,840 --> 00:34:44,300
rt

4102
00:34:44,380 --> 00:34:44,720
값을

4103
00:34:44,720 --> 00:34:45,120
저장을

4104
00:34:45,120 --> 00:34:45,380
해요.

4105
00:34:46,520 --> 00:34:46,740
그럼

4106
00:34:46,740 --> 00:34:47,040
그

4107
00:34:47,040 --> 00:34:47,460
다음

4108
00:34:47,460 --> 00:34:48,160
클럭사이클,

4109
00:34:48,260 --> 00:34:49,880
4번째

4110
00:34:50,360 --> 00:34:50,460
클럭사이클

4111
00:34:50,460 --> 00:34:50,600
때

4112
00:34:50,600 --> 00:34:51,000
메모리

4113
00:34:51,000 --> 00:34:51,320
액세스

4114
00:34:51,320 --> 00:34:51,920
스테이지가

4115
00:34:51,920 --> 00:34:52,560
있는데

4116
00:34:53,120 --> 00:34:53,280
add

4117
00:34:53,280 --> 00:34:53,860
명령어는

4118
00:34:53,860 --> 00:34:54,160
데이터

4119
00:34:54,160 --> 00:34:54,440
메모리를

4120
00:34:54,440 --> 00:34:54,680
접근

4121
00:34:54,680 --> 00:34:54,800
안

4122
00:34:54,800 --> 00:34:55,080
하잖아요?

4123
00:34:56,100 --> 00:34:56,320
그러면

4124
00:34:56,320 --> 00:34:57,300
rs

4125
00:34:57,300 --> 00:34:57,840
더하기

4126
00:34:57,840 --> 00:34:58,140
rt

4127
00:34:58,320 --> 00:34:58,740
값은

4128
00:34:58,900 --> 00:34:59,240
그냥

4129
00:34:59,740 --> 00:34:59,980
그대로

4130
00:34:59,980 --> 00:35:00,540
mem

4131
00:35:00,540 --> 00:35:00,880
write

4132
00:35:00,940 --> 00:35:01,080
back

4133
00:35:01,140 --> 00:35:01,880
레치에다가

4134
00:35:01,880 --> 00:35:02,900
저장을

4135
00:35:02,900 --> 00:35:03,540
해줍니다.

4136
00:35:04,280 --> 00:35:04,480
나는

4137
00:35:04,480 --> 00:35:04,760
지금

4138
00:35:04,760 --> 00:35:05,060
필요

4139
00:35:05,060 --> 00:35:05,520
없는데

4140
00:35:05,520 --> 00:35:06,080
뒤에

4141
00:35:06,080 --> 00:35:06,420
write

4142
00:35:06,420 --> 00:35:06,640
back

4143
00:35:06,740 --> 00:35:07,020
스테이지가

4144
00:35:07,020 --> 00:35:07,360
필요하니까.

4145
00:35:07,940 --> 00:35:08,320
destination

4146
00:35:08,400 --> 00:35:08,980
register를

4147
00:35:08,980 --> 00:35:09,400
쓰려면.

4148
00:35:10,300 --> 00:35:10,400
그러면

4149
00:35:10,400 --> 00:35:11,040
마지막

4150
00:35:11,040 --> 00:35:11,380
write

4151
00:35:11,380 --> 00:35:11,540
back

4152
00:35:11,540 --> 00:35:11,840
스테이지

4153
00:35:11,840 --> 00:35:12,520
5번째

4154
00:35:12,520 --> 00:35:13,120
클럭사이클

4155
00:35:13,120 --> 00:35:13,460
때는

4156
00:35:13,460 --> 00:35:14,060
이

4157
00:35:14,060 --> 00:35:14,500
mem

4158
00:35:14,500 --> 00:35:14,780
write

4159
00:35:14,780 --> 00:35:15,000
back

4160
00:35:15,000 --> 00:35:15,380
레치에

4161
00:35:15,480 --> 00:35:15,840
저장된

4162
00:35:15,840 --> 00:35:16,460
데이터를

4163
00:35:16,460 --> 00:35:17,020
가지고

4164
00:35:17,020 --> 00:35:18,220
destination

4165
00:35:18,360 --> 00:35:19,100
register에다가

4166
00:35:19,100 --> 00:35:19,460
값을

4167
00:35:19,460 --> 00:35:19,960
쓰게

4168
00:35:19,960 --> 00:35:20,460
되는

4169
00:35:20,460 --> 00:35:20,920
겁니다.

4170
00:35:22,260 --> 00:35:22,440
이게

4171
00:35:22,440 --> 00:35:23,060
처음에

4172
00:35:23,060 --> 00:35:23,360
가장

4173
00:35:23,360 --> 00:35:23,800
좀

4174
00:35:23,800 --> 00:35:24,020
이해

4175
00:35:24,020 --> 00:35:24,240
안

4176
00:35:24,240 --> 00:35:24,460
되는

4177
00:35:24,460 --> 00:35:25,210
부분이에요.

4178
00:35:25,820 --> 00:35:25,960
여러분들

4179
00:35:25,960 --> 00:35:26,380
제가

4180
00:35:26,380 --> 00:35:26,780
몇

4181
00:35:26,780 --> 00:35:27,240
년간

4182
00:35:27,400 --> 00:35:27,860
강의를

4183
00:35:27,860 --> 00:35:28,380
해봤을

4184
00:35:28,420 --> 00:35:28,540
때

4185
00:35:28,540 --> 00:35:28,840
항상

4186
00:35:28,840 --> 00:35:29,020
이

4187
00:35:29,080 --> 00:35:29,660
파이프라이팅을

4188
00:35:29,660 --> 00:35:29,800
딱

4189
00:35:29,800 --> 00:35:30,240
넘어갔던

4190
00:35:30,320 --> 00:35:30,460
이

4191
00:35:30,460 --> 00:35:31,000
레치의

4192
00:35:31,000 --> 00:35:31,420
존재가

4193
00:35:31,420 --> 00:35:32,000
등장했을

4194
00:35:32,000 --> 00:35:32,040
때

4195
00:35:32,140 --> 00:35:32,300
되게

4196
00:35:32,300 --> 00:35:32,620
헷갈려

4197
00:35:32,620 --> 00:35:32,720
하시는데

4198
00:35:34,320 --> 00:35:34,760
레치라는

4199
00:35:34,760 --> 00:35:35,200
거의

4200
00:35:35,200 --> 00:35:35,600
역할,

4201
00:35:35,800 --> 00:35:36,000
가장

4202
00:35:36,000 --> 00:35:36,460
근본적인

4203
00:35:36,460 --> 00:35:36,620
역할.

4204
00:35:36,760 --> 00:35:37,120
레치는

4205
00:35:37,120 --> 00:35:37,480
진짜

4206
00:35:37,700 --> 00:35:37,820
그냥

4207
00:35:37,820 --> 00:35:38,280
표현이

4208
00:35:38,280 --> 00:35:38,680
레치인

4209
00:35:38,680 --> 00:35:38,860
거지

4210
00:35:38,860 --> 00:35:39,860
그냥

4211
00:35:39,860 --> 00:35:40,180
말을

4212
00:35:40,180 --> 00:35:40,720
바꾸면

4213
00:35:40,720 --> 00:35:40,940
그냥

4214
00:35:40,940 --> 00:35:41,400
buffer입니다.

4215
00:35:42,160 --> 00:35:42,360
local

4216
00:35:42,360 --> 00:35:42,900
variable이고.

4217
00:35:45,540 --> 00:35:45,700
그럼

4218
00:35:45,700 --> 00:35:46,060
각각

4219
00:35:46,060 --> 00:35:46,340
레치가

4220
00:35:46,360 --> 00:35:46,900
이렇게

4221
00:35:46,900 --> 00:35:47,260
있는데

4222
00:35:47,760 --> 00:35:47,860
그

4223
00:35:47,860 --> 00:35:48,340
레치의

4224
00:35:48,340 --> 00:35:48,920
역할은

4225
00:35:49,220 --> 00:35:49,320
이

4226
00:35:49,320 --> 00:35:49,880
레치와

4227
00:35:49,880 --> 00:35:50,140
그

4228
00:35:50,140 --> 00:35:50,340
다음

4229
00:35:50,340 --> 00:35:50,660
레치

4230
00:35:50,820 --> 00:35:51,120
사이에

4231
00:35:51,120 --> 00:35:51,440
있는

4232
00:35:51,440 --> 00:35:51,920
하드웨어

4233
00:35:51,920 --> 00:35:52,240
구성

4234
00:35:52,240 --> 00:35:52,940
요소들이

4235
00:35:53,440 --> 00:35:53,560
그

4236
00:35:53,560 --> 00:35:53,840
다음

4237
00:35:53,840 --> 00:35:54,620
클럭사이클

4238
00:35:54,700 --> 00:35:54,860
때

4239
00:35:54,860 --> 00:35:55,660
필요한

4240
00:35:55,660 --> 00:35:56,080
모든

4241
00:35:56,080 --> 00:35:56,520
인풋

4242
00:35:56,580 --> 00:35:57,020
데이터를

4243
00:35:57,020 --> 00:35:57,480
저장을

4244
00:35:57,480 --> 00:35:57,820
하는

4245
00:35:57,820 --> 00:35:58,740
역할이라고

4246
00:35:58,740 --> 00:35:59,100
보시면

4247
00:35:59,100 --> 00:35:59,720
됩니다.

4248
00:36:00,420 --> 00:36:00,520
자

4249
00:36:00,520 --> 00:36:00,740
그럼

4250
00:36:00,740 --> 00:36:01,120
모든

4251
00:36:01,120 --> 00:36:01,360
인풋

4252
00:36:01,360 --> 00:36:01,800
데이터라고

4253
00:36:01,800 --> 00:36:01,980
했잖아요.

4254
00:36:02,880 --> 00:36:03,120
방금

4255
00:36:03,120 --> 00:36:03,340
제가

4256
00:36:03,340 --> 00:36:03,580
add

4257
00:36:03,580 --> 00:36:03,980
명령어

4258
00:36:03,980 --> 00:36:04,420
설명을

4259
00:36:04,420 --> 00:36:04,940
드리면서

4260
00:36:04,940 --> 00:36:05,660
저는

4261
00:36:05,660 --> 00:36:06,100
사실

4262
00:36:06,100 --> 00:36:06,560
rs,

4263
00:36:06,720 --> 00:36:07,020
rt

4264
00:36:07,020 --> 00:36:07,380
값의

4265
00:36:07,380 --> 00:36:07,840
흐름만

4266
00:36:07,840 --> 00:36:08,120
설명

4267
00:36:08,120 --> 00:36:08,440
드렸어요.

4268
00:36:09,660 --> 00:36:09,760
그

4269
00:36:09,760 --> 00:36:10,160
레치들

4270
00:36:10,160 --> 00:36:10,400
어떻게

4271
00:36:10,400 --> 00:36:10,680
다워가는가.

4272
00:36:11,620 --> 00:36:11,720
근데

4273
00:36:11,720 --> 00:36:12,180
여러분들

4274
00:36:12,180 --> 00:36:12,580
right

4275
00:36:12,580 --> 00:36:12,720
-back

4276
00:36:12,720 --> 00:36:13,120
stage에

4277
00:36:13,120 --> 00:36:13,380
생각을

4278
00:36:13,380 --> 00:36:13,860
해보면

4279
00:36:13,860 --> 00:36:14,880
사실

4280
00:36:14,880 --> 00:36:15,220
내가

4281
00:36:15,220 --> 00:36:15,820
destination

4282
00:36:15,820 --> 00:36:16,520
register에

4283
00:36:16,520 --> 00:36:16,760
무슨

4284
00:36:16,760 --> 00:36:17,260
값을

4285
00:36:17,260 --> 00:36:17,720
쓸지도

4286
00:36:17,720 --> 00:36:18,500
필요하지만

4287
00:36:19,340 --> 00:36:19,740
어느

4288
00:36:19,740 --> 00:36:20,200
것이

4289
00:36:20,200 --> 00:36:20,740
destination

4290
00:36:20,740 --> 00:36:21,820
register인가

4291
00:36:21,820 --> 00:36:22,260
정보도

4292
00:36:22,260 --> 00:36:22,660
필요하잖아요.

4293
00:36:23,540 --> 00:36:23,780
rd의

4294
00:36:23,820 --> 00:36:24,240
인덱스가

4295
00:36:24,240 --> 00:36:24,580
뭐냐.

4296
00:36:25,440 --> 00:36:25,600
그러면

4297
00:36:25,600 --> 00:36:25,840
그

4298
00:36:25,840 --> 00:36:26,660
rd에

4299
00:36:26,660 --> 00:36:27,020
대한

4300
00:36:27,020 --> 00:36:27,700
인덱스

4301
00:36:27,700 --> 00:36:28,440
번호도

4302
00:36:28,640 --> 00:36:29,420
사실은

4303
00:36:29,640 --> 00:36:29,920
instruction

4304
00:36:29,920 --> 00:36:30,400
decode

4305
00:36:30,400 --> 00:36:31,200
stage에서

4306
00:36:31,200 --> 00:36:31,300
요래,

4307
00:36:32,360 --> 00:36:32,640
요래

4308
00:36:32,640 --> 00:36:33,440
넘어와서

4309
00:36:33,440 --> 00:36:34,000
마지막에

4310
00:36:34,000 --> 00:36:34,260
right

4311
00:36:34,340 --> 00:36:34,520
-back을

4312
00:36:34,520 --> 00:36:34,620
할

4313
00:36:34,620 --> 00:36:34,740
때

4314
00:36:34,740 --> 00:36:35,000
함께

4315
00:36:35,320 --> 00:36:35,420
인풋으로

4316
00:36:35,420 --> 00:36:35,820
들어갑니다.

4317
00:36:36,860 --> 00:36:37,000
즉

4318
00:36:37,000 --> 00:36:37,460
요런

4319
00:36:37,480 --> 00:36:37,740
그

4320
00:36:38,500 --> 00:36:38,700
add

4321
00:36:38,700 --> 00:36:39,260
명령어를

4322
00:36:39,260 --> 00:36:39,640
다섯

4323
00:36:39,640 --> 00:36:39,980
단계로

4324
00:36:39,980 --> 00:36:40,420
나눠서

4325
00:36:40,420 --> 00:36:40,780
실행을

4326
00:36:40,820 --> 00:36:41,260
할텐데

4327
00:36:41,260 --> 00:36:42,220
그

4328
00:36:42,220 --> 00:36:42,760
직전

4329
00:36:42,760 --> 00:36:43,180
직후

4330
00:36:43,180 --> 00:36:43,480
단계

4331
00:36:43,480 --> 00:36:43,800
그리고

4332
00:36:43,800 --> 00:36:44,080
그

4333
00:36:44,080 --> 00:36:44,360
이후

4334
00:36:44,360 --> 00:36:44,760
모든

4335
00:36:44,760 --> 00:36:45,240
단계가

4336
00:36:45,240 --> 00:36:45,680
필요한

4337
00:36:45,700 --> 00:36:45,980
인풋

4338
00:36:45,980 --> 00:36:46,620
데이터들을

4339
00:36:46,620 --> 00:36:47,340
temporarily

4340
00:36:47,340 --> 00:36:48,160
저장해

4341
00:36:48,160 --> 00:36:48,500
놓는

4342
00:36:48,500 --> 00:36:49,240
buffers이

4343
00:36:49,240 --> 00:36:49,520
이

4344
00:36:49,520 --> 00:36:51,220
레치들이다라고

4345
00:36:51,460 --> 00:36:51,560
생각을

4346
00:36:51,560 --> 00:36:52,040
하시면

4347
00:36:52,040 --> 00:36:52,620
되고요.

4348
00:36:53,440 --> 00:36:53,540
자

4349
00:36:53,540 --> 00:36:53,800
그러면

4350
00:36:53,800 --> 00:36:54,100
여기서

4351
00:36:54,100 --> 00:36:54,500
의문을

4352
00:36:54,500 --> 00:36:54,720
가질

4353
00:36:54,720 --> 00:36:54,880
수

4354
00:36:54,880 --> 00:36:55,220
있습니다.

4355
00:36:55,500 --> 00:36:55,600
왜

4356
00:36:55,820 --> 00:36:55,920
레치가

4357
00:36:55,920 --> 00:36:56,170
4개냐.

4358
00:36:57,320 --> 00:36:57,420
우리는

4359
00:36:57,420 --> 00:36:57,720
5

4360
00:36:57,720 --> 00:36:57,940
-stage

4361
00:36:57,940 --> 00:36:58,940
pipeline이고

4362
00:36:59,300 --> 00:36:59,480
그리고

4363
00:36:59,480 --> 00:37:00,000
방금

4364
00:37:00,000 --> 00:37:00,460
레치가

4365
00:37:00,460 --> 00:37:01,160
그

4366
00:37:01,160 --> 00:37:01,620
다음

4367
00:37:01,620 --> 00:37:02,420
직후에

4368
00:37:02,420 --> 00:37:02,880
등장하는

4369
00:37:02,880 --> 00:37:03,160
hardware

4370
00:37:03,160 --> 00:37:04,000
component들이

4371
00:37:04,000 --> 00:37:04,360
필요한

4372
00:37:04,380 --> 00:37:04,620
모든

4373
00:37:04,620 --> 00:37:04,940
인풋

4374
00:37:04,960 --> 00:37:05,340
데이터를

4375
00:37:05,340 --> 00:37:05,840
저장하는

4376
00:37:05,840 --> 00:37:06,790
임시버퍼라면

4377
00:37:07,640 --> 00:37:08,040
인스럽션

4378
00:37:08,040 --> 00:37:08,500
패치를

4379
00:37:08,500 --> 00:37:08,980
위한

4380
00:37:08,980 --> 00:37:09,900
임시버퍼도

4381
00:37:09,900 --> 00:37:10,280
필요하지

4382
00:37:10,280 --> 00:37:10,640
않느냐

4383
00:37:10,640 --> 00:37:10,780
라고

4384
00:37:10,780 --> 00:37:10,940
할

4385
00:37:10,940 --> 00:37:11,020
수

4386
00:37:11,020 --> 00:37:11,320
있어요.

4387
00:37:12,640 --> 00:37:12,740
근데

4388
00:37:12,740 --> 00:37:13,740
인스럽션

4389
00:37:13,740 --> 00:37:14,240
패치의

4390
00:37:14,240 --> 00:37:14,800
임시버퍼

4391
00:37:14,800 --> 00:37:15,220
역할을

4392
00:37:15,220 --> 00:37:15,960
해주는게

4393
00:37:16,780 --> 00:37:17,420
PC

4394
00:37:17,420 --> 00:37:18,400
register입니다.

4395
00:37:19,220 --> 00:37:19,400
여러분들

4396
00:37:19,400 --> 00:37:19,880
인스럽션

4397
00:37:19,920 --> 00:37:21,120
패치의

4398
00:37:21,120 --> 00:37:21,660
실제

4399
00:37:21,660 --> 00:37:22,040
행동을

4400
00:37:22,040 --> 00:37:22,680
생각해보세요.

4401
00:37:23,520 --> 00:37:23,780
인스럽션

4402
00:37:23,780 --> 00:37:24,300
패치는

4403
00:37:24,300 --> 00:37:25,820
현재

4404
00:37:25,820 --> 00:37:26,200
pc

4405
00:37:26,200 --> 00:37:26,940
register에

4406
00:37:26,940 --> 00:37:27,580
저장되어

4407
00:37:27,580 --> 00:37:27,720
있는

4408
00:37:27,720 --> 00:37:28,160
값을

4409
00:37:28,160 --> 00:37:28,640
메모리

4410
00:37:28,640 --> 00:37:29,120
조서로

4411
00:37:29,120 --> 00:37:29,760
삼아서

4412
00:37:29,760 --> 00:37:30,280
그

4413
00:37:30,280 --> 00:37:30,700
메모리

4414
00:37:30,700 --> 00:37:32,260
조서로부터

4415
00:37:32,260 --> 00:37:33,560
4바이트만큼의

4416
00:37:33,900 --> 00:37:34,120
데이터를

4417
00:37:34,120 --> 00:37:34,580
인스럽션

4418
00:37:34,580 --> 00:37:35,260
메모리로부터

4419
00:37:35,420 --> 00:37:36,260
읽어오는게

4420
00:37:36,260 --> 00:37:36,940
인스럽션

4421
00:37:37,180 --> 00:37:37,280
패치의

4422
00:37:37,280 --> 00:37:37,380
역할입니다.

4423
00:37:38,640 --> 00:37:38,800
그러면

4424
00:37:38,800 --> 00:37:39,020
그

4425
00:37:39,020 --> 00:37:39,480
인스럽션

4426
00:37:39,480 --> 00:37:39,840
패치

4427
00:37:39,840 --> 00:37:40,460
스테이지를

4428
00:37:40,460 --> 00:37:40,860
수행을

4429
00:37:40,860 --> 00:37:41,080
하기

4430
00:37:41,080 --> 00:37:41,440
위한

4431
00:37:41,440 --> 00:37:42,080
유일한

4432
00:37:42,280 --> 00:37:42,380
인풋

4433
00:37:42,380 --> 00:37:42,680
값은

4434
00:37:42,680 --> 00:37:43,000
뭐냐면

4435
00:37:43,000 --> 00:37:43,940
pc

4436
00:37:43,980 --> 00:37:44,580
register의

4437
00:37:44,580 --> 00:37:45,000
값이에요.

4438
00:37:45,880 --> 00:37:46,040
근데

4439
00:37:46,040 --> 00:37:46,240
그

4440
00:37:46,240 --> 00:37:46,500
pc

4441
00:37:46,500 --> 00:37:47,260
register는

4442
00:37:47,260 --> 00:37:47,960
이미

4443
00:37:47,960 --> 00:37:48,280
우리가

4444
00:37:48,280 --> 00:37:49,020
싱글사이클

4445
00:37:49,020 --> 00:37:49,440
cpu

4446
00:37:49,440 --> 00:37:49,700
할

4447
00:37:49,700 --> 00:37:50,200
때부터

4448
00:37:50,200 --> 00:37:51,040
저기에

4449
00:37:51,040 --> 00:37:51,220
딱

4450
00:37:51,220 --> 00:37:52,060
박혀있다고

4451
00:37:52,120 --> 00:37:52,740
얘기를

4452
00:37:52,740 --> 00:37:53,160
했잖아요.

4453
00:37:54,000 --> 00:37:54,200
그렇기

4454
00:37:54,200 --> 00:37:54,540
때문에

4455
00:37:54,540 --> 00:37:55,320
이

4456
00:37:55,320 --> 00:37:55,740
pc

4457
00:37:55,740 --> 00:37:56,360
register가

4458
00:37:56,360 --> 00:37:57,860
사실은

4459
00:37:57,980 --> 00:37:58,080
이

4460
00:37:58,080 --> 00:37:58,420
뒤에

4461
00:37:58,420 --> 00:37:58,900
pipeline

4462
00:37:58,900 --> 00:37:59,620
스테이지에

4463
00:37:59,620 --> 00:37:59,980
들어간

4464
00:37:59,980 --> 00:38:00,560
레치와

4465
00:38:00,560 --> 00:38:01,400
유사한

4466
00:38:01,620 --> 00:38:02,080
인스럽션

4467
00:38:02,080 --> 00:38:03,020
패치의

4468
00:38:04,020 --> 00:38:04,460
인풋을

4469
00:38:04,460 --> 00:38:04,740
모두

4470
00:38:04,740 --> 00:38:05,260
저장하고

4471
00:38:05,260 --> 00:38:05,560
있는

4472
00:38:05,560 --> 00:38:06,040
레치

4473
00:38:06,040 --> 00:38:06,400
역할을

4474
00:38:06,480 --> 00:38:06,740
해주는

4475
00:38:06,740 --> 00:38:06,840
겁니다.

4476
00:38:07,780 --> 00:38:08,620
그런데

4477
00:38:09,200 --> 00:38:10,040
문제는

4478
00:38:10,040 --> 00:38:10,500
인스럽션

4479
00:38:10,500 --> 00:38:10,920
패치는

4480
00:38:10,920 --> 00:38:11,280
pc

4481
00:38:11,280 --> 00:38:12,000
register만

4482
00:38:12,000 --> 00:38:12,280
있으면

4483
00:38:12,280 --> 00:38:12,520
돼요.

4484
00:38:12,720 --> 00:38:12,900
저감만

4485
00:38:12,900 --> 00:38:13,300
있으면

4486
00:38:13,300 --> 00:38:13,680
그

4487
00:38:13,700 --> 00:38:13,940
인스럽션

4488
00:38:13,940 --> 00:38:14,180
패치를

4489
00:38:14,300 --> 00:38:14,400
할

4490
00:38:14,400 --> 00:38:14,500
수

4491
00:38:14,500 --> 00:38:14,860
있는데

4492
00:38:14,860 --> 00:38:15,760
그런데

4493
00:38:15,760 --> 00:38:16,200
인스럽션

4494
00:38:16,200 --> 00:38:17,340
decode부터는

4495
00:38:17,340 --> 00:38:17,580
내가

4496
00:38:17,580 --> 00:38:17,980
인스럽션

4497
00:38:17,980 --> 00:38:18,900
메모리로서부터

4498
00:38:19,140 --> 00:38:19,680
4바이트

4499
00:38:19,680 --> 00:38:20,260
값이

4500
00:38:20,260 --> 00:38:20,920
필요하고

4501
00:38:21,380 --> 00:38:21,580
그리고

4502
00:38:21,580 --> 00:38:21,980
execute

4503
00:38:21,980 --> 00:38:22,380
스테이지

4504
00:38:22,380 --> 00:38:22,620
같은

4505
00:38:22,640 --> 00:38:23,080
경우에는

4506
00:38:23,080 --> 00:38:23,820
내가

4507
00:38:23,820 --> 00:38:24,360
alg로

4508
00:38:24,360 --> 00:38:24,620
무슨

4509
00:38:24,900 --> 00:38:25,120
연산을

4510
00:38:25,120 --> 00:38:25,340
해야

4511
00:38:25,700 --> 00:38:25,800
되는지

4512
00:38:25,800 --> 00:38:26,140
그리고

4513
00:38:26,140 --> 00:38:26,660
alg의

4514
00:38:26,660 --> 00:38:26,940
인풋

4515
00:38:26,980 --> 00:38:27,320
값들은

4516
00:38:27,340 --> 00:38:27,740
무엇인지

4517
00:38:27,760 --> 00:38:28,780
srt

4518
00:38:28,860 --> 00:38:29,140
register

4519
00:38:29,240 --> 00:38:29,580
값들은

4520
00:38:29,580 --> 00:38:30,120
무엇인지

4521
00:38:30,780 --> 00:38:30,880
그리고

4522
00:38:30,880 --> 00:38:31,160
만약

4523
00:38:31,180 --> 00:38:31,680
itype

4524
00:38:31,680 --> 00:38:32,200
명령하다

4525
00:38:32,200 --> 00:38:33,000
그러면

4526
00:38:33,000 --> 00:38:33,420
sign

4527
00:38:33,420 --> 00:38:34,160
extend에

4528
00:38:34,160 --> 00:38:34,380
그

4529
00:38:34,380 --> 00:38:34,860
16bit

4530
00:38:34,860 --> 00:38:35,200
immediate

4531
00:38:35,200 --> 00:38:35,640
value

4532
00:38:35,640 --> 00:38:36,000
값은

4533
00:38:36,140 --> 00:38:36,900
무엇인지가

4534
00:38:36,900 --> 00:38:37,480
저기

4535
00:38:37,540 --> 00:38:37,980
레치에다

4536
00:38:37,980 --> 00:38:38,300
저장이

4537
00:38:38,300 --> 00:38:38,660
되어야

4538
00:38:38,660 --> 00:38:38,880
되죠.

4539
00:38:39,360 --> 00:38:39,500
그러면

4540
00:38:39,600 --> 00:38:39,700
그런

4541
00:38:39,700 --> 00:38:40,040
것들은

4542
00:38:40,040 --> 00:38:40,180
다

4543
00:38:40,300 --> 00:38:40,560
저장을

4544
00:38:40,560 --> 00:38:40,960
해서

4545
00:38:40,960 --> 00:38:41,900
불필요하면

4546
00:38:41,900 --> 00:38:42,160
안

4547
00:38:42,260 --> 00:38:42,420
쓰고

4548
00:38:42,420 --> 00:38:43,260
필요하면

4549
00:38:43,260 --> 00:38:43,700
취사

4550
00:38:43,700 --> 00:38:44,240
선택해서

4551
00:38:44,240 --> 00:38:44,660
쓰고

4552
00:38:45,160 --> 00:38:45,260
과정을

4553
00:38:45,260 --> 00:38:45,620
거치는

4554
00:38:45,620 --> 00:38:46,520
거고

4555
00:38:46,580 --> 00:38:46,720
뭐

4556
00:38:46,720 --> 00:38:47,000
등등

4557
00:38:47,000 --> 00:38:47,400
해서

4558
00:38:47,400 --> 00:38:47,800
이래가는

4559
00:38:47,800 --> 00:38:48,040
겁니다.

4560
00:38:48,920 --> 00:38:49,100
그래서

4561
00:38:49,100 --> 00:38:49,260
저

4562
00:38:49,260 --> 00:38:49,760
레치의

4563
00:38:49,760 --> 00:38:51,280
존재로

4564
00:38:51,280 --> 00:38:51,860
인해서

4565
00:38:51,860 --> 00:38:52,260
이제

4566
00:38:52,260 --> 00:38:52,480
이

4567
00:38:52,560 --> 00:38:53,580
pipelining을

4568
00:38:53,680 --> 00:38:53,980
구현을

4569
00:38:53,980 --> 00:38:54,140
하게

4570
00:38:54,140 --> 00:38:54,440
되고

4571
00:38:54,440 --> 00:38:54,900
결국

4572
00:38:54,900 --> 00:38:55,120
저

4573
00:38:55,120 --> 00:38:55,540
레치의

4574
00:38:55,540 --> 00:38:55,900
존재

4575
00:38:55,900 --> 00:38:56,540
우리가

4576
00:38:56,540 --> 00:38:57,460
한

4577
00:38:57,460 --> 00:38:57,980
하드웨어를

4578
00:38:57,980 --> 00:38:58,440
구성하는

4579
00:38:58,440 --> 00:38:58,740
서로

4580
00:38:58,740 --> 00:38:59,040
다른

4581
00:38:59,040 --> 00:38:59,660
하드웨어

4582
00:38:59,660 --> 00:39:00,660
컴포넌트들이

4583
00:39:01,340 --> 00:39:01,520
서로

4584
00:39:01,520 --> 00:39:01,960
다른

4585
00:39:01,960 --> 00:39:02,540
명령의

4586
00:39:02,540 --> 00:39:03,280
컨텍스트를

4587
00:39:03,440 --> 00:39:03,540
갖고

4588
00:39:03,540 --> 00:39:04,320
동시에

4589
00:39:04,320 --> 00:39:04,720
여러

4590
00:39:04,720 --> 00:39:05,280
명령을

4591
00:39:05,280 --> 00:39:05,660
실행하는

4592
00:39:05,660 --> 00:39:06,080
효과를

4593
00:39:06,080 --> 00:39:06,500
내기

4594
00:39:06,500 --> 00:39:06,880
위해서

4595
00:39:06,880 --> 00:39:07,960
필요한

4596
00:39:08,220 --> 00:39:09,440
임시버퍼라고

4597
00:39:09,800 --> 00:39:10,280
생각하시면

4598
00:39:10,280 --> 00:39:10,380
되겠습니다.

4599
00:39:12,580 --> 00:39:12,760
네

4600
00:39:16,100 --> 00:39:16,200
그럼

4601
00:39:16,200 --> 00:39:16,320
또

4602
00:39:16,320 --> 00:39:16,520
다

4603
00:39:16,520 --> 00:39:16,960
들어가요.

4604
00:39:17,300 --> 00:39:17,320
저기.

4605
00:39:19,060 --> 00:39:19,160
그

4606
00:39:19,160 --> 00:39:19,580
레치에

4607
00:39:19,580 --> 00:39:19,780
함께

4608
00:39:19,780 --> 00:39:20,260
화면입니다.

4609
00:39:21,720 --> 00:39:21,880
우리가

4610
00:39:21,880 --> 00:39:22,440
인스럽션

4611
00:39:22,440 --> 00:39:22,860
decode

4612
00:39:22,860 --> 00:39:23,200
스테이지

4613
00:39:23,200 --> 00:39:23,580
지금

4614
00:39:23,580 --> 00:39:23,900
여기

4615
00:39:23,900 --> 00:39:24,280
그림이

4616
00:39:24,280 --> 00:39:24,840
나타나지

4617
00:39:24,840 --> 00:39:25,080
않고

4618
00:39:25,080 --> 00:39:25,300
있는

4619
00:39:25,300 --> 00:39:25,540
것은

4620
00:39:25,540 --> 00:39:25,900
컨트롤

4621
00:39:25,900 --> 00:39:26,440
시그널들이에요.

4622
00:39:27,240 --> 00:39:27,340
근데

4623
00:39:27,340 --> 00:39:27,840
우리가

4624
00:39:27,840 --> 00:39:28,500
싱글사이클

4625
00:39:28,500 --> 00:39:28,800
cpu

4626
00:39:28,800 --> 00:39:29,220
얘기할

4627
00:39:29,220 --> 00:39:29,340
때

4628
00:39:29,560 --> 00:39:29,800
인스럽션

4629
00:39:29,800 --> 00:39:30,260
decode

4630
00:39:30,260 --> 00:39:30,620
스테이지

4631
00:39:30,620 --> 00:39:30,920
내에서

4632
00:39:30,920 --> 00:39:31,280
컨트롤

4633
00:39:31,280 --> 00:39:31,680
시그널이

4634
00:39:31,680 --> 00:39:32,240
만들어진다

4635
00:39:32,240 --> 00:39:32,540
있잖아요.

4636
00:39:33,380 --> 00:39:33,500
그

4637
00:39:33,500 --> 00:39:33,880
컨트롤

4638
00:39:33,880 --> 00:39:34,660
시그널들이

4639
00:39:34,660 --> 00:39:35,000
이

4640
00:39:35,000 --> 00:39:35,580
레치들에

4641
00:39:35,580 --> 00:39:35,820
다

4642
00:39:35,820 --> 00:39:36,240
저장이

4643
00:39:36,240 --> 00:39:36,700
돼서

4644
00:39:36,700 --> 00:39:37,120
넘어갑니다.

4645
00:39:39,200 --> 00:39:39,300
그런

4646
00:39:39,300 --> 00:39:39,640
식으로

4647
00:39:39,980 --> 00:39:40,080
이제

4648
00:39:40,080 --> 00:39:40,660
확장이

4649
00:39:40,660 --> 00:39:41,140
된다

4650
00:39:41,260 --> 00:39:41,360
라고

4651
00:39:41,360 --> 00:39:41,660
하시면

4652
00:39:41,660 --> 00:39:41,900
되요.

4653
00:39:42,120 --> 00:39:42,380
이것이

4654
00:39:42,380 --> 00:39:42,520
일단

4655
00:39:42,520 --> 00:39:42,820
데이란

4656
00:39:42,820 --> 00:39:43,570
패스의

4657
00:39:44,540 --> 00:39:44,640
비전을

4658
00:39:44,640 --> 00:39:45,180
중심으로

4659
00:39:45,580 --> 00:39:45,820
설명을

4660
00:39:45,820 --> 00:39:46,040
드리고

4661
00:39:46,040 --> 00:39:46,280
있는

4662
00:39:46,280 --> 00:39:46,560
것입니다.

4663
00:39:50,970 --> 00:39:51,620
자

4664
00:39:51,860 --> 00:39:51,960
그러면

4665
00:39:51,960 --> 00:39:52,220
일단

4666
00:39:52,220 --> 00:39:52,440
이런

4667
00:39:52,440 --> 00:39:52,680
식으로

4668
00:39:52,680 --> 00:39:52,900
하게

4669
00:39:53,160 --> 00:39:53,260
되는데

4670
00:39:53,260 --> 00:39:53,980
저런

4671
00:39:53,980 --> 00:39:54,320
식으로

4672
00:39:54,320 --> 00:39:55,000
하드웨어

4673
00:39:55,000 --> 00:39:55,440
구성을

4674
00:39:55,440 --> 00:39:56,180
했을

4675
00:39:56,180 --> 00:39:56,360
때

4676
00:39:56,360 --> 00:39:56,640
이제

4677
00:39:56,640 --> 00:39:57,520
예시명령어

4678
00:39:57,520 --> 00:39:58,580
하나를

4679
00:39:58,580 --> 00:39:58,840
좀

4680
00:39:58,840 --> 00:39:59,600
들어드리면서

4681
00:39:59,600 --> 00:39:59,920
얘가

4682
00:39:59,920 --> 00:40:00,180
어떻게

4683
00:40:00,180 --> 00:40:00,920
실행되느냐

4684
00:40:00,920 --> 00:40:01,740
보여드리겠습니다.

4685
00:40:02,900 --> 00:40:03,500
로드워드에요.

4686
00:40:03,900 --> 00:40:04,480
로드워드가

4687
00:40:04,480 --> 00:40:04,800
다섯

4688
00:40:04,800 --> 00:40:05,020
개의

4689
00:40:05,020 --> 00:40:05,280
단계를

4690
00:40:05,280 --> 00:40:05,560
모두

4691
00:40:05,560 --> 00:40:06,160
거치니까

4692
00:40:06,160 --> 00:40:06,540
사실

4693
00:40:06,680 --> 00:40:07,080
설명하기

4694
00:40:07,260 --> 00:40:07,360
되게

4695
00:40:07,360 --> 00:40:08,020
좋은

4696
00:40:08,020 --> 00:40:08,120
명령어입니다.

4697
00:40:09,660 --> 00:40:09,760
자

4698
00:40:09,760 --> 00:40:10,000
그럼

4699
00:40:10,000 --> 00:40:10,580
로드워드를

4700
00:40:10,580 --> 00:40:10,820
하게

4701
00:40:10,820 --> 00:40:11,180
되면

4702
00:40:12,800 --> 00:40:13,580
로드워드는

4703
00:40:13,580 --> 00:40:14,520
일단

4704
00:40:14,520 --> 00:40:16,240
저

4705
00:40:16,240 --> 00:40:16,800
목소리는

4706
00:40:17,360 --> 00:40:17,600
신경쓰지

4707
00:40:17,600 --> 00:40:17,980
마세요.

4708
00:40:18,120 --> 00:40:18,260
제가

4709
00:40:18,300 --> 00:40:18,520
조금

4710
00:40:18,520 --> 00:40:18,780
이따

4711
00:40:18,780 --> 00:40:19,100
설명드릴게요.

4712
00:40:19,900 --> 00:40:20,060
그럼

4713
00:40:20,060 --> 00:40:20,260
이제

4714
00:40:20,260 --> 00:40:21,020
로드워드의

4715
00:40:21,020 --> 00:40:21,500
인스럽션

4716
00:40:21,500 --> 00:40:21,940
배치는

4717
00:40:21,940 --> 00:40:22,380
원래

4718
00:40:22,380 --> 00:40:22,700
우리가

4719
00:40:22,700 --> 00:40:23,340
무엇이냐

4720
00:40:23,340 --> 00:40:24,120
pc

4721
00:40:24,180 --> 00:40:24,860
레지스터의

4722
00:40:25,200 --> 00:40:25,500
값을

4723
00:40:25,940 --> 00:40:26,520
어드레스트로

4724
00:40:26,520 --> 00:40:27,060
받아서

4725
00:40:27,060 --> 00:40:27,660
인스럽션

4726
00:40:27,720 --> 00:40:28,900
메모리로부터

4727
00:40:28,900 --> 00:40:29,720
4바이트

4728
00:40:29,720 --> 00:40:30,120
로드

4729
00:40:30,120 --> 00:40:30,540
명령을

4730
00:40:30,540 --> 00:40:31,300
당겨오는게

4731
00:40:32,000 --> 00:40:32,640
로드워드의

4732
00:40:32,640 --> 00:40:33,300
인스럽션

4733
00:40:33,380 --> 00:40:33,580
배치

4734
00:40:33,580 --> 00:40:33,980
값입니다.

4735
00:40:34,620 --> 00:40:34,780
그러면

4736
00:40:34,780 --> 00:40:34,960
저

4737
00:40:34,960 --> 00:40:35,480
4바이트

4738
00:40:35,480 --> 00:40:36,540
데이터는

4739
00:40:36,660 --> 00:40:36,880
이

4740
00:40:36,880 --> 00:40:37,380
inf

4741
00:40:37,460 --> 00:40:38,040
인스럽션

4742
00:40:38,040 --> 00:40:38,620
배치와

4743
00:40:38,620 --> 00:40:39,160
인스럽션

4744
00:40:39,160 --> 00:40:39,760
decode

4745
00:40:39,760 --> 00:40:40,240
스테이지

4746
00:40:40,240 --> 00:40:40,960
사이에

4747
00:40:40,960 --> 00:40:41,560
배치된

4748
00:40:41,560 --> 00:40:42,060
if

4749
00:40:42,060 --> 00:40:43,080
-id

4750
00:40:43,120 --> 00:40:43,420
라는

4751
00:40:43,420 --> 00:40:44,620
레치에다가

4752
00:40:44,620 --> 00:40:45,140
이

4753
00:40:45,140 --> 00:40:45,800
4바이트

4754
00:40:45,800 --> 00:40:46,100
또는

4755
00:40:46,100 --> 00:40:47,020
32bit의

4756
00:40:47,020 --> 00:40:47,540
명령어가

4757
00:40:47,540 --> 00:40:48,640
납치되게

4758
00:40:48,640 --> 00:40:49,280
됩니다.

4759
00:40:50,300 --> 00:40:50,440
근데

4760
00:40:50,440 --> 00:40:51,000
여기서

4761
00:40:51,020 --> 00:40:51,300
이제

4762
00:40:51,300 --> 00:40:51,600
좀

4763
00:40:51,600 --> 00:40:52,180
묘해지는게

4764
00:40:52,180 --> 00:40:52,580
뭐냐면

4765
00:40:52,580 --> 00:40:53,540
첫번째

4766
00:40:53,540 --> 00:40:54,240
묘해지는거

4767
00:40:54,240 --> 00:40:55,220
우리가

4768
00:40:55,220 --> 00:40:55,760
pc

4769
00:40:55,760 --> 00:40:56,360
에다가

4770
00:40:56,360 --> 00:40:57,180
pc

4771
00:40:57,240 --> 00:40:57,740
플러스

4772
00:40:57,740 --> 00:40:58,240
4를

4773
00:40:58,240 --> 00:40:58,840
계산을

4774
00:40:58,840 --> 00:40:59,100
하는

4775
00:40:59,100 --> 00:40:59,660
행위를

4776
00:41:00,140 --> 00:41:00,440
인스럽션

4777
00:41:00,440 --> 00:41:00,800
배치

4778
00:41:00,800 --> 00:41:01,400
스테이지의

4779
00:41:02,240 --> 00:41:02,340
일부라고

4780
00:41:02,340 --> 00:41:03,240
약간

4781
00:41:03,240 --> 00:41:03,660
그

4782
00:41:03,680 --> 00:41:04,100
명령어

4783
00:41:04,100 --> 00:41:04,660
실행과는

4784
00:41:04,660 --> 00:41:04,820
좀

4785
00:41:05,060 --> 00:41:05,780
상관없는

4786
00:41:06,060 --> 00:41:06,240
auxiliary

4787
00:41:06,240 --> 00:41:06,940
operation

4788
00:41:06,940 --> 00:41:07,240
이라고

4789
00:41:07,240 --> 00:41:07,620
했잖아요.

4790
00:41:08,660 --> 00:41:08,760
저

4791
00:41:08,760 --> 00:41:09,140
pc

4792
00:41:09,140 --> 00:41:09,680
플러스

4793
00:41:09,680 --> 00:41:10,360
4도

4794
00:41:11,320 --> 00:41:11,420
함께

4795
00:41:11,420 --> 00:41:12,400
여기

4796
00:41:12,980 --> 00:41:13,120
매치에

4797
00:41:13,120 --> 00:41:13,500
저장이

4798
00:41:13,500 --> 00:41:14,080
됩니다.

4799
00:41:15,180 --> 00:41:15,280
자

4800
00:41:15,280 --> 00:41:15,720
저게

4801
00:41:15,720 --> 00:41:16,100
저장이

4802
00:41:16,100 --> 00:41:16,380
되는

4803
00:41:16,380 --> 00:41:16,720
이유

4804
00:41:17,720 --> 00:41:18,120
사실

4805
00:41:18,120 --> 00:41:18,840
어

4806
00:41:20,820 --> 00:41:20,960
저게

4807
00:41:20,960 --> 00:41:21,420
pc

4808
00:41:21,480 --> 00:41:21,680
플러스

4809
00:41:21,680 --> 00:41:22,020
4라는

4810
00:41:22,020 --> 00:41:22,220
값은

4811
00:41:24,160 --> 00:41:24,420
브랜치

4812
00:41:24,420 --> 00:41:24,800
명령어

4813
00:41:24,800 --> 00:41:24,980
아니면

4814
00:41:24,980 --> 00:41:25,200
필요

4815
00:41:25,200 --> 00:41:25,500
없어요.

4816
00:41:26,820 --> 00:41:27,140
브랜치

4817
00:41:27,140 --> 00:41:28,360
명령어가

4818
00:41:28,360 --> 00:41:28,900
아니다.

4819
00:41:29,240 --> 00:41:29,400
예를

4820
00:41:29,400 --> 00:41:29,700
들어서

4821
00:41:29,700 --> 00:41:30,240
그러면

4822
00:41:30,240 --> 00:41:30,520
사실

4823
00:41:30,520 --> 00:41:30,780
우리는

4824
00:41:30,780 --> 00:41:31,000
그냥

4825
00:41:31,000 --> 00:41:31,180
pc

4826
00:41:31,180 --> 00:41:31,460
플러스

4827
00:41:31,460 --> 00:41:31,620
4

4828
00:41:31,620 --> 00:41:31,940
하고

4829
00:41:31,940 --> 00:41:32,520
넘어가면

4830
00:41:32,520 --> 00:41:32,780
됩니다.

4831
00:41:33,000 --> 00:41:33,100
그

4832
00:41:33,100 --> 00:41:33,220
다음

4833
00:41:33,220 --> 00:41:33,680
명령어에

4834
00:41:33,680 --> 00:41:33,800
대한

4835
00:41:33,800 --> 00:41:34,120
인스럽션

4836
00:41:34,180 --> 00:41:34,480
배치에

4837
00:41:34,560 --> 00:41:34,700
하면

4838
00:41:34,700 --> 00:41:34,940
돼요.

4839
00:41:35,720 --> 00:41:35,960
근데

4840
00:41:35,960 --> 00:41:36,900
우리는

4841
00:41:36,900 --> 00:41:37,340
4바이트

4842
00:41:37,340 --> 00:41:37,900
당겨왔을

4843
00:41:37,900 --> 00:41:37,940
때

4844
00:41:37,940 --> 00:41:38,180
아직

4845
00:41:38,180 --> 00:41:38,400
제가

4846
00:41:38,400 --> 00:41:38,720
브랜치

4847
00:41:38,720 --> 00:41:39,160
명령어인지

4848
00:41:39,160 --> 00:41:39,500
모르잖아요.

4849
00:41:40,320 --> 00:41:40,520
그리고

4850
00:41:40,520 --> 00:41:41,040
브랜치

4851
00:41:41,120 --> 00:41:41,480
명령어

4852
00:41:41,480 --> 00:41:41,640
다음

4853
00:41:41,640 --> 00:41:42,700
혹여나

4854
00:41:42,800 --> 00:41:43,060
그러면

4855
00:41:43,060 --> 00:41:43,940
메모리

4856
00:41:43,940 --> 00:41:44,380
액세스

4857
00:41:44,380 --> 00:41:44,740
스테이지

4858
00:41:44,740 --> 00:41:45,460
단계에서

4859
00:41:45,460 --> 00:41:46,080
우리는

4860
00:41:46,080 --> 00:41:46,420
pc

4861
00:41:46,420 --> 00:41:46,740
플러스

4862
00:41:46,740 --> 00:41:47,100
4로

4863
00:41:47,100 --> 00:41:47,360
가야

4864
00:41:47,360 --> 00:41:47,760
되느냐

4865
00:41:47,760 --> 00:41:48,100
아니면

4866
00:41:48,100 --> 00:41:48,440
pc

4867
00:41:48,580 --> 00:41:48,820
플러스

4868
00:41:48,960 --> 00:41:49,060
4

4869
00:41:49,060 --> 00:41:49,680
플러스

4870
00:41:50,340 --> 00:41:50,680
이미지

4871
00:41:50,680 --> 00:41:51,080
배리를

4872
00:41:51,080 --> 00:41:51,980
왼쪽으로

4873
00:41:51,980 --> 00:41:53,180
이빛랩쉽탐

4874
00:41:53,200 --> 00:41:53,660
값으로

4875
00:41:53,660 --> 00:41:53,980
가야

4876
00:41:53,980 --> 00:41:54,320
된다.

4877
00:41:54,660 --> 00:41:54,760
두

4878
00:41:54,760 --> 00:41:54,900
개

4879
00:41:54,900 --> 00:41:55,020
중

4880
00:41:55,020 --> 00:41:55,300
하나를

4881
00:41:55,420 --> 00:41:55,820
골라야

4882
00:41:55,820 --> 00:41:56,160
됩니다.

4883
00:41:57,440 --> 00:41:57,640
메모리

4884
00:41:57,640 --> 00:41:58,160
액세스

4885
00:41:58,160 --> 00:41:58,540
스테이지

4886
00:41:58,540 --> 00:41:59,040
단계에서

4887
00:41:59,040 --> 00:41:59,440
필요한

4888
00:41:59,440 --> 00:41:59,800
인풋

4889
00:41:59,800 --> 00:41:59,940
중

4890
00:41:59,940 --> 00:42:00,360
하나가

4891
00:42:00,360 --> 00:42:00,600
pc

4892
00:42:00,600 --> 00:42:00,920
플러스

4893
00:42:00,920 --> 00:42:01,340
4에요.

4894
00:42:02,140 --> 00:42:02,380
그러면

4895
00:42:02,380 --> 00:42:03,180
이

4896
00:42:03,180 --> 00:42:03,860
id

4897
00:42:03,860 --> 00:42:04,520
스테이지도

4898
00:42:04,520 --> 00:42:04,840
필요

4899
00:42:04,840 --> 00:42:05,080
없고

4900
00:42:05,080 --> 00:42:05,480
ex

4901
00:42:05,700 --> 00:42:06,040
스테이지도

4902
00:42:06,040 --> 00:42:06,420
필요

4903
00:42:06,420 --> 00:42:07,260
없지만

4904
00:42:08,180 --> 00:42:08,440
만약에

4905
00:42:08,440 --> 00:42:08,780
현재

4906
00:42:08,780 --> 00:42:09,300
명령어

4907
00:42:09,300 --> 00:42:10,000
브랜치

4908
00:42:10,000 --> 00:42:11,140
명령어라면

4909
00:42:11,140 --> 00:42:11,980
메모리

4910
00:42:11,980 --> 00:42:12,380
액세스

4911
00:42:12,600 --> 00:42:12,740
스테이지

4912
00:42:12,740 --> 00:42:13,220
단계에서

4913
00:42:13,220 --> 00:42:13,720
필요할

4914
00:42:13,720 --> 00:42:14,120
거니까

4915
00:42:15,320 --> 00:42:15,620
인스럽션

4916
00:42:15,820 --> 00:42:15,920
배치

4917
00:42:15,920 --> 00:42:16,540
단계에서

4918
00:42:16,540 --> 00:42:17,140
계산한

4919
00:42:17,140 --> 00:42:17,400
pc

4920
00:42:17,400 --> 00:42:17,760
플러스

4921
00:42:17,760 --> 00:42:18,200
4를

4922
00:42:18,200 --> 00:42:18,680
뒤로

4923
00:42:18,680 --> 00:42:19,080
뒤로

4924
00:42:19,080 --> 00:42:19,420
뒤로

4925
00:42:19,420 --> 00:42:19,720
뒤로

4926
00:42:19,720 --> 00:42:20,120
보내는

4927
00:42:20,120 --> 00:42:20,400
겁니다.

4928
00:42:22,060 --> 00:42:22,160
이제

4929
00:42:22,160 --> 00:42:22,580
여기서

4930
00:42:22,580 --> 00:42:22,800
이제

4931
00:42:22,800 --> 00:42:23,180
여러분들이

4932
00:42:23,380 --> 00:42:23,780
조금씩

4933
00:42:23,960 --> 00:42:24,200
랜치가

4934
00:42:24,380 --> 00:42:24,480
어떤

4935
00:42:24,480 --> 00:42:25,060
역할인지

4936
00:42:25,060 --> 00:42:25,460
그런

4937
00:42:25,600 --> 00:42:25,820
감을

4938
00:42:25,820 --> 00:42:26,020
조금

4939
00:42:26,200 --> 00:42:26,520
잡으실

4940
00:42:26,520 --> 00:42:26,600
수

4941
00:42:26,600 --> 00:42:26,760
있을

4942
00:42:26,760 --> 00:42:26,920
거라

4943
00:42:26,920 --> 00:42:27,520
생각되고

4944
00:42:28,620 --> 00:42:28,860
그리고

4945
00:42:28,860 --> 00:42:29,680
제가

4946
00:42:29,680 --> 00:42:30,020
지금

4947
00:42:30,020 --> 00:42:30,200
이

4948
00:42:30,200 --> 00:42:30,640
mux를

4949
00:42:30,640 --> 00:42:30,900
일단

4950
00:42:30,900 --> 00:42:31,240
쓰라고

4951
00:42:31,240 --> 00:42:31,760
말씀드린

4952
00:42:31,760 --> 00:42:32,040
이유가

4953
00:42:32,040 --> 00:42:32,440
뭐냐면

4954
00:42:34,220 --> 00:42:34,880
이게

4955
00:42:34,960 --> 00:42:35,080
좀

4956
00:42:35,080 --> 00:42:35,420
되게

4957
00:42:35,420 --> 00:42:36,300
설명하면

4958
00:42:36,300 --> 00:42:36,400
또

4959
00:42:36,400 --> 00:42:36,640
약간

4960
00:42:36,640 --> 00:42:37,040
헷갈릴

4961
00:42:37,180 --> 00:42:37,280
수도

4962
00:42:37,280 --> 00:42:37,800
있는데

4963
00:42:40,060 --> 00:42:40,220
우리가

4964
00:42:40,220 --> 00:42:43,220
명령어를

4965
00:42:43,220 --> 00:42:44,340
ifidx,

4966
00:42:44,560 --> 00:42:45,860
ifidx,

4967
00:42:46,340 --> 00:42:47,420
ifid

4968
00:42:47,420 --> 00:42:48,580
이런

4969
00:42:48,580 --> 00:42:48,860
식으로

4970
00:42:48,860 --> 00:42:49,120
쭉쭉

4971
00:42:49,120 --> 00:42:49,640
가잖아요.

4972
00:42:51,040 --> 00:42:51,140
우리가

4973
00:42:51,140 --> 00:42:51,460
이

4974
00:42:51,460 --> 00:42:51,900
if,

4975
00:42:52,100 --> 00:42:52,460
if,

4976
00:42:52,700 --> 00:42:53,000
if,

4977
00:42:53,100 --> 00:42:53,320
얘를

4978
00:42:53,320 --> 00:42:53,560
매

4979
00:42:53,560 --> 00:42:53,860
클러스

4980
00:42:53,880 --> 00:42:54,120
액을

4981
00:42:54,120 --> 00:42:54,680
빰빰빰

4982
00:42:54,680 --> 00:42:55,100
채우고

4983
00:42:55,100 --> 00:42:56,040
싶어요. 사실

4984
00:42:56,860 --> 00:42:57,120
중간에

4985
00:42:57,120 --> 00:42:57,320
물론

4986
00:42:57,320 --> 00:42:57,640
브랜치

4987
00:42:57,640 --> 00:42:57,960
명령어가

4988
00:42:57,960 --> 00:42:58,220
있을

4989
00:42:58,220 --> 00:42:58,420
수도

4990
00:42:58,420 --> 00:42:58,780
있겠지만

4991
00:42:58,780 --> 00:42:59,060
일단

4992
00:42:59,060 --> 00:42:59,640
없다라고

4993
00:42:59,640 --> 00:43:00,000
가정을

4994
00:43:00,000 --> 00:43:00,520
하면

4995
00:43:01,460 --> 00:43:01,660
그러면

4996
00:43:01,660 --> 00:43:03,140
현재

4997
00:43:03,140 --> 00:43:03,560
이

4998
00:43:03,560 --> 00:43:04,060
if를

4999
00:43:04,060 --> 00:43:04,480
땡겨온

5000
00:43:04,480 --> 00:43:04,840
주소가

5001
00:43:04,840 --> 00:43:05,600
10x1000이라고

5002
00:43:05,600 --> 00:43:05,740
칩시다.

5003
00:43:06,300 --> 00:43:06,460
그러면

5004
00:43:06,460 --> 00:43:06,700
그

5005
00:43:06,700 --> 00:43:06,960
다음

5006
00:43:07,140 --> 00:43:07,580
명령어는

5007
00:43:07,580 --> 00:43:08,540
10x1004에

5008
00:43:08,540 --> 00:43:08,720
있을

5009
00:43:08,840 --> 00:43:09,020
거고

5010
00:43:09,020 --> 00:43:09,200
그

5011
00:43:09,200 --> 00:43:09,340
다음

5012
00:43:09,340 --> 00:43:09,820
명령어는

5013
00:43:09,820 --> 00:43:10,840
10x1008에

5014
00:43:10,840 --> 00:43:11,080
있을

5015
00:43:11,080 --> 00:43:11,400
거예요.

5016
00:43:12,060 --> 00:43:12,160
일단

5017
00:43:12,560 --> 00:43:12,660
브랜치

5018
00:43:12,660 --> 00:43:13,100
명령어

5019
00:43:13,100 --> 00:43:13,600
없다라고

5020
00:43:13,600 --> 00:43:14,060
가정하겠습니다.

5021
00:43:15,060 --> 00:43:15,200
그러면

5022
00:43:15,200 --> 00:43:15,580
브랜치

5023
00:43:15,580 --> 00:43:15,980
명령어가

5024
00:43:15,980 --> 00:43:16,420
없으면

5025
00:43:16,940 --> 00:43:17,180
우리가

5026
00:43:17,180 --> 00:43:17,920
이

5027
00:43:17,920 --> 00:43:18,400
인스럽션

5028
00:43:18,400 --> 00:43:18,680
배치

5029
00:43:18,680 --> 00:43:19,440
단계에서

5030
00:43:19,440 --> 00:43:20,620
10x1000이라는

5031
00:43:20,620 --> 00:43:21,280
주소를

5032
00:43:21,280 --> 00:43:21,820
땡겨서

5033
00:43:21,820 --> 00:43:22,380
어드레스를

5034
00:43:22,380 --> 00:43:22,920
써가지고

5035
00:43:22,920 --> 00:43:23,760
10x1000에

5036
00:43:23,760 --> 00:43:24,380
담긴

5037
00:43:24,380 --> 00:43:25,060
4바이트를

5038
00:43:25,060 --> 00:43:25,420
넣었습니다.

5039
00:43:26,700 --> 00:43:26,920
그다음

5040
00:43:26,920 --> 00:43:27,320
클럭

5041
00:43:27,320 --> 00:43:27,880
사이클이

5042
00:43:27,880 --> 00:43:28,220
되기

5043
00:43:28,220 --> 00:43:29,500
위해서는

5044
00:43:29,720 --> 00:43:29,820
그

5045
00:43:29,820 --> 00:43:30,020
다음

5046
00:43:30,020 --> 00:43:30,280
클럭

5047
00:43:30,280 --> 00:43:30,920
사이클의

5048
00:43:30,920 --> 00:43:31,340
이

5049
00:43:31,420 --> 00:43:31,560
두

5050
00:43:31,560 --> 00:43:31,840
번째

5051
00:43:31,840 --> 00:43:32,140
클럭

5052
00:43:32,140 --> 00:43:32,760
사이클의

5053
00:43:33,270 --> 00:43:34,220
10x1004라는

5054
00:43:34,220 --> 00:43:35,260
메모리

5055
00:43:35,260 --> 00:43:35,640
주소에

5056
00:43:35,640 --> 00:43:36,080
저장된

5057
00:43:36,080 --> 00:43:36,620
명령어에

5058
00:43:36,620 --> 00:43:36,800
대한

5059
00:43:36,800 --> 00:43:37,160
인스럽션

5060
00:43:37,220 --> 00:43:37,500
배치를

5061
00:43:37,500 --> 00:43:37,800
하기

5062
00:43:37,800 --> 00:43:38,120
위해서는

5063
00:43:38,780 --> 00:43:38,920
우리가

5064
00:43:38,920 --> 00:43:39,300
PC

5065
00:43:39,300 --> 00:43:39,760
플러스

5066
00:43:39,760 --> 00:43:40,200
4라는

5067
00:43:40,200 --> 00:43:40,600
행위를

5068
00:43:40,600 --> 00:43:41,080
해줘야

5069
00:43:41,080 --> 00:43:41,300
돼요.

5070
00:43:41,800 --> 00:43:41,920
그

5071
00:43:41,960 --> 00:43:42,060
전에

5072
00:43:42,060 --> 00:43:42,320
어떤

5073
00:43:42,320 --> 00:43:42,820
형태로든.

5074
00:43:45,220 --> 00:43:45,420
그리고

5075
00:43:45,420 --> 00:43:46,100
제가

5076
00:43:46,100 --> 00:43:47,220
이전에

5077
00:43:47,460 --> 00:43:47,880
브랜치

5078
00:43:47,880 --> 00:43:48,480
명령으로

5079
00:43:48,480 --> 00:43:49,080
인해서

5080
00:43:49,080 --> 00:43:49,760
메모리

5081
00:43:49,760 --> 00:43:50,460
액세스

5082
00:43:50,460 --> 00:43:51,120
스테이지에서

5083
00:43:51,520 --> 00:43:51,700
PC가

5084
00:43:51,700 --> 00:43:52,160
업데이트

5085
00:43:52,160 --> 00:43:52,480
될

5086
00:43:52,480 --> 00:43:52,700
수

5087
00:43:52,820 --> 00:43:53,660
있다의

5088
00:43:53,680 --> 00:43:55,000
예시로써

5089
00:43:55,000 --> 00:43:55,720
PC

5090
00:43:55,720 --> 00:43:56,400
레지스터의

5091
00:43:56,400 --> 00:43:57,000
업데이트는

5092
00:43:57,000 --> 00:43:57,240
첫

5093
00:43:57,320 --> 00:43:57,480
클럭

5094
00:43:57,480 --> 00:43:57,920
사이클의

5095
00:43:57,920 --> 00:43:58,320
절반,

5096
00:43:58,760 --> 00:43:58,780
아,

5097
00:43:59,140 --> 00:43:59,340
그

5098
00:43:59,340 --> 00:43:59,720
클럭

5099
00:43:59,720 --> 00:44:00,140
사이클의

5100
00:44:00,140 --> 00:44:00,280
첫

5101
00:44:00,280 --> 00:44:00,460
번째

5102
00:44:00,460 --> 00:44:00,780
절반,

5103
00:44:01,240 --> 00:44:01,380
그리고

5104
00:44:01,380 --> 00:44:01,800
인스럽션

5105
00:44:01,860 --> 00:44:02,180
배치가

5106
00:44:02,180 --> 00:44:02,560
실제로

5107
00:44:02,560 --> 00:44:03,160
PC값을

5108
00:44:03,160 --> 00:44:03,560
읽고

5109
00:44:03,560 --> 00:44:04,160
인스럽션

5110
00:44:04,160 --> 00:44:04,360
메모리

5111
00:44:04,360 --> 00:44:04,860
접근하는

5112
00:44:04,860 --> 00:44:05,120
거는

5113
00:44:05,120 --> 00:44:05,380
두

5114
00:44:05,380 --> 00:44:05,600
번째

5115
00:44:05,600 --> 00:44:05,840
클럭

5116
00:44:05,840 --> 00:44:06,780
사이클이라고

5117
00:44:06,780 --> 00:44:07,180
말씀을

5118
00:44:07,180 --> 00:44:07,760
드렸는데

5119
00:44:08,640 --> 00:44:08,860
브랜치

5120
00:44:08,860 --> 00:44:09,320
명령어가

5121
00:44:09,320 --> 00:44:10,080
없더라도

5122
00:44:10,080 --> 00:44:10,680
PC

5123
00:44:10,720 --> 00:44:11,060
플러스

5124
00:44:11,060 --> 00:44:11,280
4,

5125
00:44:11,500 --> 00:44:11,600
PC

5126
00:44:11,600 --> 00:44:11,940
플러스

5127
00:44:11,940 --> 00:44:12,140
4,

5128
00:44:12,300 --> 00:44:12,480
PC

5129
00:44:12,580 --> 00:44:12,820
플러스

5130
00:44:12,920 --> 00:44:13,020
4

5131
00:44:13,020 --> 00:44:13,620
행위를

5132
00:44:13,620 --> 00:44:14,240
누군가

5133
00:44:14,240 --> 00:44:14,840
해줘야

5134
00:44:14,840 --> 00:44:14,940
됩니다.

5135
00:44:16,660 --> 00:44:16,760
그게

5136
00:44:16,760 --> 00:44:17,500
인스럽션

5137
00:44:17,560 --> 00:44:18,480
배치의

5138
00:44:18,980 --> 00:44:19,080
첫

5139
00:44:19,080 --> 00:44:19,400
번째

5140
00:44:19,400 --> 00:44:19,940
절반

5141
00:44:19,940 --> 00:44:20,220
클럭

5142
00:44:20,320 --> 00:44:20,640
사이클

5143
00:44:20,740 --> 00:44:20,860
때

5144
00:44:20,860 --> 00:44:21,220
일어나요.

5145
00:44:22,400 --> 00:44:22,600
그러면

5146
00:44:22,600 --> 00:44:23,120
인스럽션

5147
00:44:23,120 --> 00:44:23,580
배치가

5148
00:44:23,580 --> 00:44:23,840
딱

5149
00:44:23,840 --> 00:44:24,240
0에서

5150
00:44:24,240 --> 00:44:24,640
1로

5151
00:44:24,640 --> 00:44:25,220
튀었을

5152
00:44:25,220 --> 00:44:25,340
때,

5153
00:44:25,580 --> 00:44:25,760
그리고

5154
00:44:25,760 --> 00:44:26,240
1에서

5155
00:44:26,240 --> 00:44:26,660
0으로

5156
00:44:26,660 --> 00:44:27,340
줄어들었다가

5157
00:44:27,340 --> 00:44:27,640
다시

5158
00:44:27,720 --> 00:44:28,060
0에서

5159
00:44:28,060 --> 00:44:28,360
1로

5160
00:44:28,720 --> 00:44:28,820
튀면서

5161
00:44:28,820 --> 00:44:29,260
이게

5162
00:44:29,260 --> 00:44:29,800
하나의

5163
00:44:29,880 --> 00:44:30,000
클럭

5164
00:44:30,080 --> 00:44:30,460
사이클이

5165
00:44:30,520 --> 00:44:30,620
되게

5166
00:44:30,620 --> 00:44:30,820
될

5167
00:44:30,820 --> 00:44:31,020
건데

5168
00:44:32,420 --> 00:44:32,960
PC값을

5169
00:44:32,960 --> 00:44:33,480
읽고

5170
00:44:33,480 --> 00:44:34,100
인스럽션

5171
00:44:34,100 --> 00:44:34,400
메모리

5172
00:44:34,400 --> 00:44:35,080
접근하고

5173
00:44:35,080 --> 00:44:35,740
4바이트

5174
00:44:35,800 --> 00:44:36,120
읽는

5175
00:44:36,120 --> 00:44:36,300
거는

5176
00:44:36,300 --> 00:44:36,540
두

5177
00:44:36,540 --> 00:44:36,800
번째

5178
00:44:36,800 --> 00:44:37,120
클럭

5179
00:44:37,200 --> 00:44:37,840
사이클이라고

5180
00:44:37,840 --> 00:44:38,220
말씀을

5181
00:44:38,220 --> 00:44:38,440
드렸습니다.

5182
00:44:39,840 --> 00:44:40,020
그러면

5183
00:44:40,020 --> 00:44:40,340
첫

5184
00:44:40,340 --> 00:44:40,540
번째

5185
00:44:40,540 --> 00:44:40,840
클럭

5186
00:44:40,840 --> 00:44:41,760
사이클이

5187
00:44:41,760 --> 00:44:42,160
비네요?

5188
00:44:43,140 --> 00:44:43,240
PC

5189
00:44:43,240 --> 00:44:43,600
플러스

5190
00:44:43,600 --> 00:44:43,920
4를

5191
00:44:43,920 --> 00:44:44,280
하면

5192
00:44:44,280 --> 00:44:44,640
뭔가

5193
00:44:44,640 --> 00:44:44,980
딱

5194
00:44:44,980 --> 00:44:45,580
좋겠죠?

5195
00:44:45,860 --> 00:44:46,280
위치만.

5196
00:44:47,360 --> 00:44:47,600
그래서

5197
00:44:47,600 --> 00:44:48,220
현재

5198
00:44:48,220 --> 00:44:48,940
PC값을

5199
00:44:48,940 --> 00:44:49,300
가지고

5200
00:44:49,300 --> 00:44:50,040
add를

5201
00:44:50,040 --> 00:44:50,420
해가지고

5202
00:44:50,420 --> 00:44:50,780
PC

5203
00:44:50,960 --> 00:44:51,220
플러스

5204
00:44:51,340 --> 00:44:51,640
4를

5205
00:44:51,640 --> 00:44:51,860
하는

5206
00:44:52,000 --> 00:44:52,200
거를

5207
00:44:52,200 --> 00:44:52,420
이

5208
00:44:52,540 --> 00:44:52,640
첫

5209
00:44:52,640 --> 00:44:52,840
번째

5210
00:44:52,840 --> 00:44:53,140
클럭

5211
00:44:53,180 --> 00:44:53,740
사이클에

5212
00:44:53,740 --> 00:44:53,840
합니다.

5213
00:44:55,440 --> 00:44:55,660
그러면

5214
00:44:55,660 --> 00:44:56,160
이제

5215
00:44:56,160 --> 00:44:56,600
여기서

5216
00:44:56,600 --> 00:44:56,960
살짝

5217
00:44:56,960 --> 00:44:57,280
헷갈릴

5218
00:44:57,280 --> 00:44:57,400
수

5219
00:44:57,400 --> 00:44:57,540
있는

5220
00:44:57,540 --> 00:44:57,780
거

5221
00:44:57,780 --> 00:44:57,880
하나.

5222
00:44:58,480 --> 00:44:58,580
아니,

5223
00:44:59,380 --> 00:45:00,280
0x1000에

5224
00:45:00,280 --> 00:45:00,460
대한

5225
00:45:00,460 --> 00:45:01,060
명령어에

5226
00:45:01,060 --> 00:45:01,440
대해서

5227
00:45:01,440 --> 00:45:02,060
인스럽션

5228
00:45:02,060 --> 00:45:02,500
배치가

5229
00:45:02,500 --> 00:45:03,180
끝날

5230
00:45:03,180 --> 00:45:03,440
때

5231
00:45:03,440 --> 00:45:04,140
사실

5232
00:45:04,540 --> 00:45:04,640
PC

5233
00:45:04,640 --> 00:45:05,200
밸류가

5234
00:45:05,200 --> 00:45:06,200
0x1004로

5235
00:45:06,200 --> 00:45:07,300
바뀌어줘야

5236
00:45:07,760 --> 00:45:08,140
세상이

5237
00:45:08,140 --> 00:45:08,640
깔끔한

5238
00:45:08,640 --> 00:45:08,700
거

5239
00:45:08,700 --> 00:45:09,240
아니냐고

5240
00:45:09,260 --> 00:45:09,520
하실

5241
00:45:09,520 --> 00:45:09,640
수

5242
00:45:09,640 --> 00:45:09,960
있어요.

5243
00:45:10,740 --> 00:45:10,920
왜냐하면

5244
00:45:10,920 --> 00:45:11,220
사실

5245
00:45:11,220 --> 00:45:11,480
이미

5246
00:45:11,480 --> 00:45:11,700
우리

5247
00:45:11,700 --> 00:45:12,440
0x1000에

5248
00:45:12,440 --> 00:45:12,580
대한

5249
00:45:12,580 --> 00:45:12,960
명령어

5250
00:45:12,960 --> 00:45:13,260
인스럽션

5251
00:45:13,260 --> 00:45:13,520
배치

5252
00:45:13,640 --> 00:45:14,120
끝났으면

5253
00:45:14,120 --> 00:45:15,140
0x1000에

5254
00:45:15,140 --> 00:45:15,400
대해서

5255
00:45:15,400 --> 00:45:15,940
인스럽션

5256
00:45:15,940 --> 00:45:16,160
명령

5257
00:45:16,160 --> 00:45:16,480
배치

5258
00:45:16,580 --> 00:45:17,180
끝났으니까

5259
00:45:17,840 --> 00:45:17,940
PC

5260
00:45:17,940 --> 00:45:18,860
레지스터가

5261
00:45:19,100 --> 00:45:19,260
애초에

5262
00:45:19,260 --> 00:45:20,360
0x1004로

5263
00:45:20,360 --> 00:45:21,280
바뀌어있는

5264
00:45:21,280 --> 00:45:21,540
게

5265
00:45:21,540 --> 00:45:22,720
상식적으로

5266
00:45:23,060 --> 00:45:23,160
맞지

5267
00:45:23,160 --> 00:45:24,140
않냐라고

5268
00:45:24,140 --> 00:45:24,480
생각을

5269
00:45:24,480 --> 00:45:24,760
하실

5270
00:45:24,760 --> 00:45:24,880
수

5271
00:45:24,880 --> 00:45:25,220
있습니다.

5272
00:45:26,020 --> 00:45:26,240
그런데

5273
00:45:26,240 --> 00:45:26,680
우리가

5274
00:45:26,680 --> 00:45:27,100
지금

5275
00:45:27,100 --> 00:45:27,400
이

5276
00:45:27,400 --> 00:45:28,140
교과목에서

5277
00:45:28,140 --> 00:45:28,380
쭉

5278
00:45:28,560 --> 00:45:28,680
얘기를

5279
00:45:28,680 --> 00:45:28,920
할

5280
00:45:29,020 --> 00:45:29,200
때

5281
00:45:29,840 --> 00:45:30,200
모든

5282
00:45:30,200 --> 00:45:30,600
라인

5283
00:45:30,600 --> 00:45:31,600
오퍼레이션은

5284
00:45:31,800 --> 00:45:32,100
무조건

5285
00:45:32,540 --> 00:45:32,660
첫

5286
00:45:32,660 --> 00:45:32,880
번째

5287
00:45:32,880 --> 00:45:33,320
클럭

5288
00:45:33,320 --> 00:45:33,740
사이클

5289
00:45:33,880 --> 00:45:34,120
내에서

5290
00:45:34,120 --> 00:45:34,960
일어나도록

5291
00:45:34,960 --> 00:45:36,120
강제하겠다는

5292
00:45:36,480 --> 00:45:36,820
조건을

5293
00:45:36,820 --> 00:45:37,220
걸었어요.

5294
00:45:38,120 --> 00:45:38,340
그러면

5295
00:45:38,340 --> 00:45:38,880
이

5296
00:45:38,880 --> 00:45:40,400
0x1000에

5297
00:45:40,400 --> 00:45:40,900
담겨있는

5298
00:45:40,920 --> 00:45:41,420
명령어에

5299
00:45:41,420 --> 00:45:41,720
대해서

5300
00:45:41,720 --> 00:45:42,180
인스럽션

5301
00:45:42,180 --> 00:45:42,440
배치

5302
00:45:42,440 --> 00:45:43,140
스테이지는

5303
00:45:43,520 --> 00:45:43,900
후반

5304
00:45:43,900 --> 00:45:44,520
절반에서

5305
00:45:44,680 --> 00:45:45,000
일어났기

5306
00:45:45,000 --> 00:45:45,360
때문에

5307
00:45:47,180 --> 00:45:47,400
이미

5308
00:45:47,400 --> 00:45:48,420
후반부에

5309
00:45:48,420 --> 00:45:48,880
클럭

5310
00:45:48,880 --> 00:45:49,280
사이클

5311
00:45:49,280 --> 00:45:49,540
내가

5312
00:45:49,540 --> 00:45:50,180
끝났으면

5313
00:45:50,180 --> 00:45:50,440
한

5314
00:45:50,440 --> 00:45:50,600
클럭

5315
00:45:50,600 --> 00:45:50,960
사이클이

5316
00:45:50,960 --> 00:45:51,060
끝나버립니다.

5317
00:45:52,720 --> 00:45:52,920
그러면

5318
00:45:52,920 --> 00:45:53,500
후반

5319
00:45:53,500 --> 00:45:53,720
클럭

5320
00:45:53,720 --> 00:45:54,100
사이클

5321
00:45:54,100 --> 00:45:54,340
내에

5322
00:45:54,340 --> 00:45:54,620
그

5323
00:45:54,620 --> 00:45:55,060
뒤에

5324
00:45:55,060 --> 00:45:55,300
또

5325
00:45:55,300 --> 00:45:55,920
초반

5326
00:45:55,920 --> 00:45:56,260
절반

5327
00:45:56,260 --> 00:45:56,500
클럭

5328
00:45:56,500 --> 00:45:56,900
사이클이

5329
00:45:56,900 --> 00:45:57,320
있었다면

5330
00:45:57,320 --> 00:45:57,960
좋았겠지만

5331
00:45:57,960 --> 00:45:59,400
그거는

5332
00:45:59,760 --> 00:45:59,880
직전

5333
00:45:59,880 --> 00:46:00,460
명령어의

5334
00:46:00,460 --> 00:46:01,020
IF에

5335
00:46:01,020 --> 00:46:01,420
해당하는

5336
00:46:01,420 --> 00:46:01,620
한

5337
00:46:01,680 --> 00:46:01,800
클럭

5338
00:46:01,980 --> 00:46:02,080
사이클

5339
00:46:02,080 --> 00:46:02,420
내에서는

5340
00:46:02,540 --> 00:46:02,640
하지

5341
00:46:02,640 --> 00:46:03,200
못하니까

5342
00:46:04,340 --> 00:46:04,540
그러면

5343
00:46:04,540 --> 00:46:05,400
직전

5344
00:46:05,400 --> 00:46:06,120
IF는

5345
00:46:06,120 --> 00:46:06,840
한

5346
00:46:06,900 --> 00:46:07,020
클럭

5347
00:46:07,020 --> 00:46:07,320
사이클

5348
00:46:07,560 --> 00:46:07,660
내에서

5349
00:46:07,660 --> 00:46:08,920
이렇게

5350
00:46:08,920 --> 00:46:09,140
두

5351
00:46:09,140 --> 00:46:09,380
클럭

5352
00:46:09,380 --> 00:46:09,820
사이클이

5353
00:46:09,820 --> 00:46:10,000
있다

5354
00:46:10,160 --> 00:46:10,260
칠

5355
00:46:10,260 --> 00:46:10,480
때

5356
00:46:10,480 --> 00:46:10,940
이렇게

5357
00:46:11,120 --> 00:46:11,220
하나

5358
00:46:11,220 --> 00:46:11,600
이렇게

5359
00:46:11,600 --> 00:46:11,860
하나

5360
00:46:11,860 --> 00:46:12,200
있다

5361
00:46:12,400 --> 00:46:12,500
칠

5362
00:46:12,500 --> 00:46:12,760
때

5363
00:46:12,760 --> 00:46:14,340
0x1000에

5364
00:46:14,340 --> 00:46:14,780
대한

5365
00:46:14,780 --> 00:46:15,940
IF는

5366
00:46:15,940 --> 00:46:16,320
이때

5367
00:46:16,320 --> 00:46:16,460
하고

5368
00:46:16,660 --> 00:46:17,820
그러면

5369
00:46:17,820 --> 00:46:18,860
0x1000을

5370
00:46:18,860 --> 00:46:19,900
0x1004로

5371
00:46:19,900 --> 00:46:20,340
플러스

5372
00:46:20,460 --> 00:46:20,620
4

5373
00:46:20,620 --> 00:46:21,220
하는게

5374
00:46:21,220 --> 00:46:21,880
이때

5375
00:46:21,880 --> 00:46:22,660
하고

5376
00:46:23,500 --> 00:46:23,600
그리고

5377
00:46:23,600 --> 00:46:24,340
여기서는

5378
00:46:24,340 --> 00:46:26,260
0x1004의

5379
00:46:26,260 --> 00:46:26,700
명령에

5380
00:46:26,700 --> 00:46:27,080
담긴

5381
00:46:27,080 --> 00:46:27,680
IF에

5382
00:46:27,680 --> 00:46:27,920
대해서

5383
00:46:28,340 --> 00:46:28,440
하게

5384
00:46:28,440 --> 00:46:28,660
되는

5385
00:46:29,240 --> 00:46:29,340
즉

5386
00:46:29,340 --> 00:46:29,900
IF가

5387
00:46:29,900 --> 00:46:30,140
어찌

5388
00:46:30,260 --> 00:46:30,360
보면

5389
00:46:31,000 --> 00:46:31,100
살짝은

5390
00:46:31,100 --> 00:46:31,940
어긋나게

5391
00:46:31,940 --> 00:46:32,400
좀

5392
00:46:32,400 --> 00:46:32,740
배치가

5393
00:46:32,740 --> 00:46:32,980
되어

5394
00:46:32,980 --> 00:46:33,160
있는

5395
00:46:33,160 --> 00:46:33,540
것이다.

5396
00:46:35,560 --> 00:46:35,660
그러면

5397
00:46:35,660 --> 00:46:35,960
이

5398
00:46:36,000 --> 00:46:36,200
클럭

5399
00:46:36,200 --> 00:46:36,540
사이클이

5400
00:46:36,540 --> 00:46:36,980
끝났을

5401
00:46:36,980 --> 00:46:37,180
때는

5402
00:46:37,440 --> 00:46:37,540
PC

5403
00:46:37,540 --> 00:46:38,040
레지스턴

5404
00:46:38,040 --> 00:46:38,440
여전히

5405
00:46:38,440 --> 00:46:39,240
0x1000입니다.

5406
00:46:40,200 --> 00:46:40,840
그렇지만

5407
00:46:41,410 --> 00:46:42,460
0x1004에

5408
00:46:42,480 --> 00:46:42,800
대해서

5409
00:46:42,800 --> 00:46:43,220
인서트

5410
00:46:43,220 --> 00:46:43,640
패치를

5411
00:46:43,640 --> 00:46:44,340
수행하기

5412
00:46:44,340 --> 00:46:44,980
위해서

5413
00:46:44,980 --> 00:46:45,880
인서트

5414
00:46:45,880 --> 00:46:46,420
패치의

5415
00:46:46,420 --> 00:46:46,640
첫

5416
00:46:46,640 --> 00:46:46,880
하브

5417
00:46:46,980 --> 00:46:47,100
클럭

5418
00:46:47,100 --> 00:46:47,500
사이클

5419
00:46:47,500 --> 00:46:47,860
내에

5420
00:46:47,860 --> 00:46:48,460
PC

5421
00:46:48,560 --> 00:46:48,820
값을

5422
00:46:48,820 --> 00:46:49,060
PC

5423
00:46:49,240 --> 00:46:49,460
플러스

5424
00:46:49,580 --> 00:46:50,140
4로

5425
00:46:50,140 --> 00:46:50,400
하는

5426
00:46:50,400 --> 00:46:50,920
행위를

5427
00:46:50,920 --> 00:46:51,800
첫

5428
00:46:51,800 --> 00:46:52,200
하브

5429
00:46:52,220 --> 00:46:52,360
클럭

5430
00:46:52,360 --> 00:46:52,720
사이클에

5431
00:46:52,720 --> 00:46:53,060
해요.

5432
00:46:53,820 --> 00:46:53,980
그래

5433
00:46:53,980 --> 00:46:54,420
놓고

5434
00:46:54,420 --> 00:46:54,680
그럼

5435
00:46:54,680 --> 00:46:54,900
PC

5436
00:46:54,900 --> 00:46:55,180
값이

5437
00:46:55,180 --> 00:46:56,100
0x1004로

5438
00:46:56,100 --> 00:46:56,520
바뀌어

5439
00:46:56,520 --> 00:46:56,780
있을

5440
00:46:56,780 --> 00:46:57,100
테니

5441
00:46:57,100 --> 00:46:57,300
그

5442
00:46:57,320 --> 00:46:57,560
예를

5443
00:46:57,560 --> 00:46:58,020
가지고

5444
00:46:58,020 --> 00:46:58,680
실제로

5445
00:46:58,680 --> 00:46:59,720
0x1004에

5446
00:46:59,720 --> 00:46:59,860
대한

5447
00:47:00,100 --> 00:47:00,300
명령에

5448
00:47:00,300 --> 00:47:00,620
대한

5449
00:47:00,620 --> 00:47:01,120
인서트

5450
00:47:01,120 --> 00:47:01,580
패치를

5451
00:47:01,580 --> 00:47:02,040
한다.

5452
00:47:02,540 --> 00:47:02,800
이렇게

5453
00:47:02,800 --> 00:47:03,400
생각하시면

5454
00:47:03,400 --> 00:47:04,100
됩니다.

5455
00:47:05,200 --> 00:47:05,720
그래서 이게

5456
00:47:05,720 --> 00:47:06,500
살짝은

5457
00:47:06,500 --> 00:47:07,060
헷갈리실

5458
00:47:07,060 --> 00:47:07,140
수

5459
00:47:07,140 --> 00:47:07,300
있는

5460
00:47:07,500 --> 00:47:08,140
개념이라서

5461
00:47:08,420 --> 00:47:08,580
일부러

5462
00:47:08,580 --> 00:47:08,780
좀

5463
00:47:08,780 --> 00:47:09,000
미리

5464
00:47:09,000 --> 00:47:09,400
말씀을

5465
00:47:09,400 --> 00:47:09,660
드려야

5466
00:47:09,660 --> 00:47:09,900
합니다.

5467
00:47:10,400 --> 00:47:10,500
자

5468
00:47:10,500 --> 00:47:10,620
이제

5469
00:47:10,620 --> 00:47:11,000
브랜치

5470
00:47:11,000 --> 00:47:11,380
들어오면

5471
00:47:11,380 --> 00:47:12,100
복잡해지는데

5472
00:47:12,100 --> 00:47:12,760
그거는

5473
00:47:12,760 --> 00:47:12,960
이제

5474
00:47:13,080 --> 00:47:13,180
뒤에

5475
00:47:13,180 --> 00:47:13,520
브랜치

5476
00:47:13,680 --> 00:47:13,780
명령

5477
00:47:13,780 --> 00:47:14,100
나올

5478
00:47:14,100 --> 00:47:14,300
때

5479
00:47:14,300 --> 00:47:14,680
얘기를

5480
00:47:14,680 --> 00:47:14,960
할

5481
00:47:14,960 --> 00:47:15,460
거고

5482
00:47:15,460 --> 00:47:16,280
10분

5483
00:47:16,420 --> 00:47:16,620
쉬고

5484
00:47:16,620 --> 00:47:16,960
이어서

5485
00:47:16,960 --> 00:47:17,340
하겠습니다.

5486
00:47:18,940 --> 00:47:19,240
인서트

5487
00:47:19,240 --> 00:47:19,800
패치

5488
00:47:19,800 --> 00:47:20,360
앞에서

5489
00:47:20,360 --> 00:47:20,980
저걸

5490
00:47:20,980 --> 00:47:21,080
얻습니다.

5491
00:47:22,220 --> 00:47:22,340
근데

5492
00:47:22,340 --> 00:47:22,520
저

5493
00:47:22,520 --> 00:47:23,080
관련해서

5494
00:47:23,080 --> 00:47:23,420
아까

5495
00:47:23,420 --> 00:47:23,920
쉬는

5496
00:47:23,920 --> 00:47:24,260
시간에

5497
00:47:24,260 --> 00:47:24,620
질문이

5498
00:47:24,620 --> 00:47:24,860
2개

5499
00:47:24,860 --> 00:47:25,360
나왔는데

5500
00:47:25,360 --> 00:47:25,600
그게

5501
00:47:25,600 --> 00:47:25,840
좋은

5502
00:47:25,840 --> 00:47:26,460
질문들이라

5503
00:47:26,460 --> 00:47:27,200
여러분들께도

5504
00:47:27,200 --> 00:47:27,520
원을

5505
00:47:27,520 --> 00:47:27,800
쉐어를

5506
00:47:27,800 --> 00:47:28,000
좀

5507
00:47:28,000 --> 00:47:28,340
드리려

5508
00:47:29,920 --> 00:47:30,080
인서트

5509
00:47:30,080 --> 00:47:30,620
패치의

5510
00:47:30,620 --> 00:47:30,860
첫

5511
00:47:30,860 --> 00:47:31,400
절반

5512
00:47:31,400 --> 00:47:31,720
클럭

5513
00:47:31,720 --> 00:47:32,040
사이클

5514
00:47:32,040 --> 00:47:32,240
동안

5515
00:47:32,240 --> 00:47:32,560
우리가

5516
00:47:32,560 --> 00:47:32,780
PC

5517
00:47:32,780 --> 00:47:33,060
플러스

5518
00:47:33,060 --> 00:47:33,300
4를

5519
00:47:33,300 --> 00:47:33,860
해버리잖아요.

5520
00:47:34,720 --> 00:47:34,880
근데

5521
00:47:34,880 --> 00:47:35,120
우리

5522
00:47:35,120 --> 00:47:35,660
프로그램의

5523
00:47:35,660 --> 00:47:35,920
첫

5524
00:47:35,920 --> 00:47:36,600
명령어는

5525
00:47:36,600 --> 00:47:37,540
0x1000이라는

5526
00:47:37,540 --> 00:47:37,980
주소에

5527
00:47:37,980 --> 00:47:38,380
저장되어

5528
00:47:38,380 --> 00:47:38,640
있다고

5529
00:47:38,640 --> 00:47:39,060
칩시다.

5530
00:47:39,640 --> 00:47:39,780
그러면

5531
00:47:39,780 --> 00:47:40,720
0x1000이라고

5532
00:47:40,720 --> 00:47:41,240
PC를

5533
00:47:41,240 --> 00:47:41,560
처음에

5534
00:47:41,560 --> 00:47:42,300
설정해버리면

5535
00:47:42,300 --> 00:47:43,600
0x1004부터

5536
00:47:43,600 --> 00:47:44,020
변경합니다.

5537
00:47:44,380 --> 00:47:44,680
변경을.

5538
00:47:45,120 --> 00:47:45,520
0x1000을

5539
00:47:45,520 --> 00:47:45,800
스킵해요.

5540
00:47:46,780 --> 00:47:46,900
그러면

5541
00:47:46,900 --> 00:47:47,160
우린

5542
00:47:47,160 --> 00:47:47,400
어떻게

5543
00:47:47,420 --> 00:47:47,780
하느냐

5544
00:47:47,780 --> 00:47:48,100
하도

5545
00:47:48,100 --> 00:47:48,440
여적으로

5546
00:47:48,440 --> 00:47:51,240
0x10024라는

5547
00:47:51,240 --> 00:47:51,680
숫자를

5548
00:47:51,680 --> 00:47:52,040
저

5549
00:47:52,040 --> 00:47:52,380
맨

5550
00:47:52,380 --> 00:47:52,560
처음

5551
00:47:52,560 --> 00:47:52,820
PC

5552
00:47:52,920 --> 00:47:53,220
레이스에

5553
00:47:53,220 --> 00:47:53,500
넣어둡니다.

5554
00:47:54,300 --> 00:47:54,560
그러면

5555
00:47:54,620 --> 00:47:55,560
0x10024

5556
00:47:55,560 --> 00:47:55,840
하면

5557
00:47:55,840 --> 00:47:57,020
999C가

5558
00:47:57,020 --> 00:47:57,220
나오거든요.

5559
00:47:57,700 --> 00:47:58,480
0x99C.

5560
00:47:59,400 --> 00:47:59,620
그러면

5561
00:47:59,620 --> 00:48:01,060
0x99C에다가

5562
00:48:01,060 --> 00:48:01,460
플러스

5563
00:48:01,460 --> 00:48:01,700
4

5564
00:48:01,700 --> 00:48:01,940
하면

5565
00:48:01,940 --> 00:48:02,680
0x1000이

5566
00:48:02,680 --> 00:48:02,880
딱

5567
00:48:02,880 --> 00:48:03,240
튀어나와죠.

5568
00:48:04,120 --> 00:48:04,220
그래서

5569
00:48:04,220 --> 00:48:05,140
일부러

5570
00:48:05,240 --> 00:48:05,600
PC

5571
00:48:05,600 --> 00:48:06,480
-4를

5572
00:48:06,480 --> 00:48:07,040
넣게

5573
00:48:07,040 --> 00:48:07,320
됩니다.

5574
00:48:08,040 --> 00:48:08,300
요거를

5575
00:48:08,300 --> 00:48:08,980
말씀드리는

5576
00:48:08,980 --> 00:48:09,620
이유는

5577
00:48:10,960 --> 00:48:11,580
오늘

5578
00:48:11,580 --> 00:48:12,060
밤이나

5579
00:48:12,060 --> 00:48:12,260
내일

5580
00:48:12,260 --> 00:48:12,660
아침에

5581
00:48:12,660 --> 00:48:12,880
나갈

5582
00:48:12,880 --> 00:48:13,320
프로그램의

5583
00:48:13,320 --> 00:48:13,780
어사이먼트

5584
00:48:13,820 --> 00:48:14,020
넘버

5585
00:48:14,020 --> 00:48:14,420
2는

5586
00:48:14,420 --> 00:48:14,660
싱글

5587
00:48:14,660 --> 00:48:14,960
사이클

5588
00:48:14,960 --> 00:48:15,060
CPU인데

5589
00:48:15,680 --> 00:48:15,780
그

5590
00:48:15,780 --> 00:48:16,240
다음이

5591
00:48:16,240 --> 00:48:16,740
파이프라인드

5592
00:48:16,740 --> 00:48:17,240
CPU에요.

5593
00:48:17,800 --> 00:48:17,900
그

5594
00:48:17,900 --> 00:48:18,520
파이프라인드

5595
00:48:18,520 --> 00:48:18,820
CPU

5596
00:48:18,820 --> 00:48:19,300
여러분들이

5597
00:48:19,300 --> 00:48:19,580
맨

5598
00:48:19,580 --> 00:48:20,000
처음에

5599
00:48:20,000 --> 00:48:20,540
세팅하실

5600
00:48:20,600 --> 00:48:20,700
때

5601
00:48:20,700 --> 00:48:21,000
PC

5602
00:48:21,040 --> 00:48:21,960
-4를

5603
00:48:21,960 --> 00:48:22,380
인풋으로

5604
00:48:22,380 --> 00:48:22,700
넣게

5605
00:48:22,700 --> 00:48:22,820
됩니다.

5606
00:48:23,620 --> 00:48:23,920
정확히

5607
00:48:23,960 --> 00:48:24,120
이

5608
00:48:24,120 --> 00:48:24,220
그룹.

5609
00:48:25,120 --> 00:48:25,220
그래서

5610
00:48:25,220 --> 00:48:25,660
그때

5611
00:48:25,660 --> 00:48:26,060
어차피

5612
00:48:26,100 --> 00:48:27,180
과제

5613
00:48:28,360 --> 00:48:28,560
스펙에

5614
00:48:28,560 --> 00:48:29,040
적혀있긴

5615
00:48:29,060 --> 00:48:29,580
할거지만

5616
00:48:29,580 --> 00:48:30,240
미리

5617
00:48:30,240 --> 00:48:30,980
약간

5618
00:48:31,220 --> 00:48:31,840
알아주시라는

5619
00:48:32,220 --> 00:48:32,580
의미에서

5620
00:48:32,580 --> 00:48:33,680
말씀드리는거고

5621
00:48:34,260 --> 00:48:34,400
그리고

5622
00:48:34,400 --> 00:48:35,060
두번째는

5623
00:48:35,060 --> 00:48:35,460
지금

5624
00:48:35,460 --> 00:48:36,040
우리는

5625
00:48:36,040 --> 00:48:36,460
이

5626
00:48:36,460 --> 00:48:36,940
IOP에서

5627
00:48:36,940 --> 00:48:37,240
PC

5628
00:48:37,240 --> 00:48:37,560
플러스

5629
00:48:37,560 --> 00:48:37,940
4를

5630
00:48:37,940 --> 00:48:38,360
하는데

5631
00:48:38,360 --> 00:48:39,380
사실

5632
00:48:39,380 --> 00:48:39,780
메모리

5633
00:48:39,780 --> 00:48:40,120
액세스

5634
00:48:40,120 --> 00:48:40,560
스테이지의

5635
00:48:40,560 --> 00:48:41,240
초반구에서

5636
00:48:41,240 --> 00:48:41,660
브랜치

5637
00:48:41,700 --> 00:48:42,200
명령어가

5638
00:48:42,200 --> 00:48:42,560
만약

5639
00:48:42,560 --> 00:48:43,140
테이크닛은

5640
00:48:43,500 --> 00:48:44,020
테이크닛을

5641
00:48:44,120 --> 00:48:44,220
하면

5642
00:48:44,220 --> 00:48:44,620
브랜치

5643
00:48:44,620 --> 00:48:45,080
명령어가

5644
00:48:45,080 --> 00:48:45,420
PC를

5645
00:48:45,420 --> 00:48:45,660
업데이트

5646
00:48:45,660 --> 00:48:45,900
해야

5647
00:48:45,900 --> 00:48:46,260
되잖아요.

5648
00:48:46,820 --> 00:48:46,940
그거

5649
00:48:46,940 --> 00:48:47,200
어떻게

5650
00:48:47,200 --> 00:48:47,420
하느냐.

5651
00:48:48,260 --> 00:48:48,360
이슈가

5652
00:48:48,360 --> 00:48:48,700
있는데

5653
00:48:49,900 --> 00:48:50,420
만약에

5654
00:48:50,420 --> 00:48:50,720
이제

5655
00:48:50,720 --> 00:48:52,200
일단

5656
00:48:52,200 --> 00:48:53,520
여기

5657
00:48:53,520 --> 00:48:53,760
이제

5658
00:48:53,760 --> 00:48:54,220
이후에

5659
00:48:54,220 --> 00:48:54,840
나올거지만

5660
00:48:55,500 --> 00:48:55,800
EX

5661
00:48:55,820 --> 00:48:56,140
-MEM

5662
00:48:56,140 --> 00:48:57,120
스테이지로부터

5663
00:48:57,120 --> 00:48:57,920
IF쪽으로

5664
00:48:57,920 --> 00:48:58,220
가는

5665
00:48:58,220 --> 00:48:58,680
이

5666
00:48:58,680 --> 00:48:59,160
회로를

5667
00:48:59,160 --> 00:48:59,480
여러분들

5668
00:48:59,700 --> 00:48:59,800
잘

5669
00:48:59,800 --> 00:49:00,480
보셔야

5670
00:49:00,480 --> 00:49:00,600
돼요.

5671
00:49:01,420 --> 00:49:01,560
이는

5672
00:49:01,560 --> 00:49:01,880
달리

5673
00:49:01,880 --> 00:49:02,460
얘기하면

5674
00:49:02,460 --> 00:49:02,880
IF

5675
00:49:02,880 --> 00:49:03,800
스테이지가

5676
00:49:04,440 --> 00:49:04,760
PC

5677
00:49:04,760 --> 00:49:05,660
레지스터만

5678
00:49:05,660 --> 00:49:06,160
인풋으로

5679
00:49:06,160 --> 00:49:06,560
보는게

5680
00:49:06,560 --> 00:49:06,960
아니라는

5681
00:49:06,960 --> 00:49:07,060
소리입니다.

5682
00:49:08,500 --> 00:49:08,740
EX

5683
00:49:08,800 --> 00:49:09,160
-MEM에

5684
00:49:09,160 --> 00:49:09,660
저장되어

5685
00:49:09,660 --> 00:49:09,800
있는

5686
00:49:09,800 --> 00:49:10,320
브랜치

5687
00:49:10,320 --> 00:49:10,640
관련

5688
00:49:10,640 --> 00:49:11,080
정보를

5689
00:49:11,080 --> 00:49:11,680
땡겨놔야

5690
00:49:11,680 --> 00:49:11,840
돼요.

5691
00:49:13,300 --> 00:49:13,420
그리고

5692
00:49:13,420 --> 00:49:13,840
이것이

5693
00:49:13,840 --> 00:49:14,280
가능한

5694
00:49:14,280 --> 00:49:14,840
이유는

5695
00:49:15,140 --> 00:49:15,300
한

5696
00:49:15,300 --> 00:49:15,480
클럽

5697
00:49:15,480 --> 00:49:15,800
사이클

5698
00:49:15,800 --> 00:49:16,180
탕

5699
00:49:16,180 --> 00:49:16,440
튈

5700
00:49:16,440 --> 00:49:16,680
때

5701
00:49:16,680 --> 00:49:17,380
우리는

5702
00:49:17,380 --> 00:49:18,240
레치로부터

5703
00:49:18,240 --> 00:49:20,020
인풋을

5704
00:49:20,020 --> 00:49:20,460
읽어서

5705
00:49:20,460 --> 00:49:20,660
다

5706
00:49:20,660 --> 00:49:21,160
처리를

5707
00:49:21,160 --> 00:49:21,420
하는

5708
00:49:21,420 --> 00:49:21,740
건데

5709
00:49:22,700 --> 00:49:22,900
얘는

5710
00:49:22,900 --> 00:49:23,380
EX

5711
00:49:23,440 --> 00:49:23,780
-MEM

5712
00:49:23,780 --> 00:49:24,500
상위에

5713
00:49:24,500 --> 00:49:24,960
레치의

5714
00:49:24,960 --> 00:49:25,340
브랜치

5715
00:49:25,400 --> 00:49:25,800
정보가

5716
00:49:25,800 --> 00:49:26,320
있으니까

5717
00:49:26,320 --> 00:49:26,900
얘를

5718
00:49:26,900 --> 00:49:27,340
IF

5719
00:49:27,340 --> 00:49:27,800
스테이지에

5720
00:49:27,800 --> 00:49:28,000
그냥

5721
00:49:28,000 --> 00:49:28,600
땡겨놨는데

5722
00:49:28,600 --> 00:49:28,920
나오는

5723
00:49:28,920 --> 00:49:29,160
제가

5724
00:49:29,160 --> 00:49:29,460
없다는

5725
00:49:29,460 --> 00:49:29,620
겁니다.

5726
00:49:30,270 --> 00:49:30,620
전시화도를

5727
00:49:30,880 --> 00:49:30,980
만들어

5728
00:49:30,980 --> 00:49:31,120
두면.

5729
00:49:32,200 --> 00:49:32,300
그러면

5730
00:49:32,300 --> 00:49:33,840
만약에

5731
00:49:33,900 --> 00:49:34,120
우리가

5732
00:49:34,120 --> 00:49:34,580
클럽

5733
00:49:34,580 --> 00:49:34,840
사이클

5734
00:49:34,840 --> 00:49:35,120
땡기는

5735
00:49:35,120 --> 00:49:35,580
했는데

5736
00:49:35,580 --> 00:49:36,220
지금

5737
00:49:36,220 --> 00:49:36,580
IF

5738
00:49:36,580 --> 00:49:37,040
스테이지의

5739
00:49:37,040 --> 00:49:37,780
초반부에서

5740
00:49:37,780 --> 00:49:38,020
우리가

5741
00:49:38,020 --> 00:49:38,300
PC

5742
00:49:38,300 --> 00:49:39,000
업데이트가

5743
00:49:39,000 --> 00:49:39,440
일어나는

5744
00:49:39,440 --> 00:49:39,540
거니까

5745
00:49:40,400 --> 00:49:40,540
저거

5746
00:49:40,540 --> 00:49:40,760
할

5747
00:49:40,760 --> 00:49:40,960
때

5748
00:49:40,960 --> 00:49:41,340
PC

5749
00:49:41,340 --> 00:49:41,740
플러스

5750
00:49:41,840 --> 00:49:42,100
4로

5751
00:49:42,100 --> 00:49:42,300
그냥

5752
00:49:42,300 --> 00:49:42,720
단순히

5753
00:49:42,720 --> 00:49:43,160
업데이트를

5754
00:49:43,300 --> 00:49:44,040
하기보다는

5755
00:49:44,620 --> 00:49:44,760
현재

5756
00:49:44,760 --> 00:49:45,120
EX

5757
00:49:45,120 --> 00:49:45,480
-MEM에

5758
00:49:45,480 --> 00:49:45,980
저장되어

5759
00:49:45,980 --> 00:49:46,060
있는

5760
00:49:46,060 --> 00:49:46,620
레치의

5761
00:49:46,620 --> 00:49:46,940
브랜치

5762
00:49:46,960 --> 00:49:47,180
관련

5763
00:49:47,180 --> 00:49:47,640
정보를

5764
00:49:47,640 --> 00:49:48,060
보고

5765
00:49:48,060 --> 00:49:48,600
만약

5766
00:49:48,600 --> 00:49:48,980
브랜치

5767
00:49:48,980 --> 00:49:49,500
명령어다.

5768
00:49:50,120 --> 00:49:50,320
그러면

5769
00:49:50,320 --> 00:49:51,200
얘가

5770
00:49:51,200 --> 00:49:52,060
가르쳐주는

5771
00:49:52,060 --> 00:49:52,440
PC

5772
00:49:52,480 --> 00:49:52,940
주소로

5773
00:49:52,940 --> 00:49:53,400
업데이트를

5774
00:49:53,400 --> 00:49:53,740
합니다.

5775
00:49:54,720 --> 00:49:54,940
그러면

5776
00:49:54,940 --> 00:49:55,220
PC

5777
00:49:55,220 --> 00:49:55,580
플러스

5778
00:49:55,580 --> 00:49:55,920
4는

5779
00:49:55,920 --> 00:49:56,500
안한다는

5780
00:49:56,500 --> 00:49:56,920
소리에요.

5781
00:49:57,340 --> 00:49:57,580
IF

5782
00:49:57,580 --> 00:49:57,980
스테이지

5783
00:49:58,340 --> 00:49:58,600
자체적으로

5784
00:49:58,600 --> 00:49:58,840
하는

5785
00:49:58,840 --> 00:49:59,080
거는.

5786
00:49:59,760 --> 00:49:59,860
그래서

5787
00:49:59,860 --> 00:50:00,240
EX

5788
00:50:00,260 --> 00:50:00,520
-MEM

5789
00:50:00,520 --> 00:50:01,080
레치에

5790
00:50:01,080 --> 00:50:01,500
IF

5791
00:50:01,500 --> 00:50:01,860
스테이지

5792
00:50:01,860 --> 00:50:02,460
클럽

5793
00:50:02,460 --> 00:50:02,800
사이클이

5794
00:50:02,800 --> 00:50:03,200
튀었는데

5795
00:50:03,200 --> 00:50:03,920
EX

5796
00:50:03,920 --> 00:50:04,180
-MEM

5797
00:50:04,180 --> 00:50:04,600
레치에

5798
00:50:04,600 --> 00:50:05,080
브랜치

5799
00:50:05,120 --> 00:50:05,280
관련

5800
00:50:05,280 --> 00:50:05,760
정보가

5801
00:50:05,760 --> 00:50:06,000
있다.

5802
00:50:06,460 --> 00:50:06,600
그리고

5803
00:50:06,600 --> 00:50:06,900
얘가

5804
00:50:06,900 --> 00:50:07,960
테이크에

5805
00:50:07,960 --> 00:50:08,340
따라서

5806
00:50:09,080 --> 00:50:09,180
그

5807
00:50:09,180 --> 00:50:09,460
주소

5808
00:50:09,460 --> 00:50:09,800
받아

5809
00:50:09,800 --> 00:50:10,300
놓을텐데

5810
00:50:10,300 --> 00:50:10,780
그

5811
00:50:10,780 --> 00:50:11,100
타겟

5812
00:50:11,100 --> 00:50:11,640
주소를

5813
00:50:11,640 --> 00:50:11,880
바로

5814
00:50:11,880 --> 00:50:12,240
업데이트

5815
00:50:12,240 --> 00:50:12,480
하는

5816
00:50:12,740 --> 00:50:12,900
거고

5817
00:50:13,420 --> 00:50:13,560
만약

5818
00:50:13,560 --> 00:50:13,800
이

5819
00:50:13,800 --> 00:50:14,220
정보가

5820
00:50:14,220 --> 00:50:14,620
없다.

5821
00:50:15,180 --> 00:50:15,400
그러면

5822
00:50:15,400 --> 00:50:15,900
현재

5823
00:50:15,900 --> 00:50:16,340
브랜치

5824
00:50:16,340 --> 00:50:16,920
명령어가

5825
00:50:16,920 --> 00:50:17,120
MEM

5826
00:50:17,120 --> 00:50:17,540
스테이지를

5827
00:50:17,540 --> 00:50:17,700
하고

5828
00:50:17,700 --> 00:50:17,920
있지

5829
00:50:17,920 --> 00:50:18,500
않다라는

5830
00:50:18,500 --> 00:50:19,350
소리거나

5831
00:50:19,480 --> 00:50:20,060
아니면

5832
00:50:20,060 --> 00:50:20,520
현재

5833
00:50:20,520 --> 00:50:20,780
이제

5834
00:50:20,780 --> 00:50:21,260
메모리

5835
00:50:21,260 --> 00:50:21,640
액세스

5836
00:50:21,640 --> 00:50:21,980
스테이지에

5837
00:50:21,980 --> 00:50:22,100
한

5838
00:50:22,100 --> 00:50:22,220
놈

5839
00:50:22,220 --> 00:50:22,580
브랜치

5840
00:50:22,760 --> 00:50:23,000
명령어가

5841
00:50:23,000 --> 00:50:23,460
아니라는

5842
00:50:23,460 --> 00:50:24,240
소리니까

5843
00:50:24,240 --> 00:50:24,820
IF

5844
00:50:24,820 --> 00:50:25,520
스테이지가

5845
00:50:26,000 --> 00:50:26,280
자체적으로

5846
00:50:26,280 --> 00:50:26,540
PC

5847
00:50:26,640 --> 00:50:26,880
플러스

5848
00:50:27,140 --> 00:50:27,240
4를

5849
00:50:27,240 --> 00:50:27,460
하게

5850
00:50:27,460 --> 00:50:27,700
된다.

5851
00:50:28,340 --> 00:50:28,540
이

5852
00:50:28,540 --> 00:50:29,240
우선순위에

5853
00:50:29,280 --> 00:50:29,560
따라서

5854
00:50:29,560 --> 00:50:29,700
움직인다.

5855
00:50:30,420 --> 00:50:30,580
라고

5856
00:50:30,580 --> 00:50:30,880
생각을

5857
00:50:30,940 --> 00:50:31,200
하시면

5858
00:50:31,200 --> 00:50:31,720
됩니다.

5859
00:50:32,660 --> 00:50:32,760
자

5860
00:50:32,760 --> 00:50:32,960
그럼

5861
00:50:32,960 --> 00:50:33,340
전시화

5862
00:50:33,340 --> 00:50:33,600
IF

5863
00:50:33,600 --> 00:50:33,960
스테이지

5864
00:50:33,960 --> 00:50:34,260
하고

5865
00:50:34,260 --> 00:50:34,600
나면

5866
00:50:35,980 --> 00:50:36,080
이제

5867
00:50:36,080 --> 00:50:36,700
무슨

5868
00:50:36,700 --> 00:50:37,200
정보가

5869
00:50:37,200 --> 00:50:37,720
저장되어

5870
00:50:37,960 --> 00:50:38,060
있는지

5871
00:50:38,060 --> 00:50:38,400
한번

5872
00:50:38,400 --> 00:50:38,860
리캡을

5873
00:50:38,860 --> 00:50:39,240
드리면

5874
00:50:39,580 --> 00:50:39,740
PC

5875
00:50:39,740 --> 00:50:40,180
플러스

5876
00:50:40,180 --> 00:50:40,680
4라는

5877
00:50:40,680 --> 00:50:41,200
놈이

5878
00:50:41,440 --> 00:50:41,640
일단

5879
00:50:42,220 --> 00:50:42,380
직장

5880
00:50:42,380 --> 00:50:42,680
클럽

5881
00:50:42,680 --> 00:50:43,430
사이클에

5882
00:50:44,420 --> 00:50:44,520
이제

5883
00:50:44,520 --> 00:50:45,080
IF랑

5884
00:50:45,080 --> 00:50:45,360
ID

5885
00:50:45,360 --> 00:50:45,720
스테이지

5886
00:50:45,960 --> 00:50:46,060
사이에

5887
00:50:46,060 --> 00:50:46,300
있는

5888
00:50:46,340 --> 00:50:46,720
레치에

5889
00:50:46,720 --> 00:50:47,000
저장이

5890
00:50:47,020 --> 00:50:47,180
되어

5891
00:50:47,180 --> 00:50:47,280
있습니다.

5892
00:50:48,160 --> 00:50:48,280
그리고

5893
00:50:48,280 --> 00:50:48,620
함께

5894
00:50:48,620 --> 00:50:49,080
저장이

5895
00:50:49,080 --> 00:50:49,300
되어

5896
00:50:49,300 --> 00:50:49,880
있는게

5897
00:50:50,240 --> 00:50:50,420
4

5898
00:50:50,420 --> 00:50:51,270
바이트명령어예요.

5899
00:50:52,420 --> 00:50:52,560
그러면

5900
00:50:52,560 --> 00:50:53,060
여기는

5901
00:50:53,060 --> 00:50:53,380
일단

5902
00:50:53,380 --> 00:50:53,560
이

5903
00:50:53,560 --> 00:50:54,000
하드웨어

5904
00:50:54,000 --> 00:50:54,360
유닛은

5905
00:50:54,480 --> 00:50:54,660
컨트롤

5906
00:50:54,660 --> 00:50:54,920
유닛

5907
00:50:54,920 --> 00:50:55,460
뺀거니까

5908
00:50:55,900 --> 00:50:56,020
이런

5909
00:50:56,020 --> 00:50:56,360
패스

5910
00:50:56,420 --> 00:50:56,940
기준으로만

5911
00:50:56,940 --> 00:50:57,320
말씀을

5912
00:50:57,320 --> 00:50:57,740
드리면

5913
00:50:57,740 --> 00:50:58,440
이

5914
00:50:58,640 --> 00:50:58,740
PC

5915
00:50:58,740 --> 00:50:59,160
플러스

5916
00:50:59,160 --> 00:50:59,680
4는

5917
00:50:59,680 --> 00:51:00,540
브랜치

5918
00:51:00,540 --> 00:51:01,020
명령어에

5919
00:51:01,020 --> 00:51:01,460
필요한

5920
00:51:01,460 --> 00:51:01,740
건데

5921
00:51:01,740 --> 00:51:02,460
우리가

5922
00:51:02,460 --> 00:51:03,000
브랜치

5923
00:51:03,160 --> 00:51:03,600
명령어

5924
00:51:03,600 --> 00:51:04,360
BEQ

5925
00:51:04,360 --> 00:51:04,960
명령어다

5926
00:51:04,960 --> 00:51:05,260
생각을

5927
00:51:05,260 --> 00:51:05,500
해봅시다.

5928
00:51:06,660 --> 00:51:06,900
BEQ

5929
00:51:06,900 --> 00:51:07,480
명령어도

5930
00:51:07,480 --> 00:51:07,920
사실

5931
00:51:07,920 --> 00:51:08,420
인스턴트

5932
00:51:08,420 --> 00:51:09,020
데코드

5933
00:51:09,020 --> 00:51:09,760
스테이지에서는

5934
00:51:09,760 --> 00:51:10,400
RS랑

5935
00:51:10,400 --> 00:51:10,700
RT

5936
00:51:10,960 --> 00:51:11,060
값을

5937
00:51:11,060 --> 00:51:11,560
읽기만

5938
00:51:11,560 --> 00:51:11,780
하지

5939
00:51:11,780 --> 00:51:12,060
그거

5940
00:51:12,060 --> 00:51:12,380
가지고

5941
00:51:12,380 --> 00:51:12,680
뭔가

5942
00:51:12,680 --> 00:51:13,200
PC

5943
00:51:13,200 --> 00:51:13,500
플러스

5944
00:51:13,500 --> 00:51:13,760
4에

5945
00:51:13,760 --> 00:51:14,240
조작질을

5946
00:51:14,240 --> 00:51:14,440
하진

5947
00:51:14,440 --> 00:51:14,540
않잖아요.

5948
00:51:15,560 --> 00:51:15,800
그렇기

5949
00:51:15,800 --> 00:51:16,120
때문에

5950
00:51:17,680 --> 00:51:17,980
ID

5951
00:51:17,980 --> 00:51:18,820
스테이지에서

5952
00:51:18,820 --> 00:51:19,480
쓰이진

5953
00:51:19,480 --> 00:51:20,160
않지만

5954
00:51:20,160 --> 00:51:21,200
EX나

5955
00:51:21,200 --> 00:51:21,500
MEM

5956
00:51:21,500 --> 00:51:22,160
스테이지에

5957
00:51:22,240 --> 00:51:22,440
쓰일

5958
00:51:22,440 --> 00:51:23,080
가능성이

5959
00:51:23,080 --> 00:51:23,440
있는

5960
00:51:23,440 --> 00:51:23,860
값이

5961
00:51:23,860 --> 00:51:24,200
PC

5962
00:51:24,360 --> 00:51:24,620
플러스

5963
00:51:24,620 --> 00:51:25,020
4니까

5964
00:51:25,020 --> 00:51:25,560
얘는

5965
00:51:25,560 --> 00:51:26,300
그냥

5966
00:51:26,300 --> 00:51:26,720
그대로

5967
00:51:26,720 --> 00:51:27,360
ID랑

5968
00:51:27,360 --> 00:51:27,660
EX

5969
00:51:27,920 --> 00:51:28,140
사이에

5970
00:51:28,140 --> 00:51:28,560
있는

5971
00:51:28,560 --> 00:51:29,180
PC

5972
00:51:29,180 --> 00:51:29,580
플러스

5973
00:51:29,580 --> 00:51:29,740
4

5974
00:51:29,740 --> 00:51:30,120
레치

5975
00:51:30,120 --> 00:51:30,640
저장이

5976
00:51:30,640 --> 00:51:30,860
됩니다.

5977
00:51:31,960 --> 00:51:32,300
요게

5978
00:51:32,300 --> 00:51:32,600
제가

5979
00:51:32,600 --> 00:51:33,120
지금까지

5980
00:51:33,120 --> 00:51:33,360
좀

5981
00:51:33,360 --> 00:51:33,680
종종

5982
00:51:33,680 --> 00:51:34,500
말씀드렸던

5983
00:51:35,660 --> 00:51:35,900
우리가

5984
00:51:35,900 --> 00:51:36,500
ADD

5985
00:51:36,500 --> 00:51:37,020
명령어

5986
00:51:37,160 --> 00:51:37,260
같은

5987
00:51:37,260 --> 00:51:37,400
거

5988
00:51:37,400 --> 00:51:37,500
한다.

5989
00:51:37,880 --> 00:51:38,060
지금

5990
00:51:38,160 --> 00:51:38,420
데이터

5991
00:51:38,420 --> 00:51:38,920
메모리에서

5992
00:51:38,940 --> 00:51:39,360
아무것도

5993
00:51:39,360 --> 00:51:39,640
안

5994
00:51:39,720 --> 00:51:40,200
한다고

5995
00:51:40,300 --> 00:51:40,820
표현을

5996
00:51:40,820 --> 00:51:40,980
한

5997
00:51:40,980 --> 00:51:41,260
거지

5998
00:51:41,740 --> 00:51:42,600
사실은

5999
00:51:42,740 --> 00:51:42,940
이

6000
00:51:42,940 --> 00:51:43,960
파이트라인

6001
00:51:43,960 --> 00:51:44,620
스테이지에

6002
00:51:44,720 --> 00:51:45,100
인풋

6003
00:51:45,140 --> 00:51:45,820
레치로부터

6004
00:51:45,820 --> 00:51:46,380
아웃풋

6005
00:51:46,380 --> 00:51:46,880
레치로

6006
00:51:46,880 --> 00:51:47,180
그냥

6007
00:51:47,180 --> 00:51:47,560
필요한

6008
00:51:47,560 --> 00:51:47,860
정보를

6009
00:51:47,860 --> 00:51:48,600
복사만

6010
00:51:48,600 --> 00:51:48,980
하지

6011
00:51:49,520 --> 00:51:49,940
나머지

6012
00:51:49,940 --> 00:51:50,240
뭔가

6013
00:51:50,240 --> 00:51:51,040
미니풀한

6014
00:51:51,040 --> 00:51:51,900
알수맥스적인

6015
00:51:51,900 --> 00:51:52,440
로지컬

6016
00:51:52,440 --> 00:51:53,100
오퍼레이션을

6017
00:51:53,200 --> 00:51:53,300
하지

6018
00:51:53,300 --> 00:51:53,960
않는다.

6019
00:51:54,440 --> 00:51:54,540
라는

6020
00:51:54,540 --> 00:51:54,720
말입니다.

6021
00:51:56,140 --> 00:51:56,240
그래서

6022
00:51:56,240 --> 00:51:56,860
어떤

6023
00:51:56,860 --> 00:51:57,240
파이트라인

6024
00:51:57,240 --> 00:51:57,840
스테이지에서

6025
00:51:57,840 --> 00:51:58,520
쉰다.

6026
00:51:58,880 --> 00:51:59,120
그거는

6027
00:51:59,120 --> 00:51:59,360
사실

6028
00:51:59,360 --> 00:51:59,740
말이

6029
00:51:59,740 --> 00:52:00,320
쉰다라는

6030
00:52:00,320 --> 00:52:00,600
거지

6031
00:52:00,600 --> 00:52:01,180
그

6032
00:52:01,180 --> 00:52:01,460
이후

6033
00:52:01,460 --> 00:52:01,940
파이트라인

6034
00:52:01,940 --> 00:52:02,480
스테이지들이

6035
00:52:02,640 --> 00:52:02,800
필요한

6036
00:52:02,800 --> 00:52:03,120
정보

6037
00:52:03,120 --> 00:52:03,800
복사는

6038
00:52:04,040 --> 00:52:04,240
계속

6039
00:52:04,240 --> 00:52:05,000
백그라운드에서

6040
00:52:05,220 --> 00:52:05,520
일어나고

6041
00:52:05,520 --> 00:52:05,620
있다.

6042
00:52:06,320 --> 00:52:06,440
이걸

6043
00:52:06,440 --> 00:52:06,660
꼭

6044
00:52:07,140 --> 00:52:07,280
아시길

6045
00:52:07,280 --> 00:52:07,600
바라고.

6046
00:52:08,560 --> 00:52:08,660
자

6047
00:52:08,660 --> 00:52:08,840
일단

6048
00:52:08,840 --> 00:52:09,420
컨트롤은

6049
00:52:09,420 --> 00:52:10,040
무시하겠습니다.

6050
00:52:10,360 --> 00:52:10,640
컨트롤

6051
00:52:10,640 --> 00:52:11,380
무시했을

6052
00:52:11,380 --> 00:52:11,560
때

6053
00:52:11,560 --> 00:52:12,720
32빛

6054
00:52:12,720 --> 00:52:13,620
명령으로부터

6055
00:52:13,620 --> 00:52:14,100
우리가

6056
00:52:14,100 --> 00:52:14,840
RS

6057
00:52:14,840 --> 00:52:15,540
빌드값,

6058
00:52:15,640 --> 00:52:16,020
RT

6059
00:52:16,220 --> 00:52:16,600
빌드값

6060
00:52:16,600 --> 00:52:16,980
받아올

6061
00:52:16,980 --> 00:52:17,120
수

6062
00:52:17,120 --> 00:52:17,220
있죠.

6063
00:52:18,020 --> 00:52:18,120
그리고

6064
00:52:18,120 --> 00:52:18,560
하위

6065
00:52:18,560 --> 00:52:19,120
16빛

6066
00:52:19,120 --> 00:52:19,520
해서

6067
00:52:19,580 --> 00:52:20,480
필요할지

6068
00:52:20,480 --> 00:52:20,800
말지

6069
00:52:20,900 --> 00:52:21,120
그리고

6070
00:52:21,120 --> 00:52:21,580
오를지

6071
00:52:21,580 --> 00:52:21,920
말지도

6072
00:52:21,920 --> 00:52:22,540
모르겠지만

6073
00:52:22,540 --> 00:52:22,920
일단

6074
00:52:22,920 --> 00:52:23,240
하위

6075
00:52:23,240 --> 00:52:23,700
16빛

6076
00:52:23,700 --> 00:52:23,980
해서

6077
00:52:23,980 --> 00:52:24,420
이미디엄

6078
00:52:24,420 --> 00:52:24,760
밸류값

6079
00:52:24,960 --> 00:52:25,100
받아올

6080
00:52:25,100 --> 00:52:25,220
수

6081
00:52:25,220 --> 00:52:25,580
있습니다.

6082
00:52:26,240 --> 00:52:26,380
그러면

6083
00:52:26,380 --> 00:52:26,720
저렇게

6084
00:52:26,720 --> 00:52:27,200
3개를

6085
00:52:27,200 --> 00:52:27,680
인풋으로

6086
00:52:27,680 --> 00:52:28,100
넣었을

6087
00:52:28,100 --> 00:52:28,220
때

6088
00:52:28,220 --> 00:52:28,900
튀어나오는

6089
00:52:28,920 --> 00:52:29,100
거

6090
00:52:29,100 --> 00:52:29,920
RS

6091
00:52:30,040 --> 00:52:30,760
레지스터의

6092
00:52:30,760 --> 00:52:30,980
값,

6093
00:52:31,320 --> 00:52:31,460
그리고

6094
00:52:31,940 --> 00:52:32,040
RT

6095
00:52:32,040 --> 00:52:32,840
레지스터의

6096
00:52:32,840 --> 00:52:33,040
값,

6097
00:52:33,480 --> 00:52:33,740
그리고

6098
00:52:33,740 --> 00:52:35,120
32빛으로

6099
00:52:35,120 --> 00:52:36,100
익스텐드된

6100
00:52:36,100 --> 00:52:36,680
이미디엄

6101
00:52:36,680 --> 00:52:37,060
밸류값.

6102
00:52:37,880 --> 00:52:38,140
이렇게

6103
00:52:38,160 --> 00:52:39,080
5개의

6104
00:52:39,080 --> 00:52:39,280
서로

6105
00:52:39,280 --> 00:52:39,700
다른

6106
00:52:39,700 --> 00:52:40,560
미래에

6107
00:52:40,560 --> 00:52:41,160
필요할

6108
00:52:41,160 --> 00:52:41,400
수도

6109
00:52:41,400 --> 00:52:42,040
있을

6110
00:52:42,040 --> 00:52:42,940
정보들이

6111
00:52:42,940 --> 00:52:43,380
전

6112
00:52:43,380 --> 00:52:43,840
매체에

6113
00:52:43,840 --> 00:52:44,220
저장이

6114
00:52:44,440 --> 00:52:44,540
되게

6115
00:52:44,540 --> 00:52:44,740
됩니다.

6116
00:52:45,740 --> 00:52:46,040
저런식의

6117
00:52:46,040 --> 00:52:46,460
인스턱션

6118
00:52:46,780 --> 00:52:46,960
디코드

6119
00:52:46,960 --> 00:52:47,560
스테이지고,

6120
00:52:48,100 --> 00:52:48,260
사실

6121
00:52:48,260 --> 00:52:48,720
인스턱션

6122
00:52:48,720 --> 00:52:49,160
디코드

6123
00:52:49,160 --> 00:52:49,660
스테이지와

6124
00:52:49,660 --> 00:52:50,040
익스큐

6125
00:52:50,040 --> 00:52:50,780
스테이지랑

6126
00:52:50,780 --> 00:52:51,400
메모리

6127
00:52:51,400 --> 00:52:51,840
액세스

6128
00:52:51,840 --> 00:52:52,480
스테이지는

6129
00:52:52,480 --> 00:52:52,940
이런

6130
00:52:52,940 --> 00:52:53,400
패턴을

6131
00:52:53,400 --> 00:52:53,620
갖고

6132
00:52:53,620 --> 00:52:54,160
작동을

6133
00:52:54,160 --> 00:52:54,520
하는데

6134
00:52:55,240 --> 00:52:55,360
즉

6135
00:52:55,620 --> 00:52:55,880
인풋

6136
00:52:55,880 --> 00:52:56,340
레치,

6137
00:52:57,040 --> 00:52:57,180
우리가

6138
00:52:57,180 --> 00:52:57,540
딱

6139
00:52:57,540 --> 00:52:57,800
이

6140
00:52:57,900 --> 00:52:58,060
클럽

6141
00:52:58,060 --> 00:52:58,540
사이클을

6142
00:52:58,660 --> 00:52:58,980
튀면

6143
00:52:59,940 --> 00:53:00,040
이

6144
00:53:00,040 --> 00:53:00,240
클럽

6145
00:53:00,240 --> 00:53:00,640
사이클을

6146
00:53:00,640 --> 00:53:00,900
튈

6147
00:53:00,900 --> 00:53:01,120
때

6148
00:53:01,120 --> 00:53:01,660
이제

6149
00:53:01,660 --> 00:53:02,140
인풋

6150
00:53:02,140 --> 00:53:03,060
레치로부터

6151
00:53:03,060 --> 00:53:03,740
인풋값을

6152
00:53:03,740 --> 00:53:04,060
땡겨갑니다.

6153
00:53:04,940 --> 00:53:05,360
인풋값을

6154
00:53:05,360 --> 00:53:05,800
쭉

6155
00:53:05,800 --> 00:53:06,680
땡겨가서

6156
00:53:06,680 --> 00:53:06,860
이제

6157
00:53:06,860 --> 00:53:07,280
필요한

6158
00:53:07,540 --> 00:53:07,840
연산들

6159
00:53:07,840 --> 00:53:08,340
하다가

6160
00:53:08,340 --> 00:53:08,900
한

6161
00:53:09,020 --> 00:53:09,160
클럽

6162
00:53:09,160 --> 00:53:09,620
사이클

6163
00:53:09,800 --> 00:53:10,300
끝나기

6164
00:53:10,300 --> 00:53:10,980
전까지

6165
00:53:10,980 --> 00:53:11,580
이

6166
00:53:11,620 --> 00:53:12,240
IDEX

6167
00:53:12,360 --> 00:53:12,840
아웃풋

6168
00:53:12,860 --> 00:53:13,500
레치에다가

6169
00:53:13,500 --> 00:53:13,880
필요한

6170
00:53:13,880 --> 00:53:14,480
정보들을

6171
00:53:14,480 --> 00:53:15,440
저장을

6172
00:53:15,440 --> 00:53:16,080
하는게

6173
00:53:16,080 --> 00:53:16,520
각

6174
00:53:16,600 --> 00:53:17,040
파이프라인

6175
00:53:17,220 --> 00:53:17,480
스테이지가

6176
00:53:17,480 --> 00:53:17,880
결국에는

6177
00:53:17,880 --> 00:53:18,340
하는거에요.

6178
00:53:19,300 --> 00:53:19,400
자

6179
00:53:19,400 --> 00:53:19,700
그러면

6180
00:53:19,700 --> 00:53:20,240
여기서

6181
00:53:20,240 --> 00:53:20,820
이제

6182
00:53:20,820 --> 00:53:21,380
일부러

6183
00:53:21,380 --> 00:53:21,580
제가

6184
00:53:21,580 --> 00:53:21,840
이렇게

6185
00:53:21,840 --> 00:53:22,000
또

6186
00:53:22,000 --> 00:53:22,360
표현을

6187
00:53:22,360 --> 00:53:22,500
한

6188
00:53:22,500 --> 00:53:22,800
이유가

6189
00:53:22,800 --> 00:53:22,920
있습니다.

6190
00:53:24,340 --> 00:53:24,560
이거는

6191
00:53:24,560 --> 00:53:25,020
인스턱션

6192
00:53:25,020 --> 00:53:25,340
디코드

6193
00:53:25,340 --> 00:53:25,440
스테이지에요.

6194
00:53:26,300 --> 00:53:26,400
그럼

6195
00:53:26,400 --> 00:53:26,720
익스큐

6196
00:53:26,720 --> 00:53:27,580
스테이지도

6197
00:53:27,580 --> 00:53:28,020
동시에

6198
00:53:28,020 --> 00:53:28,240
뭔가

6199
00:53:28,240 --> 00:53:28,720
일어나고

6200
00:53:28,720 --> 00:53:28,980
있겠죠.

6201
00:53:30,480 --> 00:53:30,680
뭔가

6202
00:53:30,680 --> 00:53:31,160
작업을

6203
00:53:31,160 --> 00:53:31,360
하고

6204
00:53:31,360 --> 00:53:31,500
있겠죠.

6205
00:53:32,020 --> 00:53:33,380
내가

6206
00:53:33,420 --> 00:53:34,080
IF

6207
00:53:34,080 --> 00:53:34,800
-ID의

6208
00:53:34,800 --> 00:53:35,520
인풋값을

6209
00:53:35,520 --> 00:53:35,980
가지고

6210
00:53:35,980 --> 00:53:36,820
IDEX

6211
00:53:36,840 --> 00:53:37,460
레치에다가

6212
00:53:37,460 --> 00:53:38,080
write를

6213
00:53:38,080 --> 00:53:39,900
하는거가

6214
00:53:39,900 --> 00:53:40,100
지금

6215
00:53:40,100 --> 00:53:40,520
IDEX

6216
00:53:40,520 --> 00:53:40,840
스테이지가

6217
00:53:40,880 --> 00:53:41,020
하고

6218
00:53:41,020 --> 00:53:41,640
있는거고

6219
00:53:41,900 --> 00:53:42,020
그리고

6220
00:53:42,020 --> 00:53:42,440
EX

6221
00:53:42,480 --> 00:53:43,160
스테이지는

6222
00:53:43,660 --> 00:53:44,080
IDEX

6223
00:53:44,160 --> 00:53:44,520
스테이지가

6224
00:53:44,520 --> 00:53:45,300
write할

6225
00:53:45,300 --> 00:53:46,060
IDEX

6226
00:53:46,140 --> 00:53:46,500
레치에

6227
00:53:46,520 --> 00:53:47,660
저장되어

6228
00:53:47,660 --> 00:53:47,740
있는

6229
00:53:47,740 --> 00:53:48,260
정보를

6230
00:53:48,260 --> 00:53:48,720
가지고

6231
00:53:48,720 --> 00:53:49,280
인풋으로

6232
00:53:49,280 --> 00:53:49,660
써서

6233
00:53:49,660 --> 00:53:50,140
아웃풋을

6234
00:53:50,140 --> 00:53:50,560
쓰니까

6235
00:53:51,500 --> 00:53:52,100
중간중간

6236
00:53:52,100 --> 00:53:52,400
끼어

6237
00:53:52,400 --> 00:53:52,620
있는

6238
00:53:52,620 --> 00:53:53,200
레치들

6239
00:53:53,200 --> 00:53:53,900
사이에서도

6240
00:53:53,900 --> 00:53:54,200
read

6241
00:53:54,200 --> 00:53:54,440
-write

6242
00:53:54,440 --> 00:53:55,020
conflict이

6243
00:53:55,020 --> 00:53:55,660
생겨서

6244
00:53:55,900 --> 00:53:56,080
뭔가

6245
00:53:56,080 --> 00:53:56,420
데이터

6246
00:53:56,420 --> 00:53:57,160
오버라이트시

6247
00:53:57,160 --> 00:53:57,840
happenstop이

6248
00:53:57,840 --> 00:53:58,240
되는거

6249
00:53:58,240 --> 00:53:59,060
아니냐고

6250
00:53:59,240 --> 00:53:59,340
생각을

6251
00:53:59,340 --> 00:53:59,660
하실

6252
00:53:59,860 --> 00:53:59,960
수가

6253
00:53:59,960 --> 00:54:00,320
있습니다.

6254
00:54:01,560 --> 00:54:01,900
그런데

6255
00:54:01,900 --> 00:54:03,540
하드웨어

6256
00:54:03,540 --> 00:54:04,020
실제

6257
00:54:04,020 --> 00:54:04,480
구현

6258
00:54:05,040 --> 00:54:05,160
이런

6259
00:54:05,160 --> 00:54:05,620
것들

6260
00:54:05,620 --> 00:54:06,320
내부적으로

6261
00:54:06,320 --> 00:54:06,640
나중에

6262
00:54:06,640 --> 00:54:07,340
들어가시면

6263
00:54:07,340 --> 00:54:08,600
우리가

6264
00:54:08,600 --> 00:54:08,900
이렇게

6265
00:54:08,900 --> 00:54:09,320
탁

6266
00:54:09,420 --> 00:54:09,640
튀는

6267
00:54:09,640 --> 00:54:10,080
순간

6268
00:54:10,080 --> 00:54:11,240
이

6269
00:54:11,240 --> 00:54:11,780
원래

6270
00:54:11,780 --> 00:54:12,440
직장까지

6271
00:54:12,440 --> 00:54:13,060
저장되어

6272
00:54:13,060 --> 00:54:13,180
있던

6273
00:54:13,180 --> 00:54:13,620
모든

6274
00:54:13,620 --> 00:54:14,160
정보는

6275
00:54:14,460 --> 00:54:14,560
이

6276
00:54:14,560 --> 00:54:16,100
와이어들에다가

6277
00:54:16,100 --> 00:54:16,620
값이

6278
00:54:16,620 --> 00:54:17,200
온전히

6279
00:54:17,200 --> 00:54:18,400
전달되었다고

6280
00:54:18,400 --> 00:54:18,900
가정을

6281
00:54:18,900 --> 00:54:19,400
하셔도

6282
00:54:19,400 --> 00:54:19,580
돼요.

6283
00:54:20,930 --> 00:54:21,880
즉

6284
00:54:22,200 --> 00:54:22,360
지금

6285
00:54:22,960 --> 00:54:23,060
IDEX

6286
00:54:23,060 --> 00:54:23,680
레치에

6287
00:54:23,940 --> 00:54:24,300
익스큐

6288
00:54:24,300 --> 00:54:24,780
스테이지는

6289
00:54:24,780 --> 00:54:25,100
값을

6290
00:54:25,100 --> 00:54:25,440
읽을

6291
00:54:25,440 --> 00:54:25,820
거고

6292
00:54:25,960 --> 00:54:26,360
IDEX

6293
00:54:26,360 --> 00:54:26,880
스테이지는

6294
00:54:26,880 --> 00:54:27,100
이

6295
00:54:27,100 --> 00:54:27,720
IDEX

6296
00:54:27,720 --> 00:54:28,340
레치에

6297
00:54:28,540 --> 00:54:28,640
같은

6298
00:54:28,640 --> 00:54:29,000
값을

6299
00:54:29,140 --> 00:54:29,680
쓸텐데

6300
00:54:29,680 --> 00:54:30,340
동일한

6301
00:54:30,340 --> 00:54:30,580
그런

6302
00:54:30,640 --> 00:54:31,060
사이클을

6303
00:54:31,060 --> 00:54:31,240
내기에.

6304
00:54:32,100 --> 00:54:32,220
근데

6305
00:54:32,220 --> 00:54:32,480
딱

6306
00:54:32,480 --> 00:54:32,900
클락이

6307
00:54:33,060 --> 00:54:33,200
튈

6308
00:54:33,200 --> 00:54:33,440
때

6309
00:54:33,440 --> 00:54:34,100
EX

6310
00:54:34,360 --> 00:54:34,860
스테이지에

6311
00:54:34,860 --> 00:54:35,080
이미

6312
00:54:35,080 --> 00:54:35,440
여기

6313
00:54:35,440 --> 00:54:36,100
와이어들이

6314
00:54:36,100 --> 00:54:36,520
연결이

6315
00:54:36,520 --> 00:54:36,680
되어

6316
00:54:36,680 --> 00:54:37,020
있잖아요.

6317
00:54:37,760 --> 00:54:37,900
그

6318
00:54:37,900 --> 00:54:38,780
와이어들의

6319
00:54:38,780 --> 00:54:39,660
사실은

6320
00:54:39,840 --> 00:54:40,880
IDEX

6321
00:54:40,900 --> 00:54:41,320
레치에

6322
00:54:41,320 --> 00:54:41,760
저장되어

6323
00:54:41,760 --> 00:54:41,860
있는

6324
00:54:42,140 --> 00:54:42,560
인풋값들이

6325
00:54:42,560 --> 00:54:42,840
모두

6326
00:54:42,840 --> 00:54:43,340
전달이

6327
00:54:43,340 --> 00:54:43,460
되어

6328
00:54:43,460 --> 00:54:43,840
있는

6329
00:54:43,840 --> 00:54:44,080
겁니다.

6330
00:54:45,180 --> 00:54:45,420
그렇기

6331
00:54:45,420 --> 00:54:45,800
때문에

6332
00:54:45,800 --> 00:54:46,560
한번

6333
00:54:46,560 --> 00:54:46,820
클락

6334
00:54:46,820 --> 00:54:47,100
사이드를

6335
00:54:47,100 --> 00:54:47,360
탁

6336
00:54:47,460 --> 00:54:47,820
튀어서

6337
00:54:47,820 --> 00:54:48,560
EX가

6338
00:54:48,560 --> 00:54:48,880
인풋

6339
00:54:48,880 --> 00:54:49,460
당겨가고

6340
00:54:49,460 --> 00:54:49,920
IDE가

6341
00:54:49,920 --> 00:54:50,180
인풋

6342
00:54:50,180 --> 00:54:50,860
당겨가서

6343
00:54:50,860 --> 00:54:51,180
IDE

6344
00:54:51,180 --> 00:54:51,800
스테이지가

6345
00:54:51,800 --> 00:54:52,700
IDEX

6346
00:54:52,780 --> 00:54:53,420
레치에다가

6347
00:54:53,420 --> 00:54:53,740
값을

6348
00:54:53,800 --> 00:54:54,260
오버라이트

6349
00:54:54,260 --> 00:54:54,960
하더라도

6350
00:54:55,780 --> 00:54:55,920
이미

6351
00:54:55,920 --> 00:54:56,780
실제로

6352
00:54:56,780 --> 00:54:57,120
이렇게

6353
00:54:57,180 --> 00:54:57,460
값을

6354
00:54:57,460 --> 00:54:57,860
쓰는데

6355
00:54:57,860 --> 00:54:58,400
시간이

6356
00:54:58,400 --> 00:54:59,180
어떻게든

6357
00:54:59,180 --> 00:54:59,680
조금은

6358
00:54:59,680 --> 00:54:59,940
걸릴

6359
00:54:59,940 --> 00:55:00,540
거고

6360
00:55:00,680 --> 00:55:01,180
동시에

6361
00:55:01,180 --> 00:55:02,080
이

6362
00:55:02,160 --> 00:55:02,460
EX

6363
00:55:02,740 --> 00:55:03,160
스테이지의

6364
00:55:03,160 --> 00:55:03,900
하드웨어들은

6365
00:55:03,900 --> 00:55:04,400
이미

6366
00:55:04,400 --> 00:55:05,420
IDEX에

6367
00:55:05,420 --> 00:55:05,920
저장되어

6368
00:55:05,920 --> 00:55:06,020
있는

6369
00:55:06,020 --> 00:55:06,480
값들이

6370
00:55:06,480 --> 00:55:07,460
와이어들에다가

6371
00:55:07,460 --> 00:55:08,340
충분히

6372
00:55:08,420 --> 00:55:08,560
딱

6373
00:55:08,800 --> 00:55:09,020
적당하게

6374
00:55:09,020 --> 00:55:09,400
차지가

6375
00:55:09,400 --> 00:55:09,660
되어

6376
00:55:09,660 --> 00:55:10,080
있어서

6377
00:55:10,080 --> 00:55:10,640
전달이

6378
00:55:10,640 --> 00:55:11,320
되었고

6379
00:55:11,580 --> 00:55:11,680
다시

6380
00:55:11,680 --> 00:55:12,000
말하면

6381
00:55:12,000 --> 00:55:12,280
이미

6382
00:55:12,280 --> 00:55:12,940
읽어간

6383
00:55:13,060 --> 00:55:13,440
상태이기

6384
00:55:13,700 --> 00:55:13,860
때문에

6385
00:55:14,740 --> 00:55:14,840
read

6386
00:55:14,840 --> 00:55:15,040
-write

6387
00:55:15,040 --> 00:55:15,720
complete는

6388
00:55:15,720 --> 00:55:16,380
레치들에

6389
00:55:16,380 --> 00:55:16,880
한해서는

6390
00:55:17,160 --> 00:55:17,440
발생하지

6391
00:55:17,440 --> 00:55:18,040
않는다.

6392
00:55:18,420 --> 00:55:19,120
라고 생각하셔도

6393
00:55:19,120 --> 00:55:19,700
됩니다.

6394
00:55:20,620 --> 00:55:20,720
그래서

6395
00:55:20,720 --> 00:55:21,900
탁

6396
00:55:21,900 --> 00:55:22,300
하면

6397
00:55:22,300 --> 00:55:23,400
무조건

6398
00:55:23,400 --> 00:55:23,740
일단

6399
00:55:23,740 --> 00:55:24,120
모든

6400
00:55:24,120 --> 00:55:24,600
값들이

6401
00:55:24,600 --> 00:55:24,900
다

6402
00:55:24,900 --> 00:55:25,380
읽혀

6403
00:55:25,380 --> 00:55:25,480
갔다.

6404
00:55:26,300 --> 00:55:26,400
그리고

6405
00:55:26,400 --> 00:55:26,660
그

6406
00:55:26,660 --> 00:55:27,440
읽혀진

6407
00:55:27,440 --> 00:55:28,020
값들을

6408
00:55:28,020 --> 00:55:28,860
기존으로

6409
00:55:29,300 --> 00:55:29,440
한

6410
00:55:29,440 --> 00:55:29,640
클락

6411
00:55:29,640 --> 00:55:30,040
사이클

6412
00:55:30,040 --> 00:55:30,240
내에

6413
00:55:30,240 --> 00:55:30,820
일부

6414
00:55:30,820 --> 00:55:31,200
시간

6415
00:55:31,200 --> 00:55:31,800
후에

6416
00:55:31,980 --> 00:55:32,540
여기에다가

6417
00:55:32,540 --> 00:55:33,080
write

6418
00:55:33,080 --> 00:55:33,300
하는

6419
00:55:33,300 --> 00:55:33,600
거다.

6420
00:55:34,140 --> 00:55:34,360
그렇기

6421
00:55:34,380 --> 00:55:34,680
때문에

6422
00:55:34,680 --> 00:55:35,520
한순간에

6423
00:55:35,520 --> 00:55:35,680
딱

6424
00:55:35,680 --> 00:55:36,100
처음에

6425
00:55:36,100 --> 00:55:36,780
읽어갖고

6426
00:55:37,000 --> 00:55:37,100
그

6427
00:55:37,100 --> 00:55:37,320
다음에

6428
00:55:37,320 --> 00:55:37,620
쓰는

6429
00:55:37,620 --> 00:55:37,720
거니까.

6430
00:55:38,620 --> 00:55:38,740
실제로

6431
00:55:38,740 --> 00:55:39,460
레치들에

6432
00:55:39,460 --> 00:55:39,740
대해서

6433
00:55:39,740 --> 00:55:40,560
데이터가

6434
00:55:40,760 --> 00:55:41,400
오버라이트로

6435
00:55:41,400 --> 00:55:41,780
인해서

6436
00:55:42,100 --> 00:55:42,480
손실이

6437
00:55:42,480 --> 00:55:42,860
일어나고

6438
00:55:42,860 --> 00:55:43,060
이런

6439
00:55:43,060 --> 00:55:43,440
일은

6440
00:55:43,440 --> 00:55:44,040
발생하지

6441
00:55:44,040 --> 00:55:44,480
않게

6442
00:55:44,480 --> 00:55:44,740
됩니다.

6443
00:55:45,080 --> 00:55:45,440
하드웨어

6444
00:55:45,440 --> 00:55:45,660
레벨에서.

6445
00:55:46,580 --> 00:55:46,680
근데

6446
00:55:46,680 --> 00:55:47,080
이렇게만

6447
00:55:47,080 --> 00:55:47,400
봤을

6448
00:55:47,400 --> 00:55:47,560
때는

6449
00:55:47,560 --> 00:55:47,940
이제

6450
00:55:47,940 --> 00:55:48,280
여러분들

6451
00:55:48,420 --> 00:55:48,640
또

6452
00:55:49,480 --> 00:55:50,000
평소에

6453
00:55:50,000 --> 00:55:50,860
C나

6454
00:55:50,860 --> 00:55:51,200
Python

6455
00:55:51,200 --> 00:55:51,760
프로그래밍

6456
00:55:51,860 --> 00:55:51,980
이런

6457
00:55:51,980 --> 00:55:52,440
걸로만

6458
00:55:52,440 --> 00:55:52,760
했을

6459
00:55:52,840 --> 00:55:52,940
때는

6460
00:55:52,940 --> 00:55:53,260
저게

6461
00:55:53,260 --> 00:55:53,500
확

6462
00:55:53,540 --> 00:55:53,880
와닿지

6463
00:55:53,880 --> 00:55:54,080
않을

6464
00:55:54,080 --> 00:55:54,240
수

6465
00:55:54,480 --> 00:55:54,580
있어서

6466
00:55:54,580 --> 00:55:55,560
일부러

6467
00:55:55,560 --> 00:55:55,820
약간

6468
00:55:56,100 --> 00:55:56,240
하드웨어

6469
00:55:56,240 --> 00:55:56,620
특성

6470
00:55:56,620 --> 00:55:56,940
좀

6471
00:55:57,320 --> 00:55:57,520
가미해서

6472
00:55:57,520 --> 00:55:58,280
설명드린

6473
00:55:58,280 --> 00:55:58,780
부분이나

6474
00:55:58,960 --> 00:55:59,060
이거

6475
00:55:59,060 --> 00:56:00,220
참고하시기

6476
00:56:00,220 --> 00:56:00,540
바랍니다.

6477
00:56:01,240 --> 00:56:01,360
그럼

6478
00:56:01,360 --> 00:56:01,760
인스트럭션

6479
00:56:01,760 --> 00:56:02,580
디코드에서는

6480
00:56:02,580 --> 00:56:03,400
또

6481
00:56:03,400 --> 00:56:03,840
이제

6482
00:56:03,840 --> 00:56:04,620
써가지고

6483
00:56:04,620 --> 00:56:05,000
이래

6484
00:56:05,000 --> 00:56:05,180
좀

6485
00:56:05,180 --> 00:56:05,560
오는데

6486
00:56:05,560 --> 00:56:06,160
자

6487
00:56:06,440 --> 00:56:06,540
여기서

6488
00:56:06,540 --> 00:56:06,820
또

6489
00:56:06,820 --> 00:56:07,040
하나

6490
00:56:07,040 --> 00:56:07,260
더

6491
00:56:07,540 --> 00:56:07,700
특징이

6492
00:56:07,700 --> 00:56:07,800
뭐냐면

6493
00:56:10,760 --> 00:56:11,220
IF

6494
00:56:11,220 --> 00:56:11,740
-ID

6495
00:56:11,740 --> 00:56:12,380
레치에서는

6496
00:56:12,380 --> 00:56:12,940
4바이트

6497
00:56:12,940 --> 00:56:13,400
명령어가

6498
00:56:13,400 --> 00:56:13,500
있었어요.

6499
00:56:15,040 --> 00:56:15,140
근데

6500
00:56:15,140 --> 00:56:16,240
IDEX

6501
00:56:16,260 --> 00:56:16,860
레치에는

6502
00:56:16,860 --> 00:56:17,140
이

6503
00:56:17,240 --> 00:56:17,680
4바이트

6504
00:56:17,680 --> 00:56:18,220
명령어는

6505
00:56:18,220 --> 00:56:18,360
이제

6506
00:56:18,360 --> 00:56:18,900
온대간대

6507
00:56:18,900 --> 00:56:19,060
옮겨집니다.

6508
00:56:20,720 --> 00:56:21,080
4바이트

6509
00:56:21,080 --> 00:56:22,080
명령어로부터

6510
00:56:22,080 --> 00:56:23,100
도출한

6511
00:56:23,100 --> 00:56:23,720
미래에

6512
00:56:23,720 --> 00:56:24,320
필요할

6513
00:56:24,320 --> 00:56:25,280
정보들로

6514
00:56:25,280 --> 00:56:25,620
이제

6515
00:56:25,880 --> 00:56:26,160
변환이

6516
00:56:26,160 --> 00:56:26,380
되게

6517
00:56:26,380 --> 00:56:26,600
돼요.

6518
00:56:27,220 --> 00:56:27,400
즉,

6519
00:56:27,580 --> 00:56:27,760
달리

6520
00:56:27,760 --> 00:56:28,300
얘기하면

6521
00:56:28,300 --> 00:56:29,440
우리가

6522
00:56:29,440 --> 00:56:29,920
IF

6523
00:56:29,920 --> 00:56:30,540
스테이지에서

6524
00:56:30,540 --> 00:56:31,040
4바이트

6525
00:56:31,200 --> 00:56:31,460
명령어를

6526
00:56:31,460 --> 00:56:32,020
당겼다고

6527
00:56:32,020 --> 00:56:32,320
해서

6528
00:56:32,320 --> 00:56:32,580
그

6529
00:56:32,580 --> 00:56:33,080
4바이트

6530
00:56:33,120 --> 00:56:33,640
명령어가

6531
00:56:33,640 --> 00:56:34,260
이후에

6532
00:56:34,260 --> 00:56:35,160
IDEX

6533
00:56:35,280 --> 00:56:35,660
MAM

6534
00:56:35,840 --> 00:56:36,040
그리고

6535
00:56:36,040 --> 00:56:36,500
writeback

6536
00:56:36,500 --> 00:56:36,920
명령어를

6537
00:56:36,920 --> 00:56:37,340
실행하는데

6538
00:56:37,340 --> 00:56:37,560
저

6539
00:56:37,560 --> 00:56:38,160
4바이트

6540
00:56:38,160 --> 00:56:38,520
명령어를

6541
00:56:38,580 --> 00:56:38,720
계속

6542
00:56:38,860 --> 00:56:39,040
들고

6543
00:56:39,040 --> 00:56:39,400
가야

6544
00:56:39,400 --> 00:56:39,600
되는데요.

6545
00:56:40,580 --> 00:56:40,800
할

6546
00:56:40,900 --> 00:56:41,000
필요

6547
00:56:41,000 --> 00:56:41,300
없거든요.

6548
00:56:42,600 --> 00:56:43,060
4바이트

6549
00:56:43,060 --> 00:56:43,920
명령어로부터

6550
00:56:43,920 --> 00:56:44,220
우리가

6551
00:56:44,220 --> 00:56:44,780
뽑아낼

6552
00:56:44,780 --> 00:56:44,920
수

6553
00:56:44,920 --> 00:56:45,100
있는

6554
00:56:45,100 --> 00:56:45,580
정보를

6555
00:56:45,580 --> 00:56:45,780
다

6556
00:56:45,780 --> 00:56:46,530
뽑아내놓고

6557
00:56:47,700 --> 00:56:47,980
거기에

6558
00:56:48,280 --> 00:56:48,520
적절한

6559
00:56:48,520 --> 00:56:49,020
컨트롤

6560
00:56:49,020 --> 00:56:49,600
시그널만

6561
00:56:49,600 --> 00:56:50,060
함께

6562
00:56:50,060 --> 00:56:51,000
보내주기만

6563
00:56:51,000 --> 00:56:51,400
하면

6564
00:56:51,400 --> 00:56:52,300
사실

6565
00:56:52,300 --> 00:56:52,900
4바이트

6566
00:56:52,900 --> 00:56:53,560
명령어는

6567
00:56:54,020 --> 00:56:54,620
4바이트라는

6568
00:56:54,960 --> 00:56:55,060
32

6569
00:56:55,060 --> 00:56:55,640
-bit으로부터

6570
00:56:55,760 --> 00:56:56,120
뽑아낼

6571
00:56:56,340 --> 00:56:56,440
정보는

6572
00:56:56,440 --> 00:56:56,680
우리는

6573
00:56:56,680 --> 00:56:56,860
이미

6574
00:56:56,900 --> 00:56:57,020
다

6575
00:56:57,020 --> 00:56:57,440
뽑아낸

6576
00:56:57,440 --> 00:56:57,540
겁니다.

6577
00:56:58,800 --> 00:56:59,100
그렇기

6578
00:56:59,100 --> 00:56:59,500
때문에

6579
00:56:59,500 --> 00:57:00,520
4바이트라는

6580
00:57:00,520 --> 00:57:01,200
명령어가

6581
00:57:01,380 --> 00:57:01,500
어

6582
00:57:01,500 --> 00:57:01,980
이거

6583
00:57:02,300 --> 00:57:02,700
날리면

6584
00:57:02,700 --> 00:57:03,160
우리가

6585
00:57:03,160 --> 00:57:03,880
지금

6586
00:57:03,880 --> 00:57:04,140
이

6587
00:57:04,140 --> 00:57:04,700
EX든

6588
00:57:04,700 --> 00:57:05,180
MAM이든

6589
00:57:05,180 --> 00:57:05,840
writeback이든

6590
00:57:05,840 --> 00:57:06,340
얘네들은

6591
00:57:06,340 --> 00:57:06,740
어떻게

6592
00:57:06,740 --> 00:57:07,440
현재

6593
00:57:07,440 --> 00:57:07,700
내가

6594
00:57:07,700 --> 00:57:08,140
실행해야

6595
00:57:08,140 --> 00:57:08,340
되는

6596
00:57:08,340 --> 00:57:08,800
4바이트

6597
00:57:08,800 --> 00:57:09,180
명령어

6598
00:57:09,180 --> 00:57:09,660
애드랍을

6599
00:57:09,660 --> 00:57:10,060
알아요?

6600
00:57:10,280 --> 00:57:10,400
라고

6601
00:57:10,400 --> 00:57:10,660
하실

6602
00:57:10,660 --> 00:57:10,760
수

6603
00:57:10,760 --> 00:57:11,040
있지만

6604
00:57:11,040 --> 00:57:11,800
그건

6605
00:57:11,800 --> 00:57:12,020
이제

6606
00:57:12,400 --> 00:57:12,560
컨트롤

6607
00:57:12,560 --> 00:57:13,020
시그너를

6608
00:57:13,020 --> 00:57:13,340
우리가

6609
00:57:13,340 --> 00:57:13,800
추가를

6610
00:57:13,960 --> 00:57:14,440
함으로써

6611
00:57:15,100 --> 00:57:15,380
컨트롤

6612
00:57:15,380 --> 00:57:15,880
시그널에

6613
00:57:15,880 --> 00:57:16,640
따라서

6614
00:57:16,720 --> 00:57:16,900
우리가

6615
00:57:16,900 --> 00:57:17,420
이후

6616
00:57:17,420 --> 00:57:19,760
하드웨어

6617
00:57:19,760 --> 00:57:20,540
유닛들에다가

6618
00:57:20,540 --> 00:57:20,840
어떤

6619
00:57:20,840 --> 00:57:21,360
명령어를

6620
00:57:21,520 --> 00:57:21,820
실행을

6621
00:57:21,820 --> 00:57:21,920
해라,

6622
00:57:22,060 --> 00:57:22,220
어떤

6623
00:57:22,220 --> 00:57:22,660
연산을

6624
00:57:22,780 --> 00:57:22,980
해라

6625
00:57:23,080 --> 00:57:23,180
라고

6626
00:57:23,180 --> 00:57:23,400
원래

6627
00:57:23,400 --> 00:57:23,960
알려줬던

6628
00:57:23,960 --> 00:57:24,240
거거든요.

6629
00:57:26,060 --> 00:57:26,160
그

6630
00:57:26,160 --> 00:57:26,920
메커니즘이

6631
00:57:26,920 --> 00:57:27,240
그대로

6632
00:57:27,240 --> 00:57:28,260
따라지게

6633
00:57:28,260 --> 00:57:28,580
된다.

6634
00:57:30,260 --> 00:57:30,420
즉

6635
00:57:30,420 --> 00:57:30,940
4바이트

6636
00:57:30,940 --> 00:57:31,500
명령어는

6637
00:57:31,840 --> 00:57:32,200
컨트롤

6638
00:57:32,200 --> 00:57:32,800
시그널로

6639
00:57:32,800 --> 00:57:33,060
다

6640
00:57:33,060 --> 00:57:33,560
치환이

6641
00:57:33,560 --> 00:57:33,800
되면

6642
00:57:33,800 --> 00:57:34,240
거의

6643
00:57:34,240 --> 00:57:34,640
역할을

6644
00:57:34,640 --> 00:57:34,780
다

6645
00:57:34,820 --> 00:57:34,920
한

6646
00:57:34,920 --> 00:57:35,080
겁니다.

6647
00:57:36,600 --> 00:57:36,760
컨트롤

6648
00:57:36,760 --> 00:57:37,400
시그널이

6649
00:57:37,600 --> 00:57:37,700
어떤

6650
00:57:37,700 --> 00:57:38,500
명령어에

6651
00:57:38,500 --> 00:57:39,500
거의

6652
00:57:39,500 --> 00:57:39,720
1

6653
00:57:39,720 --> 00:57:39,800
to

6654
00:57:39,800 --> 00:57:39,940
1

6655
00:57:39,940 --> 00:57:40,220
맵이

6656
00:57:40,220 --> 00:57:40,500
된다고

6657
00:57:40,500 --> 00:57:40,840
합니다.

6658
00:57:41,920 --> 00:57:42,100
자

6659
00:57:42,340 --> 00:57:42,520
그래서

6660
00:57:42,520 --> 00:57:42,840
인섭션,

6661
00:57:43,140 --> 00:57:43,260
리코드

6662
00:57:43,260 --> 00:57:43,480
요래

6663
00:57:43,480 --> 00:57:43,740
되고

6664
00:57:43,740 --> 00:57:44,260
그럼

6665
00:57:44,440 --> 00:57:44,640
엑서큐

6666
00:57:44,640 --> 00:57:45,320
스테이징을

6667
00:57:45,320 --> 00:57:45,680
하게

6668
00:57:45,680 --> 00:57:46,040
되는데

6669
00:57:46,980 --> 00:57:47,260
여기서

6670
00:57:47,260 --> 00:57:47,540
이제

6671
00:57:47,540 --> 00:57:48,160
싱글사이클

6672
00:57:48,440 --> 00:57:48,540
CPU

6673
00:57:48,540 --> 00:57:48,720
때

6674
00:57:48,720 --> 00:57:49,040
우리가

6675
00:57:49,040 --> 00:57:49,400
얘기를

6676
00:57:49,400 --> 00:57:49,760
했던

6677
00:57:49,760 --> 00:57:50,520
필요할지

6678
00:57:50,520 --> 00:57:51,160
모르겠지만

6679
00:57:51,160 --> 00:57:51,580
일단

6680
00:57:51,580 --> 00:57:52,060
만들어

6681
00:57:52,260 --> 00:57:52,360
넣고

6682
00:57:52,360 --> 00:57:52,720
필요

6683
00:57:52,720 --> 00:57:53,140
없으면

6684
00:57:53,140 --> 00:57:53,580
버리자

6685
00:57:53,580 --> 00:57:53,680
컨셉이

6686
00:57:54,100 --> 00:57:54,580
등장하게

6687
00:57:54,580 --> 00:57:55,220
됩니다.

6688
00:57:55,920 --> 00:57:56,340
ANU의

6689
00:57:56,340 --> 00:57:56,800
두번째

6690
00:57:56,800 --> 00:57:57,200
인풋

6691
00:57:57,540 --> 00:57:57,700
우리가

6692
00:57:57,700 --> 00:57:58,120
항상

6693
00:57:58,420 --> 00:57:58,520
rt

6694
00:57:58,520 --> 00:57:58,980
레지스터

6695
00:57:58,980 --> 00:57:59,600
값이거나

6696
00:57:59,600 --> 00:58:00,300
아니면

6697
00:58:00,300 --> 00:58:00,840
이미디엣

6698
00:58:00,880 --> 00:58:01,080
밸류

6699
00:58:01,080 --> 00:58:01,500
값이라고

6700
00:58:01,500 --> 00:58:01,960
했잖아요

6701
00:58:02,840 --> 00:58:02,960
근데

6702
00:58:02,960 --> 00:58:03,820
rt랑

6703
00:58:03,820 --> 00:58:04,260
이미디엣

6704
00:58:04,260 --> 00:58:04,580
밸류

6705
00:58:04,580 --> 00:58:05,000
값을

6706
00:58:05,000 --> 00:58:05,220
둘

6707
00:58:05,240 --> 00:58:05,340
다

6708
00:58:05,340 --> 00:58:05,680
만들어

6709
00:58:05,680 --> 00:58:06,080
놓는

6710
00:58:06,080 --> 00:58:06,620
이유는

6711
00:58:06,620 --> 00:58:07,140
인섭션,

6712
00:58:07,520 --> 00:58:07,680
리코드

6713
00:58:07,680 --> 00:58:08,240
스테이지가

6714
00:58:08,340 --> 00:58:09,000
끝나야

6715
00:58:09,000 --> 00:58:09,660
비로소

6716
00:58:09,660 --> 00:58:10,000
우리가

6717
00:58:10,000 --> 00:58:10,620
add지

6718
00:58:10,620 --> 00:58:11,160
addi

6719
00:58:11,160 --> 00:58:11,680
명령어지

6720
00:58:11,680 --> 00:58:12,060
알기

6721
00:58:12,060 --> 00:58:12,480
때문이다

6722
00:58:12,480 --> 00:58:12,720
라고

6723
00:58:12,720 --> 00:58:12,860
했습니다.

6724
00:58:13,840 --> 00:58:13,960
그럼

6725
00:58:13,960 --> 00:58:14,200
현재

6726
00:58:14,200 --> 00:58:14,820
로드워드

6727
00:58:14,820 --> 00:58:15,700
명령어면

6728
00:58:22,270 --> 00:58:23,520
rs

6729
00:58:23,520 --> 00:58:24,120
레지스터

6730
00:58:24,120 --> 00:58:25,380
밸류에다가

6731
00:58:25,740 --> 00:58:26,220
이미디엣

6732
00:58:26,220 --> 00:58:26,580
밸류

6733
00:58:26,580 --> 00:58:26,960
값을

6734
00:58:26,960 --> 00:58:27,460
더해서

6735
00:58:27,460 --> 00:58:27,880
타겟

6736
00:58:27,880 --> 00:58:28,220
메모리

6737
00:58:28,220 --> 00:58:28,620
조서를

6738
00:58:28,620 --> 00:58:29,120
계산을

6739
00:58:29,120 --> 00:58:29,620
하죠.

6740
00:58:30,120 --> 00:58:30,380
그러면

6741
00:58:30,380 --> 00:58:32,480
IDEX라이츠에는

6742
00:58:33,120 --> 00:58:33,680
rt

6743
00:58:33,700 --> 00:58:34,500
레지스터의

6744
00:58:34,500 --> 00:58:34,700
값,

6745
00:58:34,900 --> 00:58:35,100
만약

6746
00:58:35,100 --> 00:58:36,180
그것이

6747
00:58:36,180 --> 00:58:37,180
필요했다면,

6748
00:58:37,760 --> 00:58:38,260
r타입

6749
00:58:38,260 --> 00:58:39,180
명령어였다면

6750
00:58:39,180 --> 00:58:39,920
필요했을

6751
00:58:39,920 --> 00:58:40,060
수

6752
00:58:40,060 --> 00:58:40,520
있을

6753
00:58:40,520 --> 00:58:40,900
rt

6754
00:58:40,920 --> 00:58:41,220
레지스터

6755
00:58:41,540 --> 00:58:41,640
값도

6756
00:58:41,640 --> 00:58:41,740
있고

6757
00:58:42,480 --> 00:58:42,660
그리고

6758
00:58:42,660 --> 00:58:43,280
i타입

6759
00:58:43,280 --> 00:58:43,920
명령어라면

6760
00:58:43,920 --> 00:58:44,540
필요할

6761
00:58:44,540 --> 00:58:45,060
16bit

6762
00:58:45,060 --> 00:58:45,540
이미디엣

6763
00:58:45,580 --> 00:58:45,880
밸류도

6764
00:58:45,880 --> 00:58:46,320
함께

6765
00:58:46,320 --> 00:58:46,740
전달을

6766
00:58:46,740 --> 00:58:47,340
해놨으니까

6767
00:58:47,340 --> 00:58:48,340
둘

6768
00:58:48,340 --> 00:58:48,540
중

6769
00:58:48,540 --> 00:58:49,000
필요한

6770
00:58:49,000 --> 00:58:49,340
것만

6771
00:58:49,340 --> 00:58:49,700
쓰고

6772
00:58:49,700 --> 00:58:50,560
나머지는

6773
00:58:51,000 --> 00:58:51,160
그냥

6774
00:58:51,420 --> 00:58:51,900
매치의

6775
00:58:52,140 --> 00:58:52,280
잇지만

6776
00:58:52,280 --> 00:58:52,880
쓰지

6777
00:58:52,880 --> 00:58:53,180
않고

6778
00:58:53,180 --> 00:58:53,600
버린다.

6779
00:58:54,320 --> 00:58:54,460
그

6780
00:58:54,460 --> 00:58:55,720
작동을

6781
00:58:55,900 --> 00:58:56,000
하게

6782
00:58:56,000 --> 00:58:56,100
됩니다.

6783
00:58:57,040 --> 00:58:57,200
즉

6784
00:58:57,300 --> 00:58:57,760
싱글사이클

6785
00:58:57,760 --> 00:58:58,120
CPU

6786
00:58:58,120 --> 00:58:58,640
때의

6787
00:58:58,640 --> 00:58:59,340
행동이

6788
00:58:59,340 --> 00:59:00,280
살짝살짝씩

6789
00:59:00,500 --> 00:59:00,900
여기저기

6790
00:59:00,900 --> 00:59:01,080
좀

6791
00:59:01,080 --> 00:59:01,460
녹아있다.

6792
00:59:01,880 --> 00:59:02,020
라고

6793
00:59:02,020 --> 00:59:02,340
생각을

6794
00:59:02,640 --> 00:59:02,740
하셔도

6795
00:59:02,740 --> 00:59:02,840
돼요.

6796
00:59:04,380 --> 00:59:04,600
그리고

6797
00:59:04,600 --> 00:59:05,080
이제

6798
00:59:05,080 --> 00:59:05,680
재밌는거

6799
00:59:05,680 --> 00:59:06,080
p10

6800
00:59:06,080 --> 00:59:06,360
플러스

6801
00:59:06,460 --> 00:59:06,620
4

6802
00:59:06,620 --> 00:59:07,180
이렇게

6803
00:59:07,180 --> 00:59:07,600
있는데

6804
00:59:07,600 --> 00:59:08,000
이

6805
00:59:08,080 --> 00:59:08,280
p10

6806
00:59:08,280 --> 00:59:08,580
플러스

6807
00:59:08,580 --> 00:59:08,860
4가

6808
00:59:08,860 --> 00:59:09,160
이전에

6809
00:59:09,160 --> 00:59:09,560
넘어왔습니다.

6810
00:59:10,360 --> 00:59:10,520
그러면

6811
00:59:10,520 --> 00:59:10,800
이

6812
00:59:10,800 --> 00:59:11,140
p10

6813
00:59:11,140 --> 00:59:11,500
플러스

6814
00:59:11,500 --> 00:59:11,960
4를

6815
00:59:11,960 --> 00:59:12,380
실제

6816
00:59:12,380 --> 00:59:12,580
이

6817
00:59:12,640 --> 00:59:12,860
위에

6818
00:59:12,860 --> 00:59:13,360
로직해

6819
00:59:13,360 --> 00:59:13,620
주는

6820
00:59:13,620 --> 00:59:13,840
건

6821
00:59:13,840 --> 00:59:14,220
뭐냐면

6822
00:59:14,220 --> 00:59:15,080
p10

6823
00:59:15,080 --> 00:59:15,460
플러스

6824
00:59:15,580 --> 00:59:15,760
4

6825
00:59:15,760 --> 00:59:16,220
플러스

6826
00:59:16,220 --> 00:59:16,760
이미디엣

6827
00:59:16,780 --> 00:59:17,040
밸류

6828
00:59:17,040 --> 00:59:17,380
렛츠

6829
00:59:17,380 --> 00:59:17,700
슈프트

6830
00:59:17,780 --> 00:59:17,900
바이

6831
00:59:17,900 --> 00:59:18,120
2

6832
00:59:18,120 --> 00:59:18,420
비즈를

6833
00:59:18,420 --> 00:59:18,780
해주는

6834
00:59:18,780 --> 00:59:19,180
회로가

6835
00:59:19,180 --> 00:59:19,420
여기

6836
00:59:19,420 --> 00:59:19,900
있는데

6837
00:59:21,560 --> 00:59:21,740
add

6838
00:59:21,740 --> 00:59:22,220
명령은

6839
00:59:22,220 --> 00:59:22,520
사실

6840
00:59:22,520 --> 00:59:22,860
할

6841
00:59:22,860 --> 00:59:23,100
필요

6842
00:59:23,100 --> 00:59:23,620
없잖아요.

6843
00:59:24,180 --> 00:59:24,340
그죠?

6844
00:59:24,720 --> 00:59:24,900
add

6845
00:59:24,900 --> 00:59:25,340
명령은

6846
00:59:25,340 --> 00:59:25,560
우리가

6847
00:59:25,860 --> 00:59:25,960
pc

6848
00:59:26,380 --> 00:59:26,480
값을

6849
00:59:26,480 --> 00:59:26,680
뭐

6850
00:59:26,680 --> 00:59:26,920
어디

6851
00:59:26,920 --> 00:59:27,260
완전

6852
00:59:27,360 --> 00:59:27,720
딴

6853
00:59:27,860 --> 00:59:28,600
브랜치원에서

6854
00:59:28,600 --> 00:59:28,980
바꿀

6855
00:59:29,000 --> 00:59:29,160
것도

6856
00:59:29,160 --> 00:59:29,520
아니니까.

6857
00:59:30,640 --> 00:59:30,880
그런데

6858
00:59:30,880 --> 00:59:31,920
우리가

6859
00:59:31,920 --> 00:59:32,480
하드웨어

6860
00:59:32,480 --> 00:59:32,780
상으로

6861
00:59:32,780 --> 00:59:33,160
구현을

6862
00:59:33,220 --> 00:59:33,660
해놓으면

6863
00:59:33,660 --> 00:59:34,620
하드웨어

6864
00:59:34,620 --> 00:59:35,740
상으로는

6865
00:59:35,860 --> 00:59:36,060
이

6866
00:59:36,060 --> 00:59:37,000
이런

6867
00:59:37,000 --> 00:59:37,500
경로

6868
00:59:37,500 --> 00:59:38,720
디지털서킷

6869
00:59:39,120 --> 00:59:39,340
자체가

6870
00:59:40,120 --> 00:59:40,560
애초에

6871
00:59:40,560 --> 00:59:40,880
우리는

6872
00:59:40,880 --> 00:59:41,280
손을

6873
00:59:41,560 --> 00:59:41,960
건드릴

6874
00:59:41,960 --> 00:59:42,240
수

6875
00:59:42,240 --> 00:59:42,740
없게

6876
00:59:42,740 --> 00:59:43,220
되게

6877
00:59:43,220 --> 00:59:43,560
로우

6878
00:59:43,560 --> 00:59:43,980
레벨하게

6879
00:59:44,120 --> 00:59:44,260
그냥

6880
00:59:44,260 --> 00:59:44,960
하드코딩이

6881
00:59:45,000 --> 00:59:45,100
되어

6882
00:59:45,100 --> 00:59:45,260
있습니다.

6883
00:59:46,440 --> 00:59:46,580
그렇기

6884
00:59:46,580 --> 00:59:46,920
때문에

6885
00:59:46,920 --> 00:59:47,680
add

6886
00:59:47,680 --> 00:59:48,320
명령하면

6887
00:59:48,320 --> 00:59:49,120
사실

6888
00:59:49,120 --> 00:59:49,520
p10

6889
00:59:49,520 --> 00:59:49,820
플러스

6890
00:59:49,940 --> 00:59:50,060
4

6891
00:59:50,060 --> 00:59:50,480
얘부터

6892
00:59:50,480 --> 00:59:50,980
원래도

6893
00:59:50,980 --> 00:59:51,340
필요

6894
00:59:51,340 --> 00:59:51,720
없어요.

6895
00:59:52,600 --> 00:59:52,780
필요

6896
00:59:52,780 --> 00:59:53,440
없지만

6897
00:59:53,440 --> 00:59:54,540
하드웨어로

6898
00:59:54,540 --> 00:59:55,060
구현을

6899
00:59:55,060 --> 00:59:55,420
하면

6900
00:59:55,420 --> 00:59:56,000
일단

6901
00:59:56,000 --> 00:59:56,820
하드웨어는

6902
00:59:56,820 --> 00:59:57,380
본인이

6903
00:59:57,380 --> 00:59:58,260
구현되어

6904
00:59:58,260 --> 00:59:58,600
있는대로

6905
00:59:58,600 --> 00:59:59,140
작동을

6906
00:59:59,140 --> 00:59:59,360
하기

6907
00:59:59,360 --> 00:59:59,600
때문에

6908
01:00:00,260 --> 01:00:00,480
p10

6909
01:00:00,480 --> 01:00:00,720
플러스

6910
01:00:00,720 --> 01:00:00,940
4

6911
01:00:00,940 --> 01:00:01,260
플러스

6912
01:00:01,260 --> 01:00:01,720
이미디엣

6913
01:00:01,720 --> 01:00:01,960
밸류

6914
01:00:01,960 --> 01:00:02,320
렛츠

6915
01:00:02,320 --> 01:00:02,560
슈프트

6916
01:00:02,580 --> 01:00:02,820
바이

6917
01:00:02,820 --> 01:00:03,020
2

6918
01:00:03,020 --> 01:00:03,380
비즈를

6919
01:00:03,660 --> 01:00:03,840
일단

6920
01:00:03,840 --> 01:00:04,040
이

6921
01:00:04,040 --> 01:00:04,340
랜치에

6922
01:00:04,340 --> 01:00:04,640
넣긴

6923
01:00:04,640 --> 01:00:04,860
넣습니다.

6924
01:00:05,900 --> 01:00:06,000
그냥

6925
01:00:06,000 --> 01:00:06,420
넣어요.

6926
01:00:06,840 --> 01:00:06,940
그냥

6927
01:00:06,940 --> 01:00:07,500
하드웨어는

6928
01:00:07,980 --> 01:00:08,080
무시성으로

6929
01:00:08,080 --> 01:00:08,300
그냥

6930
01:00:08,300 --> 01:00:08,680
일단

6931
01:00:08,680 --> 01:00:09,020
하니까

6932
01:00:09,340 --> 01:00:09,720
컨비네이션

6933
01:00:09,720 --> 01:00:10,420
설치시기도

6934
01:00:10,420 --> 01:00:10,700
하고

6935
01:00:11,300 --> 01:00:11,460
그래서

6936
01:00:11,460 --> 01:00:11,980
들어는

6937
01:00:11,980 --> 01:00:12,680
가지만

6938
01:00:13,320 --> 01:00:13,520
실제

6939
01:00:13,520 --> 01:00:13,680
이제

6940
01:00:13,680 --> 01:00:13,980
나중에

6941
01:00:13,980 --> 01:00:14,280
가면

6942
01:00:14,280 --> 01:00:14,760
로드워드

6943
01:00:14,760 --> 01:00:15,340
명령으니까

6944
01:00:15,340 --> 01:00:15,700
얘는

6945
01:00:16,540 --> 01:00:16,640
안쓰이고

6946
01:00:16,640 --> 01:00:17,140
벌려진다.

6947
01:00:18,460 --> 01:00:18,560
그것만

6948
01:00:18,560 --> 01:00:19,000
알아

6949
01:00:19,000 --> 01:00:19,360
두시면

6950
01:00:19,700 --> 01:00:19,800
되고

6951
01:00:19,800 --> 01:00:20,900
그거랑

6952
01:00:20,900 --> 01:00:21,540
유사하게

6953
01:00:21,540 --> 01:00:21,920
사실

6954
01:00:21,920 --> 01:00:22,140
이

6955
01:00:22,140 --> 01:00:22,360
제로

6956
01:00:22,360 --> 01:00:23,440
시그널도

6957
01:00:23,440 --> 01:00:24,080
반드시

6958
01:00:24,080 --> 01:00:24,500
일단

6959
01:00:24,500 --> 01:00:25,080
저장은

6960
01:00:25,080 --> 01:00:25,260
됩니다.

6961
01:00:26,720 --> 01:00:26,920
제로가

6962
01:00:26,920 --> 01:00:27,120
이제

6963
01:00:27,120 --> 01:00:27,480
rs

6964
01:00:27,520 --> 01:00:27,660
-100

6965
01:00:27,660 --> 01:00:28,120
-rp

6966
01:00:28,300 --> 01:00:28,440
아

6967
01:00:28,440 --> 01:00:28,720
a

6968
01:00:28,720 --> 01:00:28,980
-rule

6969
01:00:28,980 --> 01:00:29,600
-result가

6970
01:00:29,600 --> 01:00:29,860
모두

6971
01:00:29,860 --> 01:00:30,160
제로

6972
01:00:30,160 --> 01:00:30,540
빛이냐

6973
01:00:30,540 --> 01:00:31,560
아니냐를

6974
01:00:31,560 --> 01:00:31,880
딱

6975
01:00:31,900 --> 01:00:32,040
그

6976
01:00:32,040 --> 01:00:32,640
마킹을

6977
01:00:32,680 --> 01:00:32,980
해내는

6978
01:00:33,560 --> 01:00:33,660
원빛인데

6979
01:00:33,660 --> 01:00:34,380
만약

6980
01:00:34,380 --> 01:00:34,680
브랜치

6981
01:00:34,680 --> 01:00:35,220
명령하면

6982
01:00:35,220 --> 01:00:35,640
필요하니까

6983
01:00:35,760 --> 01:00:36,440
그래서

6984
01:00:36,440 --> 01:00:36,760
일단

6985
01:00:36,980 --> 01:00:37,320
저장은

6986
01:00:37,560 --> 01:00:37,760
하되

6987
01:00:37,760 --> 01:00:38,360
제로

6988
01:00:38,360 --> 01:00:39,160
시그널을

6989
01:00:39,340 --> 01:00:39,480
근데

6990
01:00:39,480 --> 01:00:40,420
쓰이지

6991
01:00:40,420 --> 01:00:40,780
말지는

6992
01:00:40,780 --> 01:00:41,160
나중에

6993
01:00:41,160 --> 01:00:41,680
판단이

6994
01:00:41,800 --> 01:00:41,900
되고

6995
01:00:41,900 --> 01:00:42,600
그러면

6996
01:00:42,600 --> 01:00:42,840
이제

6997
01:00:43,120 --> 01:00:43,280
실제로

6998
01:00:43,280 --> 01:00:43,940
lw에게

6999
01:00:43,940 --> 01:00:44,320
필요한

7000
01:00:44,320 --> 01:00:44,600
것은

7001
01:00:44,860 --> 01:00:45,300
rs

7002
01:00:45,300 --> 01:00:45,860
더하기

7003
01:00:45,860 --> 01:00:46,720
이미디엣

7004
01:00:46,720 --> 01:00:47,420
밸류일텐데

7005
01:00:48,200 --> 01:00:48,380
rs

7006
01:00:48,420 --> 01:00:48,640
더하기

7007
01:00:48,640 --> 01:00:49,060
이미디엣

7008
01:00:49,060 --> 01:00:49,560
밸류는

7009
01:00:49,560 --> 01:00:49,780
이제

7010
01:00:49,900 --> 01:00:50,000
저

7011
01:00:50,000 --> 01:00:50,520
랜치에

7012
01:00:50,780 --> 01:00:50,960
온전히

7013
01:00:50,960 --> 01:00:51,280
저장이

7014
01:00:51,400 --> 01:00:51,540
되게

7015
01:00:51,540 --> 01:00:51,980
되고

7016
01:00:51,980 --> 01:00:52,800
그리고

7017
01:00:52,800 --> 01:00:53,240
원래

7018
01:00:53,240 --> 01:00:53,640
더

7019
01:00:53,640 --> 01:00:54,780
추가로

7020
01:00:54,780 --> 01:00:54,980
붙는

7021
01:00:54,980 --> 01:00:55,120
건

7022
01:00:55,120 --> 01:00:55,220
뭐냐

7023
01:00:56,080 --> 01:00:56,520
rt

7024
01:00:56,520 --> 01:00:57,160
-register의

7025
01:00:57,480 --> 01:00:57,720
값도

7026
01:00:57,940 --> 01:00:58,040
이

7027
01:00:58,040 --> 01:00:58,620
랜치에다가

7028
01:00:58,760 --> 01:00:58,860
함께

7029
01:00:58,860 --> 01:00:59,240
저장이

7030
01:00:59,240 --> 01:00:59,340
됩니다.

7031
01:01:00,020 --> 01:01:00,120
그

7032
01:01:00,120 --> 01:01:00,640
이유는

7033
01:01:00,640 --> 01:01:00,960
우리

7034
01:01:00,960 --> 01:01:01,480
명령어가

7035
01:01:01,480 --> 01:01:02,420
스토어워드일

7036
01:01:02,420 --> 01:01:02,600
수도

7037
01:01:02,600 --> 01:01:02,820
있기

7038
01:01:02,820 --> 01:01:02,920
때문에

7039
01:01:04,100 --> 01:01:04,800
스토어워드면

7040
01:01:04,800 --> 01:01:05,500
rt

7041
01:01:05,500 --> 01:01:05,920
-register

7042
01:01:06,280 --> 01:01:06,420
값이

7043
01:01:06,420 --> 01:01:06,920
상위

7044
01:01:06,920 --> 01:01:07,260
메모리

7045
01:01:07,260 --> 01:01:07,620
주소에

7046
01:01:07,620 --> 01:01:07,920
저장이

7047
01:01:07,920 --> 01:01:08,260
되죠.

7048
01:01:08,700 --> 01:01:08,960
그러니까

7049
01:01:09,400 --> 01:01:09,780
필요할

7050
01:01:09,780 --> 01:01:10,000
수도

7051
01:01:10,000 --> 01:01:10,580
있으니까

7052
01:01:11,260 --> 01:01:11,360
일단

7053
01:01:12,240 --> 01:01:12,340
만들어

7054
01:01:12,340 --> 01:01:12,500
놓는다.

7055
01:01:13,460 --> 01:01:13,600
그리고

7056
01:01:13,600 --> 01:01:13,980
저장을

7057
01:01:14,000 --> 01:01:14,180
해

7058
01:01:14,180 --> 01:01:14,680
놓는다.

7059
01:01:15,000 --> 01:01:15,100
라고

7060
01:01:15,100 --> 01:01:15,440
생각을

7061
01:01:15,440 --> 01:01:15,840
하면

7062
01:01:15,840 --> 01:01:16,380
됩니다.

7063
01:01:18,500 --> 01:01:18,600
그럼

7064
01:01:18,600 --> 01:01:18,880
메모리

7065
01:01:18,880 --> 01:01:19,180
액세스

7066
01:01:19,180 --> 01:01:19,660
스테이지입니다.

7067
01:01:19,880 --> 01:01:20,360
로드워드

7068
01:01:20,360 --> 01:01:20,580
같은

7069
01:01:20,700 --> 01:01:21,000
경우에는

7070
01:01:21,000 --> 01:01:21,380
메모리

7071
01:01:21,380 --> 01:01:21,680
액세스

7072
01:01:21,680 --> 01:01:22,220
스테이지는

7073
01:01:22,220 --> 01:01:22,700
사실

7074
01:01:22,700 --> 01:01:23,440
rs

7075
01:01:23,600 --> 01:01:23,960
플러스

7076
01:01:23,960 --> 01:01:24,460
이미디엣

7077
01:01:24,460 --> 01:01:24,700
밸류

7078
01:01:24,700 --> 01:01:25,080
값이

7079
01:01:25,080 --> 01:01:25,700
어드레스로

7080
01:01:25,700 --> 01:01:26,160
쓰이고

7081
01:01:26,640 --> 01:01:26,820
그러면

7082
01:01:26,820 --> 01:01:27,080
이

7083
01:01:27,080 --> 01:01:27,600
어드레스를

7084
01:01:27,600 --> 01:01:28,380
통해서

7085
01:01:28,760 --> 01:01:28,860
이제

7086
01:01:28,860 --> 01:01:29,580
데이터

7087
01:01:29,580 --> 01:01:30,180
4바이트

7088
01:01:30,400 --> 01:01:30,500
데이터

7089
01:01:30,500 --> 01:01:30,820
값이

7090
01:01:30,820 --> 01:01:31,220
튀어나오겠죠.

7091
01:01:32,160 --> 01:01:32,480
4바이트

7092
01:01:32,480 --> 01:01:32,780
데이터

7093
01:01:32,780 --> 01:01:32,960
값이

7094
01:01:33,060 --> 01:01:33,440
튀어나올

7095
01:01:33,480 --> 01:01:33,940
거고

7096
01:01:34,640 --> 01:01:34,820
그리고

7097
01:01:34,820 --> 01:01:35,660
여기서

7098
01:01:35,660 --> 01:01:36,120
조금

7099
01:01:36,120 --> 01:01:36,720
재밌는

7100
01:01:36,720 --> 01:01:37,180
경로가

7101
01:01:37,180 --> 01:01:37,400
하나

7102
01:01:37,400 --> 01:01:37,880
생기는데

7103
01:01:40,480 --> 01:01:40,800
rs

7104
01:01:40,800 --> 01:01:42,520
플러스

7105
01:01:42,800 --> 01:01:43,720
alu

7106
01:01:43,720 --> 01:01:44,460
result라고

7107
01:01:44,460 --> 01:01:44,580
부를게요.

7108
01:01:45,380 --> 01:01:45,980
alu의

7109
01:01:45,980 --> 01:01:47,000
결과가

7110
01:01:48,180 --> 01:01:48,540
데이터

7111
01:01:48,540 --> 01:01:48,860
메모리

7112
01:01:48,860 --> 01:01:49,800
어드레스로도

7113
01:01:49,820 --> 01:01:50,580
들어가면서도

7114
01:01:50,580 --> 01:01:51,300
동시에

7115
01:01:51,300 --> 01:01:52,080
맴과

7116
01:01:52,080 --> 01:01:52,520
write

7117
01:01:52,640 --> 01:01:52,840
-back

7118
01:01:53,200 --> 01:01:53,380
스테이지

7119
01:01:53,380 --> 01:01:53,920
사이에

7120
01:01:53,920 --> 01:01:54,460
벤치된

7121
01:01:54,460 --> 01:01:54,980
랜치에도

7122
01:01:54,980 --> 01:01:55,440
저장이

7123
01:01:55,440 --> 01:01:55,900
됩니다.

7124
01:01:56,820 --> 01:01:56,920
그

7125
01:01:56,920 --> 01:01:57,940
이유는

7126
01:01:58,060 --> 01:01:58,300
우리가

7127
01:01:58,300 --> 01:01:58,840
만약

7128
01:01:58,840 --> 01:01:59,040
n

7129
01:01:59,040 --> 01:01:59,840
명령어였다.

7130
01:02:00,160 --> 01:02:00,300
그럼

7131
01:02:00,300 --> 01:02:00,640
데이터

7132
01:02:00,640 --> 01:02:01,200
메모리부터

7133
01:02:01,240 --> 01:02:01,460
아무

7134
01:02:01,500 --> 01:02:01,740
값도

7135
01:02:01,740 --> 01:02:02,140
안했고

7136
01:02:02,140 --> 01:02:02,620
alu

7137
01:02:02,620 --> 01:02:03,280
result를

7138
01:02:03,280 --> 01:02:03,780
destination

7139
01:02:03,900 --> 01:02:04,320
register에

7140
01:02:04,320 --> 01:02:04,600
써야

7141
01:02:04,600 --> 01:02:04,760
되니까.

7142
01:02:05,360 --> 01:02:05,460
즉

7143
01:02:05,460 --> 01:02:05,720
write

7144
01:02:05,720 --> 01:02:05,880
-back

7145
01:02:05,880 --> 01:02:06,460
스테이지에서

7146
01:02:06,460 --> 01:02:06,880
필요할

7147
01:02:06,880 --> 01:02:07,280
가능성이

7148
01:02:07,480 --> 01:02:07,620
있는

7149
01:02:07,620 --> 01:02:08,260
데이터이기

7150
01:02:08,260 --> 01:02:08,500
때문에

7151
01:02:08,500 --> 01:02:08,800
함께

7152
01:02:08,860 --> 01:02:09,100
저장을

7153
01:02:09,100 --> 01:02:09,280
해야

7154
01:02:09,280 --> 01:02:09,500
된다는

7155
01:02:09,500 --> 01:02:09,720
겁니다.

7156
01:02:10,560 --> 01:02:10,660
여기서

7157
01:02:10,660 --> 01:02:10,860
이제

7158
01:02:10,860 --> 01:02:11,220
여러분들이

7159
01:02:11,220 --> 01:02:11,740
랜치의

7160
01:02:11,960 --> 01:02:12,160
컨셉을

7161
01:02:12,160 --> 01:02:12,640
아시겠죠?

7162
01:02:13,360 --> 01:02:13,620
랜치는

7163
01:02:13,620 --> 01:02:14,780
물론

7164
01:02:14,780 --> 01:02:15,560
최고의

7165
01:02:15,560 --> 01:02:15,880
랜치

7166
01:02:16,120 --> 01:02:16,620
디자인은

7167
01:02:17,100 --> 01:02:17,220
내가

7168
01:02:17,220 --> 01:02:17,680
현재

7169
01:02:17,680 --> 01:02:18,060
어떤

7170
01:02:18,060 --> 01:02:18,520
명령어를

7171
01:02:18,520 --> 01:02:18,940
실행을

7172
01:02:18,940 --> 01:02:19,300
한다고

7173
01:02:19,300 --> 01:02:19,880
판단이

7174
01:02:20,180 --> 01:02:20,360
됐을

7175
01:02:20,360 --> 01:02:20,580
때

7176
01:02:21,020 --> 01:02:21,140
그

7177
01:02:21,140 --> 01:02:21,880
명령어를

7178
01:02:21,880 --> 01:02:22,840
기준으로

7179
01:02:22,960 --> 01:02:23,380
이후의

7180
01:02:23,380 --> 01:02:23,820
파이프라인

7181
01:02:23,820 --> 01:02:24,580
스테이지들이

7182
01:02:24,880 --> 01:02:25,020
딱

7183
01:02:25,060 --> 01:02:25,200
그

7184
01:02:25,200 --> 01:02:25,640
명령어가

7185
01:02:25,640 --> 01:02:25,980
필요할

7186
01:02:25,980 --> 01:02:26,580
정보들만

7187
01:02:26,580 --> 01:02:27,000
딱딱딱

7188
01:02:27,000 --> 01:02:27,480
넘기는게

7189
01:02:27,660 --> 01:02:27,760
가장

7190
01:02:27,760 --> 01:02:28,340
효율적인

7191
01:02:28,340 --> 01:02:28,740
아드웨어

7192
01:02:28,740 --> 01:02:29,360
디자인이긴

7193
01:02:29,360 --> 01:02:29,660
해요.

7194
01:02:30,480 --> 01:02:30,760
하지만

7195
01:02:30,760 --> 01:02:31,600
우리

7196
01:02:31,600 --> 01:02:32,280
cpu는

7197
01:02:32,720 --> 01:02:32,920
굉장히

7198
01:02:32,920 --> 01:02:33,260
많은

7199
01:02:33,260 --> 01:02:33,820
명령어들을

7200
01:02:33,820 --> 01:02:34,200
구현을

7201
01:02:34,200 --> 01:02:34,300
합니다.

7202
01:02:35,460 --> 01:02:35,620
그렇기

7203
01:02:35,620 --> 01:02:36,000
때문에

7204
01:02:36,000 --> 01:02:38,220
비효율적일지라도

7205
01:02:38,220 --> 01:02:38,980
내가

7206
01:02:38,980 --> 01:02:39,460
어느

7207
01:02:39,460 --> 01:02:40,000
명령어를

7208
01:02:40,000 --> 01:02:40,600
실행하는지

7209
01:02:40,600 --> 01:02:41,260
모른다는

7210
01:02:41,260 --> 01:02:42,000
대가정을

7211
01:02:42,000 --> 01:02:43,000
삼고

7212
01:02:43,040 --> 01:02:43,400
일단

7213
01:02:43,400 --> 01:02:44,860
나의

7214
01:02:44,860 --> 01:02:45,320
명령어는

7215
01:02:45,320 --> 01:02:45,660
정확히

7216
01:02:45,660 --> 01:02:45,960
뭔지

7217
01:02:45,960 --> 01:02:46,600
모르겠지만

7218
01:02:46,600 --> 01:02:47,400
어느

7219
01:02:47,400 --> 01:02:47,900
파이프라인

7220
01:02:47,900 --> 01:02:48,500
스테이지에서

7221
01:02:48,500 --> 01:02:48,680
이

7222
01:02:48,680 --> 01:02:49,220
정보는

7223
01:02:49,220 --> 01:02:49,720
필요할

7224
01:02:49,720 --> 01:02:49,920
수도

7225
01:02:49,920 --> 01:02:50,180
있고

7226
01:02:50,180 --> 01:02:50,600
없을

7227
01:02:50,600 --> 01:02:50,760
수도

7228
01:02:50,760 --> 01:02:51,060
있어.

7229
01:02:51,140 --> 01:02:51,280
10

7230
01:02:51,360 --> 01:02:51,520
%에

7231
01:02:51,520 --> 01:02:51,740
일단

7232
01:02:51,740 --> 01:02:51,880
다

7233
01:02:51,880 --> 01:02:52,120
매체

7234
01:02:52,120 --> 01:02:52,440
저장합니다.

7235
01:02:53,680 --> 01:02:53,880
그게

7236
01:02:53,880 --> 01:02:54,440
이제

7237
01:02:54,440 --> 01:02:55,420
데이터

7238
01:02:55,420 --> 01:02:56,040
메모리부터

7239
01:02:56,100 --> 01:02:56,420
땡겨온

7240
01:02:56,420 --> 01:02:56,700
값도

7241
01:02:56,700 --> 01:02:57,060
저장이

7242
01:02:57,060 --> 01:02:57,420
되고,

7243
01:02:57,780 --> 01:02:58,460
ALU에서

7244
01:02:58,460 --> 01:02:59,760
저장한

7245
01:02:59,760 --> 01:03:00,020
값도

7246
01:03:00,020 --> 01:03:00,540
땡겨져

7247
01:03:00,540 --> 01:03:00,940
오고,

7248
01:03:01,360 --> 01:03:01,460
RT

7249
01:03:01,460 --> 01:03:01,940
레지스터

7250
01:03:02,200 --> 01:03:02,340
값도

7251
01:03:02,340 --> 01:03:03,180
스펙트로티블이

7252
01:03:03,180 --> 01:03:03,680
땡겨져

7253
01:03:03,680 --> 01:03:03,900
오고,

7254
01:03:03,980 --> 01:03:04,360
이미넷

7255
01:03:04,360 --> 01:03:04,720
밸류도

7256
01:03:04,720 --> 01:03:05,040
일단

7257
01:03:05,040 --> 01:03:05,820
32bit으로

7258
01:03:05,820 --> 01:03:06,120
사인

7259
01:03:06,120 --> 01:03:06,840
스탠드해서

7260
01:03:06,840 --> 01:03:07,480
매체를

7261
01:03:07,480 --> 01:03:08,200
저장해두고,

7262
01:03:08,240 --> 01:03:08,360
이

7263
01:03:08,460 --> 01:03:08,740
컨셉이

7264
01:03:08,740 --> 01:03:08,920
다

7265
01:03:08,920 --> 01:03:09,360
반영되어

7266
01:03:09,360 --> 01:03:09,480
있는

7267
01:03:09,480 --> 01:03:09,720
거예요.

7268
01:03:10,420 --> 01:03:10,520
저

7269
01:03:10,520 --> 01:03:10,740
중에

7270
01:03:10,740 --> 01:03:11,240
필요한

7271
01:03:11,240 --> 01:03:11,500
것만

7272
01:03:11,500 --> 01:03:11,940
딱딱딱

7273
01:03:11,940 --> 01:03:12,520
골라쓰는

7274
01:03:12,520 --> 01:03:13,060
역할을

7275
01:03:13,060 --> 01:03:13,300
누가

7276
01:03:13,300 --> 01:03:13,900
알려주냐?

7277
01:03:14,340 --> 01:03:14,440
이

7278
01:03:14,440 --> 01:03:14,940
매체에

7279
01:03:14,940 --> 01:03:15,200
함께

7280
01:03:15,200 --> 01:03:16,020
들어있는

7281
01:03:16,460 --> 01:03:16,680
이후에

7282
01:03:16,680 --> 01:03:17,180
논의할

7283
01:03:17,180 --> 01:03:17,740
컨트롤

7284
01:03:17,740 --> 01:03:18,440
시그널들이

7285
01:03:18,440 --> 01:03:18,940
딱딱딱

7286
01:03:18,940 --> 01:03:19,440
내려줍니다.

7287
01:03:20,180 --> 01:03:20,400
컨트롤

7288
01:03:20,400 --> 01:03:21,080
시그널들이

7289
01:03:21,080 --> 01:03:21,620
현재

7290
01:03:21,620 --> 01:03:22,020
데이터

7291
01:03:22,020 --> 01:03:22,640
메모리면

7292
01:03:22,640 --> 01:03:23,060
이

7293
01:03:23,120 --> 01:03:23,400
데이터

7294
01:03:23,400 --> 01:03:23,800
메모리에

7295
01:03:23,800 --> 01:03:24,140
들어가는

7296
01:03:24,140 --> 01:03:24,460
컨트롤

7297
01:03:24,460 --> 01:03:24,800
시그널

7298
01:03:24,800 --> 01:03:25,000
두

7299
01:03:25,040 --> 01:03:25,140
개

7300
01:03:25,140 --> 01:03:25,460
있다고

7301
01:03:25,460 --> 01:03:26,960
우리가

7302
01:03:26,960 --> 01:03:27,460
배웠죠?

7303
01:03:28,020 --> 01:03:28,120
메모리

7304
01:03:28,120 --> 01:03:28,600
read랑

7305
01:03:28,600 --> 01:03:29,000
메모리

7306
01:03:29,000 --> 01:03:29,420
write

7307
01:03:29,420 --> 01:03:30,120
있다고

7308
01:03:30,120 --> 01:03:30,800
배웠는데,

7309
01:03:31,640 --> 01:03:32,220
로드워드

7310
01:03:32,220 --> 01:03:32,900
명령어면

7311
01:03:32,900 --> 01:03:34,180
write는

7312
01:03:34,180 --> 01:03:34,540
0일

7313
01:03:34,540 --> 01:03:34,800
거고

7314
01:03:34,800 --> 01:03:35,320
read는

7315
01:03:35,320 --> 01:03:35,680
1일

7316
01:03:35,680 --> 01:03:35,800
겁니다.

7317
01:03:36,460 --> 01:03:36,800
그러면

7318
01:03:37,060 --> 01:03:37,560
read면

7319
01:03:37,560 --> 01:03:37,940
이

7320
01:03:37,940 --> 01:03:38,340
ALU

7321
01:03:38,340 --> 01:03:38,980
리설트를

7322
01:03:38,980 --> 01:03:39,620
address로

7323
01:03:39,620 --> 01:03:40,140
삼아서

7324
01:03:40,140 --> 01:03:40,540
데이터

7325
01:03:40,680 --> 01:03:41,100
4바이트를

7326
01:03:41,100 --> 01:03:41,420
툭

7327
01:03:41,420 --> 01:03:41,600
뱉어내겠죠.

7328
01:03:42,680 --> 01:03:42,780
그런데

7329
01:03:42,780 --> 01:03:43,020
만약

7330
01:03:43,020 --> 01:03:43,280
add

7331
01:03:43,280 --> 01:03:43,930
명령어였다?

7332
01:03:44,280 --> 01:03:44,420
그럼

7333
01:03:44,420 --> 01:03:44,880
0, 0.

7334
01:03:45,100 --> 01:03:45,200
그래서

7335
01:03:45,200 --> 01:03:45,540
데이터

7336
01:03:45,540 --> 01:03:45,760
메모리

7337
01:03:45,760 --> 01:03:46,120
아무것도

7338
01:03:46,120 --> 01:03:46,260
안

7339
01:03:46,260 --> 01:03:46,600
뱉어낼

7340
01:03:46,600 --> 01:03:46,740
겁니다.

7341
01:03:47,540 --> 01:03:47,660
그런

7342
01:03:47,660 --> 01:03:48,120
식으로

7343
01:03:48,120 --> 01:03:49,200
실제

7344
01:03:49,200 --> 01:03:49,520
각

7345
01:03:49,520 --> 01:03:49,960
5X

7346
01:03:50,160 --> 01:03:50,740
스테이지에서

7347
01:03:51,180 --> 01:03:51,300
그

7348
01:03:51,300 --> 01:03:51,740
명령에

7349
01:03:51,740 --> 01:03:52,600
해당하는

7350
01:03:52,960 --> 01:03:53,240
실제

7351
01:03:53,240 --> 01:03:53,820
하드웨어

7352
01:03:53,820 --> 01:03:54,580
비헤이디어를

7353
01:03:54,580 --> 01:03:55,960
트리거시키게

7354
01:03:55,960 --> 01:03:56,200
되는

7355
01:03:56,200 --> 01:03:56,700
거다.

7356
01:03:56,820 --> 01:03:56,920
라고

7357
01:03:56,920 --> 01:03:57,280
하시면

7358
01:03:57,280 --> 01:03:57,520
됩니다.

7359
01:03:58,720 --> 01:03:58,920
자,

7360
01:03:59,040 --> 01:03:59,120
그럼

7361
01:03:59,120 --> 01:03:59,340
write

7362
01:03:59,340 --> 01:03:59,500
-back

7363
01:03:59,500 --> 01:04:00,120
스테이지는

7364
01:04:00,120 --> 01:04:00,340
이제

7365
01:04:00,340 --> 01:04:00,880
destination

7366
01:04:00,880 --> 01:04:01,400
register로

7367
01:04:01,400 --> 01:04:01,560
쓰는

7368
01:04:01,560 --> 01:04:01,860
겁니다.

7369
01:04:02,280 --> 01:04:02,420
그래서

7370
01:04:02,420 --> 01:04:02,700
write

7371
01:04:02,700 --> 01:04:02,860
-back

7372
01:04:03,020 --> 01:04:03,160
스테이지

7373
01:04:03,160 --> 01:04:03,800
통해서

7374
01:04:03,800 --> 01:04:04,380
우리가

7375
01:04:04,380 --> 01:04:05,020
destination

7376
01:04:05,140 --> 01:04:05,540
register에

7377
01:04:05,540 --> 01:04:05,960
쓰게

7378
01:04:05,960 --> 01:04:06,140
되는

7379
01:04:06,140 --> 01:04:06,460
건데,

7380
01:04:06,920 --> 01:04:07,020
제가

7381
01:04:07,020 --> 01:04:07,920
이전에

7382
01:04:08,220 --> 01:04:08,320
write

7383
01:04:08,320 --> 01:04:08,940
-register랑

7384
01:04:08,940 --> 01:04:09,220
write

7385
01:04:09,220 --> 01:04:09,660
-data,

7386
01:04:09,920 --> 01:04:10,020
이

7387
01:04:10,300 --> 01:04:10,400
register

7388
01:04:10,400 --> 01:04:10,740
바이를

7389
01:04:10,740 --> 01:04:11,000
두

7390
01:04:11,000 --> 01:04:11,140
개

7391
01:04:11,140 --> 01:04:11,680
포트는

7392
01:04:11,680 --> 01:04:12,360
사실은

7393
01:04:12,360 --> 01:04:12,660
write

7394
01:04:12,660 --> 01:04:13,420
-back의

7395
01:04:13,420 --> 01:04:14,120
하드웨어

7396
01:04:14,120 --> 01:04:14,760
컴포넌트다.

7397
01:04:15,000 --> 01:04:15,200
라고

7398
01:04:15,200 --> 01:04:15,980
생각하시라고

7399
01:04:16,100 --> 01:04:16,540
말씀을

7400
01:04:16,540 --> 01:04:16,960
드렸죠.

7401
01:04:17,240 --> 01:04:17,440
왜냐하면

7402
01:04:17,480 --> 01:04:17,880
destination

7403
01:04:17,960 --> 01:04:18,240
register

7404
01:04:18,480 --> 01:04:18,620
쓰는

7405
01:04:18,620 --> 01:04:18,940
것은

7406
01:04:18,940 --> 01:04:19,520
write

7407
01:04:19,540 --> 01:04:19,720
-back

7408
01:04:19,720 --> 01:04:19,820
스테이지니까.

7409
01:04:21,360 --> 01:04:21,580
그리고

7410
01:04:21,580 --> 01:04:22,640
실제

7411
01:04:22,640 --> 01:04:23,120
destination

7412
01:04:23,120 --> 01:04:23,500
register

7413
01:04:23,500 --> 01:04:23,940
쓰는

7414
01:04:23,940 --> 01:04:24,100
행위,

7415
01:04:24,560 --> 01:04:24,920
어딘가

7416
01:04:24,920 --> 01:04:25,220
우리가

7417
01:04:25,220 --> 01:04:25,460
shared

7418
01:04:25,460 --> 01:04:26,040
resource에

7419
01:04:26,040 --> 01:04:26,280
쓰는

7420
01:04:26,280 --> 01:04:26,800
행위는

7421
01:04:26,800 --> 01:04:27,400
반드시

7422
01:04:27,400 --> 01:04:28,080
초반고

7423
01:04:28,080 --> 01:04:28,320
half

7424
01:04:28,420 --> 01:04:28,540
-clock

7425
01:04:28,540 --> 01:04:28,860
cycle

7426
01:04:28,900 --> 01:04:29,000
내에

7427
01:04:29,000 --> 01:04:29,700
일어난다.

7428
01:04:29,840 --> 01:04:30,000
라고

7429
01:04:30,360 --> 01:04:30,620
말씀드렸기

7430
01:04:30,680 --> 01:04:31,000
때문에

7431
01:04:31,000 --> 01:04:31,520
첫

7432
01:04:31,520 --> 01:04:31,760
half

7433
01:04:31,880 --> 01:04:31,980
-clock

7434
01:04:31,980 --> 01:04:32,320
cycle

7435
01:04:32,400 --> 01:04:32,700
내에서

7436
01:04:32,700 --> 01:04:33,200
write

7437
01:04:33,200 --> 01:04:33,380
-back

7438
01:04:33,420 --> 01:04:33,980
행동이

7439
01:04:33,980 --> 01:04:34,560
끝납니다.

7440
01:04:35,660 --> 01:04:35,820
그리고

7441
01:04:35,820 --> 01:04:36,300
여기도

7442
01:04:36,300 --> 01:04:36,660
이제

7443
01:04:36,660 --> 01:04:36,920
두

7444
01:04:36,920 --> 01:04:37,140
가지

7445
01:04:37,140 --> 01:04:37,440
경로

7446
01:04:37,440 --> 01:04:37,700
중에

7447
01:04:37,700 --> 01:04:38,380
멀티플렉서

7448
01:04:38,480 --> 01:04:38,720
고르는

7449
01:04:38,720 --> 01:04:38,940
거.

7450
01:04:39,200 --> 01:04:39,300
우리가

7451
01:04:39,300 --> 01:04:39,640
single

7452
01:04:39,640 --> 01:04:39,960
cycle

7453
01:04:39,960 --> 01:04:40,720
CPU인데,

7454
01:04:41,160 --> 01:04:42,000
로드워드였으면

7455
01:04:42,000 --> 01:04:42,380
데이터

7456
01:04:42,420 --> 01:04:42,740
메모리를

7457
01:04:42,740 --> 01:04:43,080
생겨놓은

7458
01:04:43,080 --> 01:04:43,700
4바이트,

7459
01:04:44,180 --> 01:04:44,280
만약

7460
01:04:44,280 --> 01:04:44,920
로드워드가

7461
01:04:44,920 --> 01:04:45,120
아니라

7462
01:04:45,120 --> 01:04:45,440
add

7463
01:04:45,440 --> 01:04:45,660
-sub

7464
01:04:45,660 --> 01:04:45,880
같은

7465
01:04:45,880 --> 01:04:46,420
아이스맥킹

7466
01:04:46,420 --> 01:04:47,020
연산이었다?

7467
01:04:47,440 --> 01:04:47,540
그러면

7468
01:04:47,540 --> 01:04:48,180
ALU

7469
01:04:48,180 --> 01:04:48,720
output이

7470
01:04:48,720 --> 01:04:49,340
들어가야겠죠.

7471
01:04:49,980 --> 01:04:50,120
그러면

7472
01:04:50,120 --> 01:04:50,640
ALU

7473
01:04:50,640 --> 01:04:51,160
output을

7474
01:04:51,160 --> 01:04:51,540
쓰느냐,

7475
01:04:51,660 --> 01:04:51,980
데이터

7476
01:04:51,980 --> 01:04:52,280
메모리를

7477
01:04:52,280 --> 01:04:52,620
생겨놓은

7478
01:04:52,620 --> 01:04:52,760
것을

7479
01:04:52,760 --> 01:04:53,060
쓰느냐,

7480
01:04:53,180 --> 01:04:53,300
이

7481
01:04:53,520 --> 01:04:53,640
컨트롤

7482
01:04:53,640 --> 01:04:54,160
시그널도

7483
01:04:54,160 --> 01:04:54,700
이

7484
01:04:55,060 --> 01:04:55,200
렌치에

7485
01:04:55,380 --> 01:04:55,480
함께

7486
01:04:55,480 --> 01:04:55,980
포함이

7487
01:04:56,000 --> 01:04:56,100
되어

7488
01:04:56,100 --> 01:04:56,380
있는

7489
01:04:56,380 --> 01:04:56,540
겁니다.

7490
01:04:57,380 --> 01:04:57,540
그러면

7491
01:04:57,540 --> 01:04:57,900
이

7492
01:04:57,900 --> 01:04:58,260
컨트롤

7493
01:04:58,260 --> 01:04:58,980
시그널은

7494
01:05:00,380 --> 01:05:00,620
여기에

7495
01:05:00,620 --> 01:05:01,160
저장되어

7496
01:05:01,160 --> 01:05:01,600
있으려면

7497
01:05:01,600 --> 01:05:01,860
그

7498
01:05:01,860 --> 01:05:02,120
전에

7499
01:05:02,120 --> 01:05:02,500
여기에

7500
01:05:02,500 --> 01:05:03,040
저장되어

7501
01:05:03,040 --> 01:05:03,480
있었어야

7502
01:05:03,480 --> 01:05:03,740
된다는

7503
01:05:03,740 --> 01:05:04,120
소리고,

7504
01:05:04,620 --> 01:05:04,740
또

7505
01:05:04,740 --> 01:05:05,060
그

7506
01:05:05,060 --> 01:05:05,280
전에

7507
01:05:05,280 --> 01:05:05,640
여기에

7508
01:05:05,640 --> 01:05:06,160
저장되어

7509
01:05:06,160 --> 01:05:06,560
있었어야

7510
01:05:06,800 --> 01:05:06,920
된다는

7511
01:05:06,920 --> 01:05:07,320
소리에요.

7512
01:05:07,980 --> 01:05:08,160
그리고

7513
01:05:08,160 --> 01:05:08,560
우리가

7514
01:05:08,560 --> 01:05:09,060
id

7515
01:05:09,060 --> 01:05:09,960
스테이지에서

7516
01:05:09,960 --> 01:05:10,560
컨트롤

7517
01:05:10,560 --> 01:05:11,040
유닛을

7518
01:05:11,040 --> 01:05:11,360
넣기

7519
01:05:11,660 --> 01:05:11,760
때문에

7520
01:05:11,760 --> 01:05:12,540
이

7521
01:05:12,540 --> 01:05:13,000
컨트롤

7522
01:05:13,000 --> 01:05:13,680
유닛은

7523
01:05:14,180 --> 01:05:14,540
write

7524
01:05:14,540 --> 01:05:14,880
-back을

7525
01:05:14,880 --> 01:05:15,080
위한

7526
01:05:15,080 --> 01:05:15,580
컨트롤

7527
01:05:15,580 --> 01:05:16,380
시그널은

7528
01:05:16,380 --> 01:05:17,160
id

7529
01:05:17,320 --> 01:05:17,660
ex

7530
01:05:17,700 --> 01:05:18,080
-mem

7531
01:05:18,540 --> 01:05:18,680
-1

7532
01:05:18,680 --> 01:05:19,360
렌치

7533
01:05:19,360 --> 01:05:19,980
거치고,

7534
01:05:20,080 --> 01:05:20,340
ex

7535
01:05:20,480 --> 01:05:20,660
-mem

7536
01:05:20,680 --> 01:05:20,780
-1

7537
01:05:20,780 --> 01:05:21,040
렌치

7538
01:05:21,040 --> 01:05:21,690
거치고,

7539
01:05:21,820 --> 01:05:22,000
mem

7540
01:05:22,000 --> 01:05:22,760
-wb

7541
01:05:22,860 --> 01:05:23,160
렌치

7542
01:05:23,480 --> 01:05:23,760
거쳐서

7543
01:05:24,000 --> 01:05:24,480
비로소야

7544
01:05:24,480 --> 01:05:25,000
마지막에

7545
01:05:25,000 --> 01:05:25,540
소거되는

7546
01:05:25,540 --> 01:05:25,640
형태다.

7547
01:05:26,500 --> 01:05:26,680
라고

7548
01:05:26,680 --> 01:05:27,340
생각하셔도

7549
01:05:27,340 --> 01:05:27,840
됩니다.

7550
01:05:28,360 --> 01:05:28,460
그럼

7551
01:05:28,460 --> 01:05:28,760
데이터

7552
01:05:28,760 --> 01:05:29,100
메모리를

7553
01:05:29,100 --> 01:05:29,300
위한

7554
01:05:29,300 --> 01:05:29,640
컨트롤

7555
01:05:29,640 --> 01:05:30,580
시그널은

7556
01:05:30,700 --> 01:05:30,840
또

7557
01:05:30,840 --> 01:05:31,520
추가로

7558
01:05:31,520 --> 01:05:31,720
있을

7559
01:05:31,720 --> 01:05:32,000
텐데

7560
01:05:32,000 --> 01:05:32,640
얘도

7561
01:05:32,640 --> 01:05:33,000
id

7562
01:05:33,320 --> 01:05:33,420
ex

7563
01:05:33,420 --> 01:05:33,900
-mem

7564
01:05:33,900 --> 01:05:33,960
-1에

7565
01:05:33,960 --> 01:05:34,580
해서

7566
01:05:34,580 --> 01:05:35,000
여기서

7567
01:05:35,000 --> 01:05:35,440
쓰이고,

7568
01:05:36,600 --> 01:05:36,760
만약

7569
01:05:36,760 --> 01:05:37,160
ex

7570
01:05:37,160 --> 01:05:37,460
-control

7571
01:05:37,460 --> 01:05:37,960
-signal이

7572
01:05:37,960 --> 01:05:38,100
있다?

7573
01:05:38,580 --> 01:05:38,760
여기

7574
01:05:38,820 --> 01:05:39,020
있을

7575
01:05:39,040 --> 01:05:39,220
건데

7576
01:05:39,360 --> 01:05:39,580
여기서

7577
01:05:39,860 --> 01:05:39,960
쓰이고

7578
01:05:39,960 --> 01:05:40,420
끝나겠죠.

7579
01:05:41,260 --> 01:05:41,360
그래서

7580
01:05:41,360 --> 01:05:42,020
렌치들이

7581
01:05:42,020 --> 01:05:42,760
상대적으로

7582
01:05:42,760 --> 01:05:43,200
뒤로

7583
01:05:43,200 --> 01:05:43,540
가면

7584
01:05:43,540 --> 01:05:44,140
갈수록

7585
01:05:44,600 --> 01:05:44,700
담고

7586
01:05:44,700 --> 01:05:44,860
있는

7587
01:05:44,860 --> 01:05:45,340
정보가

7588
01:05:45,340 --> 01:05:46,080
약간씩은

7589
01:05:46,080 --> 01:05:46,480
줄어드는

7590
01:05:46,480 --> 01:05:47,020
패턴을

7591
01:05:47,120 --> 01:05:47,400
보이게

7592
01:05:47,400 --> 01:05:47,500
됩니다.

7593
01:05:48,400 --> 01:05:48,520
뒤로

7594
01:05:48,520 --> 01:05:48,760
가면

7595
01:05:48,760 --> 01:05:49,120
갈수록

7596
01:05:49,120 --> 01:05:49,460
필요한

7597
01:05:49,700 --> 01:05:49,860
정보가

7598
01:05:49,860 --> 01:05:50,440
줄어들게

7599
01:05:50,440 --> 01:05:50,640
됩니다.

7600
01:05:50,900 --> 01:05:51,180
그런

7601
01:05:51,460 --> 01:05:51,640
패턴이

7602
01:05:51,640 --> 01:05:52,260
있다고

7603
01:05:52,360 --> 01:05:53,160
알아두셔도

7604
01:05:53,160 --> 01:05:53,260
좋습니다.

7605
01:05:54,660 --> 01:05:54,760
자

7606
01:05:54,760 --> 01:05:54,960
그럼

7607
01:05:54,960 --> 01:05:56,140
스토어워드를

7608
01:05:56,140 --> 01:05:56,960
판다라고

7609
01:05:56,960 --> 01:05:57,480
치면,

7610
01:05:57,880 --> 01:05:58,400
방금까지

7611
01:05:58,400 --> 01:05:59,080
로드워드였어요.

7612
01:05:59,660 --> 01:05:59,800
그럼

7613
01:05:59,800 --> 01:06:00,420
스토어워드는

7614
01:06:00,420 --> 01:06:00,700
아예

7615
01:06:00,700 --> 01:06:00,920
필요한

7616
01:06:00,920 --> 01:06:01,220
id는

7617
01:06:01,220 --> 01:06:01,700
똑같습니다.

7618
01:06:02,180 --> 01:06:02,280
그러면

7619
01:06:02,280 --> 01:06:02,880
id까지

7620
01:06:02,880 --> 01:06:03,220
하고

7621
01:06:03,220 --> 01:06:03,600
나면

7622
01:06:03,600 --> 01:06:03,960
id

7623
01:06:03,960 --> 01:06:04,340
ex

7624
01:06:04,440 --> 01:06:05,100
-ex

7625
01:06:05,180 --> 01:06:05,360
-mem

7626
01:06:05,360 --> 01:06:05,440
-1

7627
01:06:05,440 --> 01:06:05,560
렌치,

7628
01:06:05,920 --> 01:06:06,020
즉

7629
01:06:06,020 --> 01:06:06,320
id

7630
01:06:06,320 --> 01:06:06,740
ex를

7631
01:06:06,920 --> 01:06:07,160
인표대로

7632
01:06:07,160 --> 01:06:07,680
받아서

7633
01:06:07,680 --> 01:06:08,240
ex

7634
01:06:08,260 --> 01:06:08,460
-mem

7635
01:06:08,460 --> 01:06:08,560
-1

7636
01:06:08,560 --> 01:06:08,960
렌치에다가

7637
01:06:08,960 --> 01:06:09,480
output을

7638
01:06:09,480 --> 01:06:09,580
쓰는

7639
01:06:10,480 --> 01:06:10,760
execution,

7640
01:06:11,020 --> 01:06:11,340
ex

7641
01:06:11,380 --> 01:06:12,460
-pipeline

7642
01:06:12,640 --> 01:06:13,400
-page에서

7643
01:06:13,400 --> 01:06:13,840
실행을

7644
01:06:13,840 --> 01:06:14,040
하게

7645
01:06:14,040 --> 01:06:14,420
되는데,

7646
01:06:15,560 --> 01:06:15,760
일단

7647
01:06:15,760 --> 01:06:16,120
immediate

7648
01:06:16,120 --> 01:06:16,540
value를

7649
01:06:16,540 --> 01:06:17,300
받아서

7650
01:06:19,040 --> 01:06:20,040
target

7651
01:06:20,040 --> 01:06:20,780
주소

7652
01:06:20,780 --> 01:06:21,280
rs

7653
01:06:21,440 --> 01:06:21,620
plus

7654
01:06:21,680 --> 01:06:22,060
immediate

7655
01:06:22,200 --> 01:06:22,580
value를

7656
01:06:22,760 --> 01:06:22,920
저장을

7657
01:06:22,920 --> 01:06:23,320
하게

7658
01:06:23,320 --> 01:06:23,760
되고,

7659
01:06:24,480 --> 01:06:24,660
그런

7660
01:06:24,660 --> 01:06:25,160
다음에

7661
01:06:25,160 --> 01:06:26,410
write니까,

7662
01:06:27,520 --> 01:06:28,040
데이터

7663
01:06:28,040 --> 01:06:28,320
메모리

7664
01:06:28,320 --> 01:06:28,940
write죠.

7665
01:06:29,380 --> 01:06:29,480
데이터

7666
01:06:29,480 --> 01:06:29,760
메모리

7667
01:06:29,760 --> 01:06:30,520
write이기

7668
01:06:30,520 --> 01:06:30,780
때문에

7669
01:06:30,780 --> 01:06:31,120
한

7670
01:06:31,120 --> 01:06:31,380
클럭

7671
01:06:31,440 --> 01:06:31,880
사이클의

7672
01:06:31,880 --> 01:06:32,320
초반

7673
01:06:32,320 --> 01:06:32,820
절반부에

7674
01:06:32,820 --> 01:06:33,200
끝나게

7675
01:06:33,200 --> 01:06:33,500
됩니다.

7676
01:06:33,740 --> 01:06:34,060
데이터

7677
01:06:34,060 --> 01:06:34,520
메모리에

7678
01:06:34,520 --> 01:06:34,780
대한

7679
01:06:34,780 --> 01:06:35,100
write.

7680
01:06:35,720 --> 01:06:35,820
이게

7681
01:06:35,820 --> 01:06:36,660
로드워드

7682
01:06:36,660 --> 01:06:37,240
그림이랑

7683
01:06:37,240 --> 01:06:37,600
비교를

7684
01:06:37,600 --> 01:06:38,060
해보시면,

7685
01:06:38,600 --> 01:06:39,240
로드워드는

7686
01:06:39,240 --> 01:06:40,240
한

7687
01:06:40,240 --> 01:06:40,420
클럭

7688
01:06:40,420 --> 01:06:40,840
사이클의

7689
01:06:40,840 --> 01:06:41,420
후반부에

7690
01:06:41,420 --> 01:06:41,840
일어나는

7691
01:06:41,840 --> 01:06:42,100
것처럼

7692
01:06:42,100 --> 01:06:42,500
그려져

7693
01:06:42,500 --> 01:06:42,820
있어요.

7694
01:06:43,620 --> 01:06:43,720
그런데

7695
01:06:43,720 --> 01:06:44,580
스토어워드는

7696
01:06:45,120 --> 01:06:45,220
같은

7697
01:06:45,220 --> 01:06:45,880
pipeline

7698
01:06:45,880 --> 01:06:46,680
스테이지이고,

7699
01:06:46,780 --> 01:06:47,000
같은

7700
01:06:47,000 --> 01:06:47,940
행동이지만

7701
01:06:47,940 --> 01:06:48,920
write이기

7702
01:06:48,920 --> 01:06:49,300
때문에

7703
01:06:49,300 --> 01:06:49,820
첫

7704
01:06:49,820 --> 01:06:50,100
하프

7705
01:06:50,260 --> 01:06:50,360
클럭

7706
01:06:50,360 --> 01:06:50,760
사이클

7707
01:06:50,800 --> 01:06:50,940
내에

7708
01:06:50,940 --> 01:06:51,440
끝나는

7709
01:06:51,460 --> 01:06:51,740
것으로

7710
01:06:51,740 --> 01:06:52,060
우리가

7711
01:06:52,240 --> 01:06:52,460
가정을

7712
01:06:52,460 --> 01:06:52,880
하겠다.

7713
01:06:53,280 --> 01:06:53,380
라고

7714
01:06:53,380 --> 01:06:53,780
말씀을

7715
01:06:53,780 --> 01:06:54,260
드렸고,

7716
01:06:54,780 --> 01:06:54,920
그거를

7717
01:06:54,920 --> 01:06:55,740
나타내고

7718
01:06:55,740 --> 01:06:56,100
있는

7719
01:06:56,100 --> 01:06:56,720
것입니다.

7720
01:06:57,400 --> 01:06:57,600
첫

7721
01:06:57,700 --> 01:06:58,140
절반이

7722
01:06:58,340 --> 01:06:58,440
이제

7723
01:06:58,440 --> 01:06:58,780
저렇게

7724
01:06:58,780 --> 01:06:59,360
나오고,

7725
01:07:00,540 --> 01:07:00,640
그래

7726
01:07:00,640 --> 01:07:00,980
놓고

7727
01:07:00,980 --> 01:07:01,240
write

7728
01:07:01,240 --> 01:07:01,980
backstage에서는

7729
01:07:01,980 --> 01:07:02,220
이제

7730
01:07:02,220 --> 01:07:02,580
아무것도

7731
01:07:02,580 --> 01:07:02,960
안합니다.

7732
01:07:03,580 --> 01:07:03,740
진짜

7733
01:07:03,740 --> 01:07:04,240
literally

7734
01:07:04,240 --> 01:07:04,900
아무것도

7735
01:07:04,900 --> 01:07:05,520
안해요.

7736
01:07:06,040 --> 01:07:06,160
자

7737
01:07:06,300 --> 01:07:06,520
그러면

7738
01:07:06,520 --> 01:07:06,760
이게

7739
01:07:06,760 --> 01:07:07,380
아무것도

7740
01:07:07,380 --> 01:07:07,780
안하게

7741
01:07:07,780 --> 01:07:08,060
되는

7742
01:07:08,060 --> 01:07:08,580
이유가

7743
01:07:08,580 --> 01:07:08,980
뭐냐?

7744
01:07:09,160 --> 01:07:09,260
라고

7745
01:07:09,260 --> 01:07:09,440
할

7746
01:07:09,440 --> 01:07:09,540
수

7747
01:07:09,540 --> 01:07:09,820
있는데,

7748
01:07:10,600 --> 01:07:10,760
사실

7749
01:07:10,760 --> 01:07:11,080
지금

7750
01:07:11,080 --> 01:07:11,360
아직

7751
01:07:11,360 --> 01:07:11,700
컨트롤

7752
01:07:11,700 --> 01:07:12,020
시그널

7753
01:07:12,020 --> 01:07:12,380
논의를

7754
01:07:12,380 --> 01:07:12,580
안

7755
01:07:12,580 --> 01:07:13,100
했으니까

7756
01:07:13,100 --> 01:07:13,460
여기에

7757
01:07:13,460 --> 01:07:13,900
표현은

7758
01:07:13,900 --> 01:07:14,060
안

7759
01:07:14,060 --> 01:07:14,160
돼

7760
01:07:14,160 --> 01:07:14,460
있지만,

7761
01:07:15,280 --> 01:07:15,440
우리가

7762
01:07:15,440 --> 01:07:15,720
그때

7763
01:07:15,720 --> 01:07:17,000
reswrite라는

7764
01:07:17,000 --> 01:07:17,600
컨트롤

7765
01:07:17,600 --> 01:07:18,020
시그널이

7766
01:07:18,040 --> 01:07:18,400
있다.

7767
01:07:18,780 --> 01:07:18,900
라고

7768
01:07:18,900 --> 01:07:19,180
single

7769
01:07:19,180 --> 01:07:19,460
-sided

7770
01:07:19,460 --> 01:07:19,940
cpu를

7771
01:07:19,940 --> 01:07:20,160
배웠습니다.

7772
01:07:21,080 --> 01:07:21,240
근데

7773
01:07:21,240 --> 01:07:21,440
저

7774
01:07:21,440 --> 01:07:21,960
reswrite

7775
01:07:21,960 --> 01:07:22,480
시그널은

7776
01:07:22,480 --> 01:07:22,620
뭐

7777
01:07:22,620 --> 01:07:22,920
했냐면,

7778
01:07:23,860 --> 01:07:24,060
우리가

7779
01:07:24,060 --> 01:07:24,780
이번

7780
01:07:24,780 --> 01:07:25,420
명령어를

7781
01:07:25,420 --> 01:07:25,880
실행을

7782
01:07:25,880 --> 01:07:26,080
하는

7783
01:07:26,080 --> 01:07:26,260
데

7784
01:07:26,260 --> 01:07:26,620
있어서

7785
01:07:26,620 --> 01:07:27,200
어떤

7786
01:07:27,200 --> 01:07:27,640
특정

7787
01:07:27,640 --> 01:07:28,200
destination

7788
01:07:28,560 --> 01:07:28,880
register의

7789
01:07:28,880 --> 01:07:29,460
색값을

7790
01:07:29,580 --> 01:07:29,860
써야

7791
01:07:29,860 --> 01:07:30,100
되냐

7792
01:07:30,100 --> 01:07:30,620
말아야

7793
01:07:30,620 --> 01:07:30,860
되냐

7794
01:07:30,880 --> 01:07:30,980
를

7795
01:07:30,980 --> 01:07:31,460
나타내는

7796
01:07:31,460 --> 01:07:31,800
컨트롤

7797
01:07:31,940 --> 01:07:32,360
시그널이라고

7798
01:07:32,360 --> 01:07:32,660
했어요.

7799
01:07:33,300 --> 01:07:33,400
근데

7800
01:07:33,400 --> 01:07:34,100
스토어워드는

7801
01:07:34,100 --> 01:07:34,660
이

7802
01:07:34,680 --> 01:07:35,120
값이

7803
01:07:35,120 --> 01:07:35,660
0이

7804
01:07:35,660 --> 01:07:35,800
되겠죠?

7805
01:07:36,360 --> 01:07:36,460
왜냐하면

7806
01:07:36,460 --> 01:07:36,760
우리가

7807
01:07:36,760 --> 01:07:37,040
새로운

7808
01:07:37,040 --> 01:07:37,420
register

7809
01:07:37,420 --> 01:07:37,700
값을

7810
01:07:37,700 --> 01:07:37,980
쓰는게

7811
01:07:37,980 --> 01:07:38,480
아니니까.

7812
01:07:39,140 --> 01:07:39,280
그럼

7813
01:07:39,280 --> 01:07:39,480
이

7814
01:07:39,480 --> 01:07:39,880
0이라는

7815
01:07:39,880 --> 01:07:40,240
값은

7816
01:07:40,240 --> 01:07:40,740
어디서

7817
01:07:40,740 --> 01:07:41,300
오냐?

7818
01:07:42,360 --> 01:07:42,800
여기에서

7819
01:07:42,800 --> 01:07:43,040
오는

7820
01:07:43,040 --> 01:07:43,400
겁니다.

7821
01:07:44,460 --> 01:07:45,080
메모리와

7822
01:07:45,080 --> 01:07:45,680
writeback

7823
01:07:45,680 --> 01:07:46,340
사이의

7824
01:07:46,340 --> 01:07:47,200
랫치에서,

7825
01:07:48,260 --> 01:07:48,320
내가

7826
01:07:48,320 --> 01:07:48,780
이제

7827
01:07:48,780 --> 01:07:49,260
너가

7828
01:07:49,260 --> 01:07:49,580
다음

7829
01:07:49,580 --> 01:07:50,220
클락사이클에

7830
01:07:50,220 --> 01:07:50,800
시행할

7831
01:07:50,800 --> 01:07:51,620
writeback에

7832
01:07:51,620 --> 01:07:52,100
해당하는

7833
01:07:52,100 --> 01:07:52,620
컨트롤

7834
01:07:52,620 --> 01:07:53,340
시그널들

7835
01:07:53,340 --> 01:07:53,540
중

7836
01:07:53,540 --> 01:07:54,040
하나인

7837
01:07:54,040 --> 01:07:54,920
reswrite나

7838
01:07:54,920 --> 01:07:55,380
컨트롤

7839
01:07:55,380 --> 01:07:55,760
시그널

7840
01:07:55,760 --> 01:07:56,220
값은

7841
01:07:56,220 --> 01:07:56,540
0

7842
01:07:56,540 --> 01:07:57,120
이란다.

7843
01:07:57,640 --> 01:07:57,900
라는게

7844
01:07:57,900 --> 01:07:58,200
저

7845
01:07:58,600 --> 01:07:58,720
랫치에

7846
01:07:58,720 --> 01:07:59,220
적혀있는

7847
01:07:59,220 --> 01:07:59,920
것입니다.

7848
01:08:00,840 --> 01:08:01,020
근데

7849
01:08:01,020 --> 01:08:01,940
현재

7850
01:08:01,940 --> 01:08:03,180
같은

7851
01:08:03,180 --> 01:08:04,020
클락사이클에

7852
01:08:04,020 --> 01:08:05,200
메모리

7853
01:08:05,200 --> 01:08:05,720
액세스

7854
01:08:05,960 --> 01:08:06,300
스테이지를

7855
01:08:06,300 --> 01:08:06,780
수행을

7856
01:08:06,780 --> 01:08:06,980
하고

7857
01:08:06,980 --> 01:08:07,220
있는

7858
01:08:07,220 --> 01:08:07,560
add

7859
01:08:07,560 --> 01:08:08,040
명령어가

7860
01:08:08,040 --> 01:08:08,380
있다고

7861
01:08:08,380 --> 01:08:08,680
해봅시다.

7862
01:08:09,460 --> 01:08:09,620
그러면

7863
01:08:09,620 --> 01:08:09,860
그

7864
01:08:09,860 --> 01:08:10,220
add

7865
01:08:10,220 --> 01:08:10,840
명령어의

7866
01:08:10,840 --> 01:08:11,340
경우에는

7867
01:08:11,340 --> 01:08:12,700
결국에는

7868
01:08:12,700 --> 01:08:13,500
destination

7869
01:08:13,500 --> 01:08:14,020
register

7870
01:08:14,020 --> 01:08:14,300
쓸

7871
01:08:14,300 --> 01:08:14,680
거니까

7872
01:08:14,680 --> 01:08:15,600
reswrite란

7873
01:08:15,600 --> 01:08:15,940
값이

7874
01:08:16,180 --> 01:08:16,400
1이

7875
01:08:16,640 --> 01:08:16,780
있어야

7876
01:08:16,780 --> 01:08:17,040
돼요.

7877
01:08:17,780 --> 01:08:17,960
그러면

7878
01:08:17,960 --> 01:08:18,800
똑같은

7879
01:08:18,800 --> 01:08:19,200
컨트롤

7880
01:08:19,200 --> 01:08:19,740
시그널을

7881
01:08:19,740 --> 01:08:20,620
나타내지만

7882
01:08:21,060 --> 01:08:21,400
ex

7883
01:08:21,460 --> 01:08:22,240
-map에서는

7884
01:08:22,240 --> 01:08:22,840
해당

7885
01:08:22,840 --> 01:08:23,500
위치에

7886
01:08:23,820 --> 01:08:24,200
1이라는

7887
01:08:24,200 --> 01:08:24,600
값이

7888
01:08:24,600 --> 01:08:25,560
저장되게

7889
01:08:25,560 --> 01:08:25,900
됩니다.

7890
01:08:26,520 --> 01:08:26,820
하지만

7891
01:08:26,820 --> 01:08:27,160
이

7892
01:08:27,160 --> 01:08:27,720
1이라는

7893
01:08:27,720 --> 01:08:28,660
값은

7894
01:08:28,760 --> 01:08:29,080
아직

7895
01:08:29,080 --> 01:08:29,980
저게

7896
01:08:29,980 --> 01:08:31,220
writeback에

7897
01:08:31,220 --> 01:08:31,460
쓰이는

7898
01:08:31,460 --> 01:08:31,920
컨트롤

7899
01:08:32,090 --> 01:08:32,940
시그널이지만

7900
01:08:33,220 --> 01:08:33,380
아직

7901
01:08:33,380 --> 01:08:33,720
현재

7902
01:08:33,720 --> 01:08:33,920
하고

7903
01:08:33,920 --> 01:08:34,140
있는

7904
01:08:34,140 --> 01:08:34,480
밖에는

7905
01:08:34,480 --> 01:08:34,900
메모리

7906
01:08:34,900 --> 01:08:35,260
액세스

7907
01:08:35,260 --> 01:08:35,900
스테이지이기

7908
01:08:35,900 --> 01:08:36,240
때문에

7909
01:08:36,880 --> 01:08:37,180
영향을

7910
01:08:37,180 --> 01:08:37,380
안

7911
01:08:37,440 --> 01:08:37,540
주는

7912
01:08:37,540 --> 01:08:37,900
거예요.

7913
01:08:38,160 --> 01:08:38,360
현재

7914
01:08:38,480 --> 01:08:38,920
클락사이클

7915
01:08:38,920 --> 01:08:39,480
내에서는.

7916
01:08:39,960 --> 01:08:40,140
근데

7917
01:08:40,140 --> 01:08:40,440
이번

7918
01:08:40,440 --> 01:08:41,180
클락사이클이

7919
01:08:41,180 --> 01:08:41,820
끝나면

7920
01:08:41,820 --> 01:08:42,360
우리가

7921
01:08:42,360 --> 01:08:42,660
맨

7922
01:08:42,660 --> 01:08:43,220
writeback에

7923
01:08:43,220 --> 01:08:43,560
있던

7924
01:08:43,560 --> 01:08:43,800
이

7925
01:08:43,800 --> 01:08:44,240
정보는

7926
01:08:44,240 --> 01:08:45,080
날아가고

7927
01:08:45,080 --> 01:08:45,520
그

7928
01:08:45,520 --> 01:08:45,760
다음

7929
01:08:45,760 --> 01:08:46,540
클락사이클에

7930
01:08:46,540 --> 01:08:47,140
writeback을

7931
01:08:47,140 --> 01:08:47,360
해야

7932
01:08:47,360 --> 01:08:47,580
될

7933
01:08:47,580 --> 01:08:47,820
add

7934
01:08:47,820 --> 01:08:48,320
명령에

7935
01:08:48,320 --> 01:08:48,460
대한

7936
01:08:48,460 --> 01:08:48,860
정보가

7937
01:08:48,860 --> 01:08:49,380
넘어오게

7938
01:08:49,380 --> 01:08:49,880
되니까

7939
01:08:49,880 --> 01:08:51,120
reswrite이

7940
01:08:51,120 --> 01:08:51,580
이번

7941
01:08:51,580 --> 01:08:52,080
클락사이클

7942
01:08:52,300 --> 01:08:52,480
끝나는데

7943
01:08:52,480 --> 01:08:52,780
1으로

7944
01:08:52,780 --> 01:08:53,440
업데이트되어

7945
01:08:53,440 --> 01:08:53,600
있을

7946
01:08:53,600 --> 01:08:54,000
거고

7947
01:08:54,000 --> 01:08:54,380
그럼

7948
01:08:54,380 --> 01:08:54,560
그

7949
01:08:54,560 --> 01:08:54,760
다음

7950
01:08:54,760 --> 01:08:55,420
클락사이클

7951
01:08:55,560 --> 01:08:55,780
때는

7952
01:08:55,780 --> 01:08:56,800
add를

7953
01:08:56,800 --> 01:08:57,140
위한

7954
01:08:57,140 --> 01:08:58,580
writeback

7955
01:08:58,680 --> 01:08:59,630
수행을

7956
01:09:00,720 --> 01:09:01,020
위해서

7957
01:09:01,020 --> 01:09:01,740
reswrite

7958
01:09:01,740 --> 01:09:02,100
컨트롤

7959
01:09:02,100 --> 01:09:02,620
시그널이

7960
01:09:02,620 --> 01:09:03,160
1로

7961
01:09:03,160 --> 01:09:03,560
제대로

7962
01:09:03,560 --> 01:09:04,420
들어가게

7963
01:09:04,420 --> 01:09:04,520
됩니다.

7964
01:09:05,200 --> 01:09:05,400
그래서

7965
01:09:05,440 --> 01:09:05,960
데이터가

7966
01:09:05,960 --> 01:09:06,800
쭉쭉쭉쭉

7967
01:09:06,940 --> 01:09:07,240
계속

7968
01:09:07,240 --> 01:09:07,880
한

7969
01:09:07,880 --> 01:09:08,200
칸씩

7970
01:09:08,200 --> 01:09:08,380
한

7971
01:09:08,400 --> 01:09:08,760
칸씩

7972
01:09:09,040 --> 01:09:09,280
쭉쭉쭉

7973
01:09:09,280 --> 01:09:09,900
밀려나게

7974
01:09:09,900 --> 01:09:10,100
되는

7975
01:09:10,300 --> 01:09:10,480
구조를

7976
01:09:10,480 --> 01:09:10,840
가지게

7977
01:09:10,840 --> 01:09:10,980
되는

7978
01:09:10,980 --> 01:09:11,160
겁니다.

7979
01:09:11,820 --> 01:09:12,260
파이프라이닝을

7980
01:09:12,260 --> 01:09:12,460
하게

7981
01:09:12,460 --> 01:09:12,720
됩니다.

7982
01:09:14,160 --> 01:09:14,280
자

7983
01:09:14,280 --> 01:09:14,760
그래서

7984
01:09:14,760 --> 01:09:15,460
요거를

7985
01:09:15,460 --> 01:09:15,820
조금

7986
01:09:15,820 --> 01:09:16,340
더

7987
01:09:16,400 --> 01:09:16,620
이제

7988
01:09:16,620 --> 01:09:17,660
다시

7989
01:09:17,660 --> 01:09:18,100
한번

7990
01:09:18,100 --> 01:09:18,420
좀

7991
01:09:18,420 --> 01:09:18,760
highly

7992
01:09:18,760 --> 01:09:19,460
abstract한

7993
01:09:19,580 --> 01:09:19,900
그림으로

7994
01:09:19,900 --> 01:09:20,400
돌아오게

7995
01:09:20,400 --> 01:09:20,640
되면

7996
01:09:20,640 --> 01:09:21,180
우리가

7997
01:09:21,180 --> 01:09:21,800
명령어가

7998
01:09:21,800 --> 01:09:22,400
계속

7999
01:09:22,400 --> 01:09:23,300
많아지면

8000
01:09:23,640 --> 01:09:23,800
한

8001
01:09:23,800 --> 01:09:24,600
순간에는

8002
01:09:24,600 --> 01:09:25,100
우리가

8003
01:09:25,100 --> 01:09:25,400
5

8004
01:09:25,400 --> 01:09:25,620
stage

8005
01:09:25,620 --> 01:09:26,260
pipeline을

8006
01:09:26,260 --> 01:09:26,560
구성을

8007
01:09:26,560 --> 01:09:26,700
했으니까

8008
01:09:28,020 --> 01:09:28,220
5

8009
01:09:28,220 --> 01:09:28,480
stage

8010
01:09:28,480 --> 01:09:29,240
pipeline이면

8011
01:09:29,240 --> 01:09:29,660
동시에

8012
01:09:29,660 --> 01:09:30,120
실행하는

8013
01:09:30,200 --> 01:09:30,560
명령어가

8014
01:09:30,560 --> 01:09:30,820
최대

8015
01:09:30,820 --> 01:09:31,320
5개입니다.

8016
01:09:31,940 --> 01:09:32,100
그러면

8017
01:09:32,100 --> 01:09:32,680
5개의

8018
01:09:32,680 --> 01:09:33,580
명령어들이

8019
01:09:33,900 --> 01:09:34,000
뒤에

8020
01:09:34,000 --> 01:09:34,700
등장하는

8021
01:09:34,740 --> 01:09:35,100
애들이

8022
01:09:35,100 --> 01:09:35,640
if

8023
01:09:35,640 --> 01:09:36,820
그리고

8024
01:09:36,820 --> 01:09:37,220
id,

8025
01:09:37,340 --> 01:09:37,600
ex

8026
01:09:37,600 --> 01:09:38,400
채울거고

8027
01:09:38,660 --> 01:09:39,000
초반에

8028
01:09:39,000 --> 01:09:39,580
등장하던

8029
01:09:39,580 --> 01:09:39,900
애들의

8030
01:09:39,900 --> 01:09:40,440
명령어가

8031
01:09:40,440 --> 01:09:41,020
끝나고

8032
01:09:41,020 --> 01:09:41,220
있는

8033
01:09:41,220 --> 01:09:41,320
단계

8034
01:09:41,920 --> 01:09:42,160
저런

8035
01:09:42,160 --> 01:09:42,860
클락사이클이

8036
01:09:42,860 --> 01:09:43,100
많이

8037
01:09:43,180 --> 01:09:43,520
존재를

8038
01:09:43,520 --> 01:09:43,760
하게

8039
01:09:43,760 --> 01:09:44,220
되겠죠.

8040
01:09:44,640 --> 01:09:44,800
그리고

8041
01:09:44,800 --> 01:09:45,380
명령어가

8042
01:09:45,380 --> 01:09:45,900
많으면

8043
01:09:45,900 --> 01:09:46,740
많을수록

8044
01:09:46,740 --> 01:09:47,460
이런

8045
01:09:47,460 --> 01:09:48,040
식으로

8046
01:09:48,040 --> 01:09:48,720
늘어났기

8047
01:09:48,720 --> 01:09:49,080
때문에

8048
01:09:50,460 --> 01:09:50,560
이제

8049
01:09:50,560 --> 01:09:51,060
이

8050
01:09:51,060 --> 01:09:52,080
파이프라이닝은

8051
01:09:52,280 --> 01:09:52,580
사실

8052
01:09:52,580 --> 01:09:53,420
명령어가

8053
01:09:53,420 --> 01:09:53,900
아주

8054
01:09:53,900 --> 01:09:54,280
많은

8055
01:09:54,280 --> 01:09:55,180
프로그램들에

8056
01:09:55,180 --> 01:09:55,700
굉장히

8057
01:09:55,700 --> 01:09:56,320
적합한

8058
01:09:56,520 --> 01:09:57,040
구조가

8059
01:09:57,220 --> 01:09:57,320
되게

8060
01:09:57,320 --> 01:09:57,480
됩니다.

8061
01:09:58,440 --> 01:09:58,580
예를

8062
01:09:58,580 --> 01:09:58,760
들어서

8063
01:09:58,760 --> 01:09:59,180
명령어가

8064
01:09:59,180 --> 01:09:59,700
2개에요.

8065
01:10:00,560 --> 01:10:01,060
2개면

8066
01:10:01,060 --> 01:10:02,020
파이프라이닝

8067
01:10:02,740 --> 01:10:03,020
하드웨어

8068
01:10:03,020 --> 01:10:03,360
구조

8069
01:10:03,360 --> 01:10:03,820
꽤

8070
01:10:03,820 --> 01:10:04,480
비싸거든요.

8071
01:10:04,700 --> 01:10:04,900
구현하기.

8072
01:10:05,720 --> 01:10:05,960
그러면

8073
01:10:05,960 --> 01:10:06,720
그냥

8074
01:10:06,720 --> 01:10:07,220
싱글사이클

8075
01:10:07,220 --> 01:10:07,600
cpu

8076
01:10:07,600 --> 01:10:07,940
해도

8077
01:10:07,940 --> 01:10:08,660
물론

8078
01:10:08,660 --> 01:10:09,080
느리긴

8079
01:10:09,080 --> 01:10:09,320
하겠지만,

8080
01:10:10,080 --> 01:10:10,140
근데

8081
01:10:10,140 --> 01:10:10,340
뭐

8082
01:10:10,880 --> 01:10:11,200
그다지

8083
01:10:11,440 --> 01:10:11,720
크게

8084
01:10:11,720 --> 01:10:12,260
이득을

8085
01:10:12,260 --> 01:10:12,380
볼

8086
01:10:12,420 --> 01:10:12,520
건

8087
01:10:12,520 --> 01:10:12,640
없습니다.

8088
01:10:13,260 --> 01:10:13,420
하드웨어

8089
01:10:13,420 --> 01:10:13,780
비용을

8090
01:10:13,900 --> 01:10:14,340
했을

8091
01:10:14,340 --> 01:10:14,420
때.

8092
01:10:15,080 --> 01:10:15,180
근데

8093
01:10:15,180 --> 01:10:15,560
뭐

8094
01:10:15,560 --> 01:10:15,720
제가

8095
01:10:15,720 --> 01:10:16,000
자주

8096
01:10:16,000 --> 01:10:16,440
말씀드린

8097
01:10:16,440 --> 01:10:16,780
것처럼

8098
01:10:16,780 --> 01:10:17,420
우리

8099
01:10:17,420 --> 01:10:18,140
프로그램들은

8100
01:10:18,140 --> 01:10:19,120
워낙에

8101
01:10:19,120 --> 01:10:19,480
많은

8102
01:10:19,480 --> 01:10:20,160
명령어들로

8103
01:10:20,160 --> 01:10:20,480
구성이

8104
01:10:20,640 --> 01:10:20,740
되어

8105
01:10:20,740 --> 01:10:21,160
있다

8106
01:10:21,160 --> 01:10:21,620
보니까

8107
01:10:22,500 --> 01:10:22,700
그러면

8108
01:10:22,700 --> 01:10:23,460
우리는

8109
01:10:23,460 --> 01:10:23,840
결국

8110
01:10:23,840 --> 01:10:24,120
여러

8111
01:10:24,120 --> 01:10:24,540
명령어를

8112
01:10:24,540 --> 01:10:24,900
동시에

8113
01:10:24,900 --> 01:10:25,820
수행을

8114
01:10:25,820 --> 01:10:26,020
해서,

8115
01:10:26,240 --> 01:10:26,660
스로프즈를

8116
01:10:26,660 --> 01:10:27,180
올려서

8117
01:10:27,180 --> 01:10:27,940
전체

8118
01:10:27,940 --> 01:10:28,360
프로그램

8119
01:10:28,360 --> 01:10:28,860
엑스퓨션

8120
01:10:29,160 --> 01:10:29,280
타임을

8121
01:10:29,280 --> 01:10:30,500
줄여주는

8122
01:10:30,500 --> 01:10:31,100
이

8123
01:10:31,440 --> 01:10:31,980
파이프라이닝이

8124
01:10:32,120 --> 01:10:32,220
잘

8125
01:10:32,220 --> 01:10:32,680
통하게

8126
01:10:32,680 --> 01:10:33,740
된다고

8127
01:10:33,740 --> 01:10:34,480
보시면

8128
01:10:34,480 --> 01:10:35,100
되겠습니다.

8129
01:10:36,800 --> 01:10:36,980
그래서

8130
01:10:36,980 --> 01:10:37,340
요거를

8131
01:10:37,340 --> 01:10:37,660
약간

8132
01:10:37,660 --> 01:10:38,460
하드웨어적으로

8133
01:10:38,460 --> 01:10:38,940
그려보면

8134
01:10:38,940 --> 01:10:39,480
이렇게

8135
01:10:39,480 --> 01:10:40,080
나타나게

8136
01:10:40,080 --> 01:10:40,420
되는데,

8137
01:10:40,880 --> 01:10:41,000
여기

8138
01:10:41,000 --> 01:10:41,420
살짝

8139
01:10:41,420 --> 01:10:42,340
헷갈리실까봐

8140
01:10:42,340 --> 01:10:42,640
제가

8141
01:10:42,640 --> 01:10:42,960
조금

8142
01:10:42,960 --> 01:10:43,480
상세하게

8143
01:10:43,480 --> 01:10:43,860
말씀을

8144
01:10:43,860 --> 01:10:44,220
드리면

8145
01:10:45,300 --> 01:10:45,820
시간은

8146
01:10:45,960 --> 01:10:46,420
왼쪽에서

8147
01:10:46,420 --> 01:10:46,980
오른쪽으로

8148
01:10:47,080 --> 01:10:47,300
흐르는

8149
01:10:47,300 --> 01:10:47,460
겁니다.

8150
01:10:48,260 --> 01:10:48,480
시간은

8151
01:10:48,480 --> 01:10:48,900
왼쪽에서

8152
01:10:48,900 --> 01:10:49,380
오른쪽으로

8153
01:10:49,380 --> 01:10:49,940
흐르는데,

8154
01:10:50,760 --> 01:10:50,880
지금

8155
01:10:50,880 --> 01:10:51,320
사실

8156
01:10:51,320 --> 01:10:51,740
교재

8157
01:10:51,740 --> 01:10:52,080
그림이

8158
01:10:52,080 --> 01:10:52,260
되게

8159
01:10:52,260 --> 01:10:52,980
불식절해요.

8160
01:10:53,180 --> 01:10:53,340
그냥

8161
01:10:53,480 --> 01:10:53,640
저거

8162
01:10:53,640 --> 01:10:53,800
다

8163
01:10:53,800 --> 01:10:54,000
이제

8164
01:10:54,000 --> 01:10:54,500
초록색

8165
01:10:54,620 --> 01:10:54,980
바들로

8166
01:10:54,980 --> 01:10:55,260
해서

8167
01:10:55,380 --> 01:10:55,480
다

8168
01:10:55,480 --> 01:10:56,480
레치들이다라고

8169
01:10:56,480 --> 01:10:56,840
표현해

8170
01:10:56,840 --> 01:10:57,080
놓은

8171
01:10:57,080 --> 01:10:57,360
건데,

8172
01:10:58,180 --> 01:10:58,360
일단

8173
01:10:58,360 --> 01:10:58,940
명령어가

8174
01:10:58,940 --> 01:10:59,460
최대한

8175
01:10:59,460 --> 01:10:59,720
많이

8176
01:10:59,720 --> 01:11:00,220
실행이

8177
01:11:00,220 --> 01:11:00,500
되는

8178
01:11:00,500 --> 01:11:02,000
클라사이클5를

8179
01:11:02,000 --> 01:11:02,400
기준으로

8180
01:11:02,400 --> 01:11:02,840
말씀을

8181
01:11:02,840 --> 01:11:02,940
드리면

8182
01:11:03,960 --> 01:11:04,220
얘는

8183
01:11:04,220 --> 01:11:04,760
지금

8184
01:11:04,760 --> 01:11:05,100
write

8185
01:11:05,100 --> 01:11:05,340
-back

8186
01:11:05,460 --> 01:11:05,920
스테이지이기

8187
01:11:05,920 --> 01:11:06,340
때문에

8188
01:11:06,340 --> 01:11:07,260
mem

8189
01:11:07,260 --> 01:11:09,360
-wb

8190
01:11:09,360 --> 01:11:09,940
-letch가

8191
01:11:09,940 --> 01:11:10,380
input이

8192
01:11:10,380 --> 01:11:10,580
되게

8193
01:11:10,580 --> 01:11:10,680
됩니다.

8194
01:11:11,780 --> 01:11:12,020
그리고

8195
01:11:12,020 --> 01:11:13,200
밑에

8196
01:11:13,200 --> 01:11:13,400
두

8197
01:11:13,400 --> 01:11:13,740
번째

8198
01:11:13,740 --> 01:11:14,640
명령어는

8199
01:11:14,640 --> 01:11:15,220
memory

8200
01:11:15,220 --> 01:11:15,720
-access

8201
01:11:15,720 --> 01:11:16,420
스테이지이기

8202
01:11:16,440 --> 01:11:16,860
때문에

8203
01:11:16,860 --> 01:11:18,080
ex

8204
01:11:18,120 --> 01:11:19,600
-mem

8205
01:11:19,600 --> 01:11:20,580
-letch가

8206
01:11:20,580 --> 01:11:21,060
input

8207
01:11:21,200 --> 01:11:21,580
-letch가

8208
01:11:21,580 --> 01:11:21,800
되게

8209
01:11:21,800 --> 01:11:21,900
되고

8210
01:11:24,300 --> 01:11:24,560
mem

8211
01:11:24,560 --> 01:11:26,360
-wb

8212
01:11:26,360 --> 01:11:26,940
-letch가

8213
01:11:26,940 --> 01:11:27,440
output

8214
01:11:27,440 --> 01:11:27,940
-letch가

8215
01:11:27,940 --> 01:11:28,360
되겠죠.

8216
01:11:29,060 --> 01:11:29,160
자

8217
01:11:29,160 --> 01:11:29,600
그러면

8218
01:11:29,600 --> 01:11:30,520
이

8219
01:11:30,520 --> 01:11:30,960
input

8220
01:11:30,960 --> 01:11:31,560
-letch랑

8221
01:11:31,560 --> 01:11:31,960
이

8222
01:11:31,960 --> 01:11:32,320
output

8223
01:11:32,320 --> 01:11:32,960
-letch가

8224
01:11:32,960 --> 01:11:33,620
사실은

8225
01:11:33,620 --> 01:11:34,120
동일한

8226
01:11:34,120 --> 01:11:35,260
letch다라고

8227
01:11:35,260 --> 01:11:35,680
보셔야

8228
01:11:35,680 --> 01:11:35,820
되는

8229
01:11:35,820 --> 01:11:36,140
겁니다.

8230
01:11:36,420 --> 01:11:36,520
저

8231
01:11:36,520 --> 01:11:36,720
그림에서는.

8232
01:11:38,100 --> 01:11:38,240
우리가

8233
01:11:38,240 --> 01:11:38,560
write

8234
01:11:38,560 --> 01:11:38,820
-back을

8235
01:11:38,820 --> 01:11:39,100
위해서

8236
01:11:39,100 --> 01:11:39,460
mem

8237
01:11:39,460 --> 01:11:39,700
-write

8238
01:11:39,700 --> 01:11:39,860
-back

8239
01:11:39,860 --> 01:11:40,260
-letch에서

8240
01:11:40,260 --> 01:11:40,540
input

8241
01:11:40,600 --> 01:11:40,760
-data

8242
01:11:40,880 --> 01:11:41,540
받아와서

8243
01:11:41,540 --> 01:11:41,940
끝내는

8244
01:11:41,940 --> 01:11:42,320
거고,

8245
01:11:42,680 --> 01:11:42,800
얘는

8246
01:11:42,800 --> 01:11:43,340
ex

8247
01:11:43,400 --> 01:11:43,580
-mem

8248
01:11:43,580 --> 01:11:43,760
-letch랑

8249
01:11:43,760 --> 01:11:44,020
input

8250
01:11:44,020 --> 01:11:44,620
-letch로부터

8251
01:11:44,620 --> 01:11:45,500
받아와서

8252
01:11:45,500 --> 01:11:46,000
mem

8253
01:11:46,000 --> 01:11:46,240
-write

8254
01:11:46,240 --> 01:11:46,440
-back

8255
01:11:46,440 --> 01:11:46,820
-letch랑

8256
01:11:46,820 --> 01:11:47,140
output

8257
01:11:47,140 --> 01:11:47,560
-letch가

8258
01:11:47,560 --> 01:11:47,760
되는

8259
01:11:47,760 --> 01:11:47,980
건데,

8260
01:11:48,540 --> 01:11:48,680
사실

8261
01:11:48,680 --> 01:11:48,920
이

8262
01:11:49,160 --> 01:11:49,320
두

8263
01:11:49,320 --> 01:11:50,120
개의

8264
01:11:50,220 --> 01:11:50,800
letch가

8265
01:11:52,660 --> 01:11:52,760
같은

8266
01:11:52,760 --> 01:11:52,940
letch다.

8267
01:11:54,460 --> 01:11:54,660
그냥

8268
01:11:54,860 --> 01:11:55,260
시간의

8269
01:11:55,260 --> 01:11:55,900
순서만

8270
01:11:55,900 --> 01:11:56,420
봤을

8271
01:11:56,460 --> 01:11:56,700
때

8272
01:11:57,040 --> 01:11:57,520
얘로부터

8273
01:11:57,520 --> 01:11:58,040
데이터가

8274
01:11:58,040 --> 01:11:58,640
읽혀가고

8275
01:11:58,640 --> 01:11:58,980
얘로

8276
01:11:58,980 --> 01:11:59,580
데이터가

8277
01:11:59,580 --> 01:12:00,280
쓰여지는,

8278
01:12:00,540 --> 01:12:00,640
그냥

8279
01:12:00,640 --> 01:12:00,780
그

8280
01:12:00,780 --> 01:12:01,200
시간의

8281
01:12:01,200 --> 01:12:01,720
순서상을

8282
01:12:01,720 --> 01:12:02,300
나타내느라

8283
01:12:02,300 --> 01:12:02,500
두

8284
01:12:02,500 --> 01:12:02,720
개가

8285
01:12:02,900 --> 01:12:03,000
복사가

8286
01:12:03,000 --> 01:12:03,180
된

8287
01:12:03,180 --> 01:12:03,420
거지.

8288
01:12:03,720 --> 01:12:03,940
그래서

8289
01:12:04,140 --> 01:12:04,580
사실은

8290
01:12:04,580 --> 01:12:04,940
똑같은

8291
01:12:04,940 --> 01:12:05,320
letch인데

8292
01:12:05,440 --> 01:12:05,540
두

8293
01:12:05,540 --> 01:12:05,700
개로

8294
01:12:05,700 --> 01:12:06,120
표현이

8295
01:12:06,120 --> 01:12:06,360
된

8296
01:12:06,360 --> 01:12:06,560
거다.

8297
01:12:06,880 --> 01:12:07,040
라고

8298
01:12:07,080 --> 01:12:07,340
아시면

8299
01:12:07,340 --> 01:12:07,620
되고,

8300
01:12:08,240 --> 01:12:08,340
같은

8301
01:12:08,340 --> 01:12:09,240
원리로

8302
01:12:09,880 --> 01:12:10,360
얘랑

8303
01:12:10,360 --> 01:12:12,160
얘랑이

8304
01:12:12,380 --> 01:12:12,500
이제

8305
01:12:13,220 --> 01:12:13,320
같은

8306
01:12:13,320 --> 01:12:14,160
letch가

8307
01:12:14,160 --> 01:12:14,460
되게

8308
01:12:14,460 --> 01:12:14,980
됩니다.

8309
01:12:15,640 --> 01:12:15,880
ex

8310
01:12:15,880 --> 01:12:16,200
-mem

8311
01:12:16,200 --> 01:12:16,600
-letch가

8312
01:12:16,600 --> 01:12:16,840
되게

8313
01:12:16,840 --> 01:12:17,360
되고,

8314
01:12:18,260 --> 01:12:21,000
그리고 그중

8315
01:12:21,140 --> 01:12:21,240
ex

8316
01:12:21,240 --> 01:12:21,520
-mem

8317
01:12:21,520 --> 01:12:21,880
-letch

8318
01:12:22,080 --> 01:12:22,180
두

8319
01:12:22,180 --> 01:12:22,420
개가

8320
01:12:22,420 --> 01:12:22,600
되게

8321
01:12:22,600 --> 01:12:22,940
되고,

8322
01:12:23,200 --> 01:12:23,300
이제

8323
01:12:23,300 --> 01:12:23,520
세

8324
01:12:23,520 --> 01:12:23,740
번째

8325
01:12:23,740 --> 01:12:24,300
명령어는

8326
01:12:24,300 --> 01:12:25,060
ex니까

8327
01:12:25,060 --> 01:12:25,920
얘에게는

8328
01:12:25,920 --> 01:12:26,220
output

8329
01:12:26,220 --> 01:12:26,640
-letch,

8330
01:12:26,960 --> 01:12:27,180
memory

8331
01:12:27,180 --> 01:12:27,460
-access

8332
01:12:27,460 --> 01:12:28,020
-stage인

8333
01:12:28,020 --> 01:12:28,440
얘에게는

8334
01:12:28,440 --> 01:12:28,640
input

8335
01:12:28,640 --> 01:12:29,320
-letch가

8336
01:12:29,360 --> 01:12:29,500
되게

8337
01:12:29,500 --> 01:12:29,740
되는

8338
01:12:29,740 --> 01:12:30,180
거고,

8339
01:12:30,860 --> 01:12:31,100
이렇게

8340
01:12:31,100 --> 01:12:31,300
두

8341
01:12:31,300 --> 01:12:31,440
개

8342
01:12:31,440 --> 01:12:31,640
또

8343
01:12:31,640 --> 01:12:31,920
같은

8344
01:12:31,920 --> 01:12:32,300
letch,

8345
01:12:32,720 --> 01:12:32,820
그리고

8346
01:12:32,820 --> 01:12:33,180
이렇게

8347
01:12:33,180 --> 01:12:33,440
두

8348
01:12:33,540 --> 01:12:33,640
개

8349
01:12:33,640 --> 01:12:33,960
또

8350
01:12:33,960 --> 01:12:34,220
같은

8351
01:12:34,220 --> 01:12:34,680
letch.

8352
01:12:35,080 --> 01:12:35,240
그래서

8353
01:12:35,420 --> 01:12:35,520
총

8354
01:12:35,520 --> 01:12:36,140
letch는

8355
01:12:36,140 --> 01:12:36,560
네

8356
01:12:36,560 --> 01:12:37,200
개가

8357
01:12:37,200 --> 01:12:37,420
된다.

8358
01:12:37,840 --> 01:12:38,040
라고

8359
01:12:38,260 --> 01:12:38,360
생각을

8360
01:12:38,360 --> 01:12:38,760
하시면

8361
01:12:38,760 --> 01:12:39,380
됩니다.

8362
01:12:41,160 --> 01:12:41,260
그래서

8363
01:12:41,260 --> 01:12:42,000
이제

8364
01:12:42,000 --> 01:12:42,720
딱

8365
01:12:42,720 --> 01:12:43,300
pipeline

8366
01:12:43,300 --> 01:12:43,660
-stage

8367
01:12:43,660 --> 01:12:44,020
-cycle

8368
01:12:44,020 --> 01:12:44,360
-5,

8369
01:12:44,700 --> 01:12:44,800
이제

8370
01:12:44,800 --> 01:12:45,020
좀

8371
01:12:45,020 --> 01:12:45,320
서로

8372
01:12:45,320 --> 01:12:45,580
다른

8373
01:12:45,580 --> 01:12:46,160
명령어들이

8374
01:12:46,160 --> 01:12:46,820
섞여있는

8375
01:12:46,820 --> 01:12:47,220
이

8376
01:12:47,260 --> 01:12:47,560
구조를

8377
01:12:47,560 --> 01:12:47,980
보여주는

8378
01:12:47,980 --> 01:12:48,300
겁니다.

8379
01:12:48,720 --> 01:12:48,920
그래서

8380
01:12:48,920 --> 01:12:49,520
write

8381
01:12:49,520 --> 01:12:49,620
-back,

8382
01:12:49,960 --> 01:12:50,060
memory

8383
01:12:50,060 --> 01:12:50,180
-access,

8384
01:12:50,600 --> 01:12:50,700
execution,

8385
01:12:51,160 --> 01:12:51,480
instruction

8386
01:12:51,480 --> 01:12:51,820
-decode,

8387
01:12:51,920 --> 01:12:52,220
instruction

8388
01:12:52,380 --> 01:12:52,640
-batch

8389
01:12:52,820 --> 01:12:53,000
이렇게

8390
01:12:53,000 --> 01:12:53,300
하고

8391
01:12:53,300 --> 01:12:53,680
있는데,

8392
01:12:54,280 --> 01:12:54,540
모두

8393
01:12:54,540 --> 01:12:55,060
패턴은

8394
01:12:55,060 --> 01:12:55,460
똑같아요.

8395
01:12:55,560 --> 01:12:55,700
한

8396
01:12:55,700 --> 01:12:55,920
프로그램

8397
01:12:56,060 --> 01:12:56,160
사이클

8398
01:12:56,160 --> 01:12:56,480
탕!

8399
01:12:56,520 --> 01:12:56,880
튀면

8400
01:12:56,880 --> 01:12:57,360
뭐

8401
01:12:57,360 --> 01:12:57,860
해가지고

8402
01:12:57,860 --> 01:12:58,000
저장.

8403
01:12:58,880 --> 01:12:59,020
탕!

8404
01:12:59,200 --> 01:12:59,300
튀면

8405
01:12:59,300 --> 01:12:59,480
뭐

8406
01:12:59,480 --> 01:12:59,660
해서

8407
01:12:59,660 --> 01:12:59,840
저장.

8408
01:13:00,060 --> 01:13:00,300
탕!

8409
01:13:00,420 --> 01:13:00,580
튀면

8410
01:13:00,620 --> 01:13:00,720
뭐

8411
01:13:00,720 --> 01:13:00,860
해서

8412
01:13:00,860 --> 01:13:01,240
저장.

8413
01:13:01,680 --> 01:13:01,980
탕!

8414
01:13:02,040 --> 01:13:02,380
튀면

8415
01:13:02,380 --> 01:13:03,100
pc

8416
01:13:03,100 --> 01:13:03,420
-plus

8417
01:13:03,540 --> 01:13:03,680
-4

8418
01:13:03,680 --> 01:13:04,200
해가지고

8419
01:13:04,200 --> 01:13:04,820
데이터의

8420
01:13:04,820 --> 01:13:05,380
메모리,

8421
01:13:05,680 --> 01:13:06,100
instruction

8422
01:13:06,220 --> 01:13:06,440
-map이

8423
01:13:06,960 --> 01:13:07,060
접근해서

8424
01:13:07,060 --> 01:13:07,460
if

8425
01:13:07,540 --> 01:13:08,340
-id에다가

8426
01:13:08,340 --> 01:13:08,820
salite

8427
01:13:08,860 --> 01:13:09,160
-data

8428
01:13:09,320 --> 01:13:09,560
쓰고

8429
01:13:09,560 --> 01:13:10,140
pc

8430
01:13:10,220 --> 01:13:10,400
-plus

8431
01:13:10,400 --> 01:13:10,640
-4

8432
01:13:10,640 --> 01:13:11,000
결과

8433
01:13:11,000 --> 01:13:11,140
저장.

8434
01:13:12,120 --> 01:13:12,500
이렇게 하게

8435
01:13:12,500 --> 01:13:12,960
된다.

8436
01:13:13,320 --> 01:13:13,480
그리고

8437
01:13:13,480 --> 01:13:14,120
input은

8438
01:13:14,120 --> 01:13:14,620
input

8439
01:13:14,620 --> 01:13:15,020
-letch가

8440
01:13:15,020 --> 01:13:15,320
있고,

8441
01:13:15,880 --> 01:13:16,480
output은

8442
01:13:16,480 --> 01:13:16,600
또

8443
01:13:16,600 --> 01:13:16,880
output

8444
01:13:16,880 --> 01:13:17,360
-letch에다가

8445
01:13:17,360 --> 01:13:17,660
같이

8446
01:13:17,920 --> 01:13:18,060
쓰게

8447
01:13:18,060 --> 01:13:18,260
되는.

8448
01:13:18,840 --> 01:13:19,020
그래서

8449
01:13:19,020 --> 01:13:19,900
여러분들은

8450
01:13:20,040 --> 01:13:20,440
일종의

8451
01:13:20,440 --> 01:13:20,820
나중에

8452
01:13:20,820 --> 01:13:21,660
그

8453
01:13:21,660 --> 01:13:22,380
뭐

8454
01:13:22,380 --> 01:13:22,840
assign을

8455
01:13:22,840 --> 01:13:23,000
할

8456
01:13:23,000 --> 01:13:23,160
때도

8457
01:13:23,160 --> 01:13:23,840
마찬가지로

8458
01:13:23,840 --> 01:13:24,220
실제

8459
01:13:24,220 --> 01:13:24,380
이

8460
01:13:24,380 --> 01:13:24,780
하드웨어

8461
01:13:24,780 --> 01:13:25,160
구조를

8462
01:13:25,160 --> 01:13:25,940
이해하시기에

8463
01:13:25,940 --> 01:13:26,100
좀

8464
01:13:26,160 --> 01:13:26,400
어떻게

8465
01:13:26,920 --> 01:13:27,020
생각하시면

8466
01:13:27,020 --> 01:13:27,200
되냐면,

8467
01:13:28,560 --> 01:13:28,900
if

8468
01:13:28,900 --> 01:13:29,560
-id,

8469
01:13:29,740 --> 01:13:30,140
ex

8470
01:13:30,140 --> 01:13:30,520
-man,

8471
01:13:30,640 --> 01:13:30,880
write

8472
01:13:30,880 --> 01:13:31,080
-back

8473
01:13:31,080 --> 01:13:31,480
얘네가

8474
01:13:31,480 --> 01:13:31,780
모두

8475
01:13:31,780 --> 01:13:32,560
독립적인

8476
01:13:32,560 --> 01:13:33,120
함수라고

8477
01:13:33,120 --> 01:13:33,740
생각하시면

8478
01:13:33,740 --> 01:13:34,400
편해요.

8479
01:13:34,780 --> 01:13:35,180
독립적인

8480
01:13:35,180 --> 01:13:35,740
5개의

8481
01:13:35,740 --> 01:13:36,140
함수가

8482
01:13:36,140 --> 01:13:36,600
있는데,

8483
01:13:37,040 --> 01:13:37,140
그

8484
01:13:37,140 --> 01:13:37,540
함수

8485
01:13:37,540 --> 01:13:38,180
5개를

8486
01:13:38,180 --> 01:13:39,040
동시에

8487
01:13:39,040 --> 01:13:39,360
우리가

8488
01:13:39,360 --> 01:13:39,640
한

8489
01:13:39,720 --> 01:13:39,860
클럽

8490
01:13:39,860 --> 01:13:40,420
사이클에

8491
01:13:40,420 --> 01:13:40,800
positive

8492
01:13:40,820 --> 01:13:41,300
edge랑

8493
01:13:41,300 --> 01:13:41,700
negative

8494
01:13:41,720 --> 01:13:42,100
edge가

8495
01:13:42,100 --> 01:13:42,480
들어올

8496
01:13:42,480 --> 01:13:42,640
때,

8497
01:13:43,220 --> 01:13:43,360
너

8498
01:13:43,360 --> 01:13:43,900
그

8499
01:13:43,900 --> 01:13:44,200
함수

8500
01:13:44,200 --> 01:13:44,460
내에서

8501
01:13:44,460 --> 01:13:45,180
실행해!

8502
01:13:45,420 --> 01:13:45,600
라고

8503
01:13:45,600 --> 01:13:45,980
동시에

8504
01:13:45,980 --> 01:13:46,480
시그널을

8505
01:13:46,480 --> 01:13:46,660
딱

8506
01:13:46,660 --> 01:13:46,880
주는

8507
01:13:46,880 --> 01:13:47,120
겁니다.

8508
01:13:48,080 --> 01:13:48,300
그러면

8509
01:13:48,300 --> 01:13:50,220
id라는

8510
01:13:50,220 --> 01:13:50,940
함수는

8511
01:13:52,060 --> 01:13:52,300
if

8512
01:13:52,300 --> 01:13:52,700
-id

8513
01:13:52,700 --> 01:13:53,120
-letch에

8514
01:13:53,120 --> 01:13:53,680
들어있는

8515
01:13:53,740 --> 01:13:54,200
데이터가

8516
01:13:54,200 --> 01:13:54,500
input

8517
01:13:54,500 --> 01:13:54,960
-data가

8518
01:13:54,960 --> 01:13:55,200
되고,

8519
01:13:55,380 --> 01:13:55,520
그

8520
01:13:55,520 --> 01:13:55,900
output

8521
01:13:55,900 --> 01:13:56,460
-data는

8522
01:13:56,460 --> 01:13:56,800
id

8523
01:13:56,800 --> 01:13:57,820
-ex에다가

8524
01:13:57,820 --> 01:13:58,240
저장이

8525
01:13:58,240 --> 01:13:58,580
되게

8526
01:13:58,580 --> 01:13:58,980
되는

8527
01:13:59,480 --> 01:13:59,840
일종의

8528
01:13:59,840 --> 01:13:59,980
그

8529
01:14:00,060 --> 01:14:00,380
하드웨어

8530
01:14:00,380 --> 01:14:01,040
컴비네이션을

8531
01:14:01,300 --> 01:14:01,980
circuit라고

8532
01:14:01,980 --> 01:14:02,360
생각을

8533
01:14:02,360 --> 01:14:02,680
하셔도

8534
01:14:02,680 --> 01:14:02,920
되고,

8535
01:14:03,600 --> 01:14:03,720
근데

8536
01:14:03,720 --> 01:14:04,240
얘가

8537
01:14:04,240 --> 01:14:04,680
이러는

8538
01:14:04,680 --> 01:14:05,180
도중에

8539
01:14:05,180 --> 01:14:06,580
execution이라는

8540
01:14:06,580 --> 01:14:07,220
pipeline

8541
01:14:07,220 --> 01:14:07,740
-stage를

8542
01:14:07,740 --> 01:14:08,160
나타내는

8543
01:14:08,160 --> 01:14:08,360
함수가

8544
01:14:08,360 --> 01:14:08,980
동시에

8545
01:14:08,980 --> 01:14:09,440
실행이

8546
01:14:09,440 --> 01:14:09,620
되고

8547
01:14:09,620 --> 01:14:09,800
있는

8548
01:14:09,800 --> 01:14:10,060
거죠.

8549
01:14:11,180 --> 01:14:11,420
동시에

8550
01:14:11,420 --> 01:14:11,800
memory

8551
01:14:11,800 --> 01:14:12,640
-access라는

8552
01:14:12,640 --> 01:14:12,960
놈도

8553
01:14:12,960 --> 01:14:13,720
실행되고

8554
01:14:13,720 --> 01:14:13,860
있는

8555
01:14:13,860 --> 01:14:13,960
거고,

8556
01:14:14,220 --> 01:14:14,580
동시에

8557
01:14:14,580 --> 01:14:14,880
write

8558
01:14:14,880 --> 01:14:15,120
-back도

8559
01:14:15,120 --> 01:14:15,580
실행되고

8560
01:14:15,580 --> 01:14:15,740
있는

8561
01:14:15,740 --> 01:14:16,160
거고,

8562
01:14:16,480 --> 01:14:16,940
동시에

8563
01:14:16,940 --> 01:14:17,380
instruction

8564
01:14:17,380 --> 01:14:17,940
-match도

8565
01:14:17,940 --> 01:14:18,560
실행되고

8566
01:14:18,560 --> 01:14:18,980
있는

8567
01:14:18,980 --> 01:14:19,620
것입니다.

8568
01:14:20,260 --> 01:14:20,500
즉

8569
01:14:20,580 --> 01:14:21,560
5개의

8570
01:14:21,620 --> 01:14:22,000
서로

8571
01:14:22,000 --> 01:14:22,260
다른

8572
01:14:22,260 --> 01:14:23,300
function이

8573
01:14:23,440 --> 01:14:23,900
여러분들이

8574
01:14:23,900 --> 01:14:24,440
평상시

8575
01:14:24,440 --> 01:14:24,860
코딩할

8576
01:14:24,860 --> 01:14:24,940
때

8577
01:14:24,940 --> 01:14:25,520
생각하시는

8578
01:14:25,520 --> 01:14:26,020
function

8579
01:14:26,020 --> 01:14:26,300
after

8580
01:14:26,300 --> 01:14:26,820
function이

8581
01:14:27,040 --> 01:14:27,140
아니라

8582
01:14:27,140 --> 01:14:27,760
거의

8583
01:14:27,760 --> 01:14:28,660
멀티스레드나

8584
01:14:28,660 --> 01:14:29,760
멀티코어

8585
01:14:29,840 --> 01:14:29,960
이런

8586
01:14:29,960 --> 01:14:30,280
데서

8587
01:14:30,280 --> 01:14:30,500
완전

8588
01:14:30,740 --> 01:14:31,220
병렬적으로

8589
01:14:31,220 --> 01:14:31,780
따라다

8590
01:14:31,780 --> 01:14:32,280
실행되는

8591
01:14:32,280 --> 01:14:32,380
거다.

8592
01:14:32,940 --> 01:14:33,220
그래서

8593
01:14:33,220 --> 01:14:33,780
사이클,

8594
01:14:33,960 --> 01:14:34,060
한

8595
01:14:34,060 --> 01:14:34,480
사이클,

8596
01:14:34,520 --> 01:14:34,780
드랍,

8597
01:14:35,160 --> 01:14:35,260
그

8598
01:14:35,260 --> 01:14:35,400
다음

8599
01:14:35,400 --> 01:14:35,720
사이클,

8600
01:14:35,760 --> 01:14:35,900
드랍,

8601
01:14:36,100 --> 01:14:36,220
그

8602
01:14:36,220 --> 01:14:36,320
다음

8603
01:14:36,320 --> 01:14:36,620
사이클,

8604
01:14:36,720 --> 01:14:36,820
드랍,

8605
01:14:37,040 --> 01:14:37,240
이렇게

8606
01:14:37,240 --> 01:14:37,540
같이

8607
01:14:37,580 --> 01:14:38,040
실행되는

8608
01:14:38,040 --> 01:14:38,600
구조다.

8609
01:14:39,080 --> 01:14:39,180
라고

8610
01:14:39,540 --> 01:14:39,640
생각을

8611
01:14:39,640 --> 01:14:40,060
하셔도

8612
01:14:40,060 --> 01:14:40,640
됩니다.

8613
01:14:41,740 --> 01:14:41,880
그럼

8614
01:14:41,880 --> 01:14:42,080
이제

8615
01:14:42,080 --> 01:14:42,440
control

8616
01:14:42,440 --> 01:14:42,840
-signal을

8617
01:14:42,840 --> 01:14:43,100
넣게

8618
01:14:43,100 --> 01:14:43,340
되면

8619
01:14:43,340 --> 01:14:45,540
우리가

8620
01:14:45,540 --> 01:14:46,080
일단

8621
01:14:46,080 --> 01:14:46,420
각

8622
01:14:46,520 --> 01:14:46,760
pipeline

8623
01:14:46,980 --> 01:14:47,580
-stage에

8624
01:14:47,580 --> 01:14:48,440
들어간

8625
01:14:48,620 --> 01:14:48,880
하드웨어의

8626
01:14:49,260 --> 01:14:49,360
배치는

8627
01:14:49,360 --> 01:14:49,460
맞췄으니까,

8628
01:14:50,420 --> 01:14:50,520
control

8629
01:14:50,520 --> 01:14:51,020
-signal에

8630
01:14:51,020 --> 01:14:51,440
해당하는

8631
01:14:51,440 --> 01:14:51,860
놈들,

8632
01:14:52,160 --> 01:14:52,360
이렇게

8633
01:14:52,380 --> 01:14:53,160
이렇게

8634
01:14:53,160 --> 01:14:53,420
그냥

8635
01:14:53,480 --> 01:14:53,740
우리가

8636
01:14:53,740 --> 01:14:54,300
각자

8637
01:14:54,300 --> 01:14:55,120
맞춰서

8638
01:14:55,340 --> 01:14:56,100
구성을

8639
01:14:56,100 --> 01:14:56,520
넣게

8640
01:14:56,520 --> 01:14:57,000
됩니다.

8641
01:14:57,600 --> 01:14:57,720
그러면

8642
01:14:57,720 --> 01:14:58,060
저런

8643
01:14:58,060 --> 01:14:58,380
식으로

8644
01:14:58,380 --> 01:14:58,860
control

8645
01:14:58,860 --> 01:14:59,360
-signal을

8646
01:14:59,360 --> 01:15:00,140
만들어주는

8647
01:15:00,140 --> 01:15:00,440
가장

8648
01:15:00,440 --> 01:15:01,240
근본적인

8649
01:15:01,240 --> 01:15:01,880
유닛이

8650
01:15:01,880 --> 01:15:02,840
control

8651
01:15:02,840 --> 01:15:03,580
-signal이죠.

8652
01:15:04,220 --> 01:15:05,420
이

8653
01:15:05,420 --> 01:15:05,780
control

8654
01:15:05,780 --> 01:15:06,380
-unit은

8655
01:15:06,380 --> 01:15:07,020
instruction

8656
01:15:07,580 --> 01:15:07,780
-decode

8657
01:15:07,780 --> 01:15:08,180
내에

8658
01:15:08,180 --> 01:15:08,700
배치를

8659
01:15:08,700 --> 01:15:08,960
할

8660
01:15:08,960 --> 01:15:09,620
수밖에

8661
01:15:09,620 --> 01:15:09,800
없습니다.

8662
01:15:10,860 --> 01:15:10,960
그

8663
01:15:10,960 --> 01:15:11,300
이유는

8664
01:15:11,300 --> 01:15:11,740
if

8665
01:15:12,200 --> 01:15:12,300
-id

8666
01:15:12,300 --> 01:15:13,160
-let's에

8667
01:15:13,160 --> 01:15:14,180
4바이트

8668
01:15:14,180 --> 01:15:14,740
명령어가

8669
01:15:14,740 --> 01:15:15,380
로드되어

8670
01:15:15,380 --> 01:15:15,620
있을

8671
01:15:15,620 --> 01:15:15,820
것입니다.

8672
01:15:16,740 --> 01:15:16,840
그럼

8673
01:15:16,840 --> 01:15:17,000
이

8674
01:15:17,000 --> 01:15:17,620
4바이트

8675
01:15:17,620 --> 01:15:18,240
명령어의

8676
01:15:18,240 --> 01:15:18,500
op

8677
01:15:18,680 --> 01:15:19,000
-code랑

8678
01:15:19,000 --> 01:15:19,380
function

8679
01:15:19,380 --> 01:15:19,900
-build를

8680
01:15:19,900 --> 01:15:20,300
보고

8681
01:15:20,300 --> 01:15:21,060
control

8682
01:15:21,060 --> 01:15:21,560
-signal을

8683
01:15:21,560 --> 01:15:22,460
만들게

8684
01:15:22,460 --> 01:15:22,680
될

8685
01:15:22,680 --> 01:15:23,000
건데,

8686
01:15:24,040 --> 01:15:24,200
우리가

8687
01:15:24,200 --> 01:15:24,660
직전

8688
01:15:24,660 --> 01:15:25,540
스나이드처럼

8689
01:15:25,540 --> 01:15:26,240
instruction

8690
01:15:26,240 --> 01:15:27,120
-decode에는

8691
01:15:27,120 --> 01:15:28,060
write

8692
01:15:28,060 --> 01:15:28,600
-back에는

8693
01:15:28,600 --> 01:15:28,900
reg

8694
01:15:28,900 --> 01:15:29,240
-write

8695
01:15:29,500 --> 01:15:29,600
control

8696
01:15:29,600 --> 01:15:30,100
-signal,

8697
01:15:30,580 --> 01:15:30,680
그리고

8698
01:15:30,680 --> 01:15:32,200
mem

8699
01:15:32,260 --> 01:15:32,360
-to

8700
01:15:32,360 --> 01:15:32,560
-reg

8701
01:15:32,560 --> 01:15:32,980
-option,

8702
01:15:33,340 --> 01:15:33,500
이

8703
01:15:33,620 --> 01:15:33,720
두

8704
01:15:33,720 --> 01:15:33,920
개의

8705
01:15:33,960 --> 01:15:34,180
control

8706
01:15:34,180 --> 01:15:34,740
-signal을

8707
01:15:34,740 --> 01:15:35,000
write

8708
01:15:35,000 --> 01:15:35,400
-back이라고

8709
01:15:35,400 --> 01:15:35,820
보고,

8710
01:15:36,280 --> 01:15:36,380
이제

8711
01:15:36,380 --> 01:15:36,800
data

8712
01:15:36,800 --> 01:15:37,240
-memory

8713
01:15:37,240 --> 01:15:38,460
-access

8714
01:15:38,880 --> 01:15:38,980
-part에는

8715
01:15:38,980 --> 01:15:39,340
branch

8716
01:15:39,820 --> 01:15:39,920
-signal과

8717
01:15:39,920 --> 01:15:40,220
mem

8718
01:15:40,220 --> 01:15:40,460
-write,

8719
01:15:40,620 --> 01:15:40,760
mem

8720
01:15:40,760 --> 01:15:40,960
-read,

8721
01:15:41,480 --> 01:15:41,620
그리고

8722
01:15:41,620 --> 01:15:42,000
execute

8723
01:15:42,000 --> 01:15:42,640
-stage에는

8724
01:15:42,780 --> 01:15:42,880
ag

8725
01:15:42,880 --> 01:15:43,260
-source,

8726
01:15:43,820 --> 01:15:43,920
그리고

8727
01:15:43,920 --> 01:15:44,240
reg

8728
01:15:44,240 --> 01:15:44,880
-destination,

8729
01:15:45,220 --> 01:15:45,460
이렇게

8730
01:15:45,460 --> 01:15:46,040
control

8731
01:15:46,040 --> 01:15:46,560
-signal을

8732
01:15:46,560 --> 01:15:46,940
배치를

8733
01:15:46,940 --> 01:15:47,620
했다라고

8734
01:15:47,620 --> 01:15:47,740
칩시다.

8735
01:15:48,800 --> 01:15:48,900
그러면

8736
01:15:48,900 --> 01:15:49,140
그

8737
01:15:49,140 --> 01:15:49,560
배치를

8738
01:15:49,560 --> 01:15:49,880
하고

8739
01:15:49,880 --> 01:15:50,320
나면

8740
01:15:50,920 --> 01:15:51,120
우리는

8741
01:15:51,120 --> 01:15:51,640
control

8742
01:15:51,640 --> 01:15:52,200
-unit이

8743
01:15:52,200 --> 01:15:52,740
4바이트

8744
01:15:52,760 --> 01:15:53,260
명령어를

8745
01:15:53,260 --> 01:15:54,360
받아서

8746
01:15:54,920 --> 01:15:55,480
뱉어내는

8747
01:15:55,480 --> 01:15:55,640
그

8748
01:15:55,640 --> 01:15:55,920
다양한

8749
01:15:55,920 --> 01:15:56,340
control

8750
01:15:56,340 --> 01:15:56,960
-signal이

8751
01:15:57,100 --> 01:15:57,600
eventually

8752
01:15:57,600 --> 01:15:58,300
어느

8753
01:15:58,300 --> 01:15:59,180
파이프라인에서

8754
01:15:59,180 --> 01:15:59,560
소모,

8755
01:15:59,880 --> 01:16:00,100
어느

8756
01:16:00,100 --> 01:16:00,600
파이프라인

8757
01:16:00,600 --> 01:16:01,080
스테이지에서

8758
01:16:01,080 --> 01:16:01,520
소모가

8759
01:16:01,520 --> 01:16:01,700
될

8760
01:16:01,700 --> 01:16:02,020
거라는

8761
01:16:02,060 --> 01:16:02,160
걸

8762
01:16:02,160 --> 01:16:02,620
압니다.

8763
01:16:03,520 --> 01:16:03,680
예를

8764
01:16:03,680 --> 01:16:04,020
들어서

8765
01:16:04,020 --> 01:16:04,700
write

8766
01:16:04,700 --> 01:16:05,080
-back이면

8767
01:16:05,080 --> 01:16:05,320
이제

8768
01:16:05,320 --> 01:16:05,620
reg

8769
01:16:05,640 --> 01:16:06,000
-write

8770
01:16:06,000 --> 01:16:06,800
예시가

8771
01:16:06,800 --> 01:16:07,040
있을

8772
01:16:07,040 --> 01:16:07,420
거고,

8773
01:16:07,800 --> 01:16:08,400
memory면

8774
01:16:08,400 --> 01:16:08,880
이제

8775
01:16:08,880 --> 01:16:09,400
memory

8776
01:16:09,400 --> 01:16:09,780
-read

8777
01:16:09,780 --> 01:16:10,120
해야

8778
01:16:10,120 --> 01:16:10,460
되냐,

8779
01:16:10,700 --> 01:16:10,860
아니면

8780
01:16:10,860 --> 01:16:11,220
write

8781
01:16:11,280 --> 01:16:11,460
해야

8782
01:16:11,460 --> 01:16:11,740
되냐,

8783
01:16:12,000 --> 01:16:12,140
이게

8784
01:16:12,140 --> 01:16:12,400
있을

8785
01:16:12,400 --> 01:16:12,720
거고,

8786
01:16:12,940 --> 01:16:13,160
execute

8787
01:16:13,160 --> 01:16:13,780
-stage면

8788
01:16:13,780 --> 01:16:14,000
내가

8789
01:16:14,000 --> 01:16:14,320
현재

8790
01:16:14,320 --> 01:16:14,840
실행해야

8791
01:16:14,840 --> 01:16:15,040
되는

8792
01:16:15,040 --> 01:16:15,640
ALU

8793
01:16:15,640 --> 01:16:16,480
operation냐,

8794
01:16:16,700 --> 01:16:16,860
이런

8795
01:16:16,880 --> 01:16:17,160
것들이

8796
01:16:17,160 --> 01:16:17,420
있겠죠.

8797
01:16:18,100 --> 01:16:18,260
그러면

8798
01:16:18,260 --> 01:16:18,980
얘네들이,

8799
01:16:19,160 --> 01:16:19,360
그럼

8800
01:16:19,620 --> 01:16:19,880
control

8801
01:16:19,880 --> 01:16:20,660
-unit은

8802
01:16:21,020 --> 01:16:21,160
instruction

8803
01:16:21,160 --> 01:16:21,580
-decode

8804
01:16:21,580 --> 01:16:22,060
스테이지에

8805
01:16:22,060 --> 01:16:22,160
있으니까,

8806
01:16:22,820 --> 01:16:23,180
id,

8807
01:16:23,400 --> 01:16:23,720
ex,

8808
01:16:24,080 --> 01:16:24,200
let,

8809
01:16:24,360 --> 01:16:24,460
ch에

8810
01:16:24,460 --> 01:16:24,760
일단

8811
01:16:24,760 --> 01:16:24,980
다

8812
01:16:24,980 --> 01:16:25,440
저장이

8813
01:16:25,440 --> 01:16:25,500
돼.

8814
01:16:26,140 --> 01:16:26,260
그래

8815
01:16:26,260 --> 01:16:26,700
놓고

8816
01:16:27,260 --> 01:16:27,360
execute

8817
01:16:27,360 --> 01:16:28,160
-stage에서는

8818
01:16:28,160 --> 01:16:28,600
execute

8819
01:16:28,660 --> 01:16:28,920
-vary한

8820
01:16:28,920 --> 01:16:29,220
control

8821
01:16:29,420 --> 01:16:29,580
-signal이

8822
01:16:29,580 --> 01:16:29,780
다

8823
01:16:29,780 --> 01:16:30,380
쓰이는데,

8824
01:16:30,520 --> 01:16:30,720
얘는

8825
01:16:30,720 --> 01:16:30,980
이제

8826
01:16:31,020 --> 01:16:31,140
그

8827
01:16:31,140 --> 01:16:31,480
이후에

8828
01:16:31,480 --> 01:16:31,700
필요

8829
01:16:31,940 --> 01:16:32,040
없으니까

8830
01:16:32,040 --> 01:16:32,440
버리고,

8831
01:16:33,200 --> 01:16:33,300
근데

8832
01:16:33,300 --> 01:16:34,300
memory

8833
01:16:34,300 --> 01:16:34,640
-access

8834
01:16:34,640 --> 01:16:35,300
-stage랑

8835
01:16:35,300 --> 01:16:35,820
write

8836
01:16:35,820 --> 01:16:36,020
-back

8837
01:16:36,020 --> 01:16:36,560
-stage를

8838
01:16:36,560 --> 01:16:37,200
위해서는

8839
01:16:37,640 --> 01:16:38,000
얘네들의

8840
01:16:38,000 --> 01:16:38,400
control

8841
01:16:38,640 --> 01:16:39,040
-signal은

8842
01:16:39,040 --> 01:16:39,580
이렇게

8843
01:16:39,580 --> 01:16:40,160
계속

8844
01:16:40,440 --> 01:16:40,680
전달이

8845
01:16:40,780 --> 01:16:40,940
돼야

8846
01:16:40,940 --> 01:16:41,200
되죠.

8847
01:16:41,880 --> 01:16:42,060
그리고

8848
01:16:42,060 --> 01:16:42,500
memory

8849
01:16:42,500 --> 01:16:42,880
-access

8850
01:16:43,120 --> 01:16:43,460
-stage를

8851
01:16:43,460 --> 01:16:43,760
위한

8852
01:16:43,760 --> 01:16:44,120
control

8853
01:16:44,120 --> 01:16:44,720
-signal들은

8854
01:16:44,720 --> 01:16:45,000
memory

8855
01:16:45,000 --> 01:16:45,620
-access

8856
01:16:45,620 --> 01:16:46,020
-stage를

8857
01:16:46,020 --> 01:16:46,160
하고

8858
01:16:46,160 --> 01:16:46,400
나면

8859
01:16:46,400 --> 01:16:46,760
버려집니다.

8860
01:16:47,500 --> 01:16:47,700
그럼

8861
01:16:47,900 --> 01:16:48,080
결국

8862
01:16:48,080 --> 01:16:48,600
마지막

8863
01:16:48,640 --> 01:16:48,960
latch에

8864
01:16:49,140 --> 01:16:49,240
남게

8865
01:16:49,240 --> 01:16:49,440
되는

8866
01:16:49,500 --> 01:16:49,740
것은

8867
01:16:49,740 --> 01:16:50,340
write

8868
01:16:50,940 --> 01:16:51,060
-back를

8869
01:16:51,060 --> 01:16:51,380
위한

8870
01:16:51,380 --> 01:16:51,720
control

8871
01:16:52,340 --> 01:16:52,440
-signal들만

8872
01:16:52,440 --> 01:16:52,840
남게

8873
01:16:52,840 --> 01:16:53,100
되는

8874
01:16:53,100 --> 01:16:53,620
구조다.

8875
01:16:54,080 --> 01:16:54,240
그래서

8876
01:16:54,240 --> 01:16:55,580
데이터를

8877
01:16:55,580 --> 01:16:55,980
저장하는

8878
01:16:55,980 --> 01:16:56,580
latch에다가

8879
01:16:56,580 --> 01:16:57,260
추가로

8880
01:16:57,680 --> 01:16:57,800
control

8881
01:16:57,800 --> 01:16:58,520
-signal들이

8882
01:16:58,520 --> 01:16:58,820
저렇게

8883
01:16:58,920 --> 01:16:59,160
저장이

8884
01:16:59,160 --> 01:17:00,240
된다라고

8885
01:17:00,240 --> 01:17:00,860
이해를

8886
01:17:00,860 --> 01:17:01,160
하시면

8887
01:17:01,160 --> 01:17:01,540
되고요.

8888
01:17:02,140 --> 01:17:02,360
그래서

8889
01:17:02,360 --> 01:17:03,200
저것들까지

8890
01:17:03,200 --> 01:17:03,700
그었을

8891
01:17:03,700 --> 01:17:03,900
때는

8892
01:17:03,900 --> 01:17:04,660
이런

8893
01:17:04,660 --> 01:17:05,020
hardware

8894
01:17:05,020 --> 01:17:05,420
구조를

8895
01:17:05,420 --> 01:17:06,000
가지게

8896
01:17:06,000 --> 01:17:06,560
됩니다.

8897
01:17:07,200 --> 01:17:07,300
control

8898
01:17:07,300 --> 01:17:08,060
-signal들이

8899
01:17:08,060 --> 01:17:08,780
이제

8900
01:17:08,780 --> 01:17:09,260
원래는

8901
01:17:09,360 --> 01:17:09,560
control

8902
01:17:09,560 --> 01:17:10,260
-unit에서

8903
01:17:10,260 --> 01:17:10,740
서로

8904
01:17:10,740 --> 01:17:10,960
다른

8905
01:17:10,960 --> 01:17:11,240
hardware

8906
01:17:11,240 --> 01:17:11,740
-unit한테

8907
01:17:11,740 --> 01:17:11,960
바로

8908
01:17:11,960 --> 01:17:12,540
딴닥딴닥

8909
01:17:12,540 --> 01:17:12,960
썼어요.

8910
01:17:13,400 --> 01:17:13,500
근데

8911
01:17:13,500 --> 01:17:13,820
가장

8912
01:17:13,820 --> 01:17:14,260
중요한

8913
01:17:14,260 --> 01:17:14,740
차이는

8914
01:17:15,320 --> 01:17:15,420
이제

8915
01:17:15,420 --> 01:17:15,700
이

8916
01:17:15,700 --> 01:17:16,780
latch들로부터

8917
01:17:16,780 --> 01:17:17,440
control

8918
01:17:17,440 --> 01:17:17,920
-signal

8919
01:17:17,920 --> 01:17:18,360
값들이

8920
01:17:18,360 --> 01:17:18,500
들어옵니다.

8921
01:17:19,480 --> 01:17:19,600
input

8922
01:17:19,600 --> 01:17:20,200
-latch에

8923
01:17:20,200 --> 01:17:20,680
저장된

8924
01:17:20,680 --> 01:17:21,060
control

8925
01:17:21,060 --> 01:17:21,760
-signal들

8926
01:17:21,760 --> 01:17:22,180
밸류를

8927
01:17:22,180 --> 01:17:22,740
가지고

8928
01:17:22,740 --> 01:17:23,460
현재

8929
01:17:23,460 --> 01:17:23,980
pipeline

8930
01:17:24,500 --> 01:17:24,620
-stage의

8931
01:17:24,620 --> 01:17:25,180
유닛들을

8932
01:17:26,040 --> 01:17:26,140
컨트롤하고

8933
01:17:26,140 --> 01:17:26,920
조작을

8934
01:17:26,920 --> 01:17:27,280
한다.

8935
01:17:27,640 --> 01:17:27,860
라는

8936
01:17:28,040 --> 01:17:28,140
것이

8937
01:17:28,140 --> 01:17:28,740
single

8938
01:17:28,740 --> 01:17:29,000
-cycle

8939
01:17:29,000 --> 01:17:29,500
CPU랑

8940
01:17:29,500 --> 01:17:29,740
가장

8941
01:17:29,740 --> 01:17:30,020
큰

8942
01:17:30,220 --> 01:17:30,860
차이다라고

8943
01:17:30,860 --> 01:17:31,020
볼

8944
01:17:31,140 --> 01:17:31,240
수가

8945
01:17:31,240 --> 01:17:31,420
있습니다.

8946
01:17:32,420 --> 01:17:32,520
네

8947
01:17:32,520 --> 01:17:32,700
오늘

8948
01:17:32,700 --> 01:17:33,040
여기까지

8949
01:17:33,040 --> 01:17:33,600
하고요.

8950
01:17:33,860 --> 01:17:33,920
이제

8951
01:17:33,920 --> 01:17:34,120
오늘

8952
01:17:34,120 --> 01:17:34,400
밤

8953
01:17:34,400 --> 01:17:34,540
내일

8954
01:17:34,540 --> 01:17:34,820
아침

8955
01:17:34,820 --> 01:17:35,180
어싸이

8956
01:17:35,180 --> 01:17:35,480
공부도

8957
01:17:35,480 --> 01:17:35,620
할

8958
01:17:35,840 --> 01:17:35,940
테니까

8959
01:17:35,940 --> 01:17:36,180
그거

8960
01:17:36,180 --> 01:17:36,820
참고하시길

8961
01:17:36,820 --> 01:17:37,060
바랍니다.